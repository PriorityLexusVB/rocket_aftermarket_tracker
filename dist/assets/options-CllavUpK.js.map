{"version":3,"file":"options-CllavUpK.js","sources":["../../src/lib/supabase/safeSelect.js","../../src/lib/options.js"],"sourcesContent":["// src/lib/supabase/safeSelect.js\r\n/**\r\n * Wrap a Postgrest query and make failures loud.\r\n * @param {any} q Postgrest query builder\r\n * @param {string} label optional label for logging\r\n */\r\nexport async function safeSelect(q, label) {\r\n  try {\r\n    const res = await q.throwOnError()\r\n    // q.throwOnError() usually returns { data, error, count }\r\n    return res.data ?? res\r\n  } catch (e) {\r\n    // Keep an informative, searchable log\r\n    // eslint-disable-next-line no-console\r\n    console.error(`[safeSelect] ${label ?? 'query'} failed`, e)\r\n    throw e\r\n  }\r\n}\r\n\r\nexport default safeSelect\r\n","export const toOption = (row, { labelKey = 'name', valueKey = 'id' } = {}) => ({\n  id: row?.[valueKey],\n  value: row?.[valueKey],\n  label: row?.[labelKey] ?? row?.title ?? row?.name ?? String(row?.[valueKey] ?? ''),\n  ...row,\n})\n\nexport const toOptions = (rows, opts) =>\n  Array.isArray(rows) ? rows.map((r) => toOption(r, opts)) : []\n"],"names":["safeSelect","q","label","res","e","toOption","row","labelKey","valueKey","toOptions","rows","opts","r"],"mappings":"AAMO,eAAeA,EAAWC,EAAGC,EAAO,CACzC,GAAI,CACF,MAAMC,EAAM,MAAMF,EAAE,aAAY,EAEhC,OAAOE,EAAI,MAAQA,CACrB,OAASC,EAAG,CAGV,cAAQ,MAAM,gBAAgBF,GAAS,OAAO,UAAWE,CAAC,EACpDA,CACR,CACF,CCjBO,MAAMC,EAAW,CAACC,EAAK,CAAE,SAAAC,EAAW,OAAQ,SAAAC,EAAW,IAAI,EAAK,MAAQ,CAC7E,GAAIF,GAAA,YAAAA,EAAME,GACV,MAAOF,GAAA,YAAAA,EAAME,GACb,OAAOF,GAAA,YAAAA,EAAMC,MAAaD,GAAA,YAAAA,EAAK,SAASA,GAAA,YAAAA,EAAK,OAAQ,QAAOA,GAAA,YAAAA,EAAME,KAAa,EAAE,EACjF,GAAGF,CACL,GAEaG,EAAY,CAACC,EAAMC,IAC9B,MAAM,QAAQD,CAAI,EAAIA,EAAK,IAAKE,GAAMP,EAASO,EAAGD,CAAI,CAAC,EAAI,CAAA"}