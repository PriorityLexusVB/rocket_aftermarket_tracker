{"version":3,"file":"useTenant-DEuWejmK.js","sources":["../../src/hooks/useTenant.js"],"sourcesContent":["// src/hooks/useTenant.js\r\nimport { useEffect, useState, useRef } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport { supabase } from '../lib/supabase'\r\n\r\n/**\r\n * useTenant\r\n * - Default-exported hook that returns the current org id from the user's profile.\r\n * - Return shape: { orgId, loading, session }\r\n * - Non-fatal behavior: any error when reading the profile (RLS/perm denied) will\r\n *   be logged as a warning and treated the same as \"no org\" (orgId === null).\r\n * - Uses an alive/ref flag to avoid state updates after unmount.\r\n */\r\nfunction useTenant() {\r\n  const { user } = useAuth() || {}\r\n  const [orgId, setOrgId] = useState(null)\r\n  const [loading, setLoading] = useState(Boolean(user) && orgId === null)\r\n  const aliveRef = useRef(true)\r\n  // Derive a session-like shape for consumers that expect session.user\r\n  const derivedSession = user ? { user } : null\r\n\r\n  useEffect(() => {\r\n    aliveRef.current = true\r\n    return () => {\r\n      aliveRef.current = false\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    let didCancel = false\r\n\r\n    const load = async () => {\r\n      // If there's no authenticated user, ensure we surface null and not-loading\r\n      if (!user?.id) {\r\n        if (aliveRef.current) {\r\n          setOrgId(null)\r\n          setLoading(false)\r\n        }\r\n        return\r\n      }\r\n\r\n      if (aliveRef.current) setLoading(true)\r\n\r\n      const CANDIDATES = ['org_id', 'organization_id', 'tenant_id']\r\n      let resolvedOrg = null\r\n      let nonFatal = false\r\n      for (const col of CANDIDATES) {\r\n        try {\r\n          const { data, error } = await supabase\r\n            .from('user_profiles')\r\n            .select(col)\r\n            .eq('id', user.id)\r\n            .single()\r\n\r\n          if (!error && data && Object.prototype.hasOwnProperty.call(data, col)) {\r\n            resolvedOrg = data[col] ?? null\r\n            break\r\n          }\r\n          if (error) {\r\n            const msg = String(error?.message || '').toLowerCase()\r\n            // If this column doesn't exist, try the next candidate\r\n            if (msg.includes('does not exist') || msg.includes('column')) continue\r\n            // Permission/RLS: treat as non-fatal (orgId=null); stop trying\r\n            if (msg.includes('permission') || msg.includes('rls')) {\r\n              nonFatal = true\r\n              break\r\n            }\r\n            // Other errors: log and continue fallback\r\n            console.warn('useTenant: profile select warning:', error?.message || error)\r\n          }\r\n        } catch (e) {\r\n          console.warn('useTenant: profile select attempt failed:', e?.message || e)\r\n        }\r\n      }\r\n\r\n      if (aliveRef.current && !didCancel) {\r\n        if (resolvedOrg !== null) {\r\n          setOrgId(resolvedOrg)\r\n        } else {\r\n          if (nonFatal) {\r\n            console.warn('useTenant: treating RLS/permission as no-org')\r\n          }\r\n          setOrgId(null)\r\n        }\r\n        setLoading(false)\r\n      }\r\n    }\r\n\r\n    load()\r\n\r\n    return () => {\r\n      didCancel = true\r\n    }\r\n  }, [user?.id])\r\n\r\n  return { orgId, loading, session: derivedSession }\r\n}\r\n\r\n// Default export required by callers; also provide a named export for compatibility\r\nexport default useTenant\r\nexport { useTenant }\r\n"],"names":["useTenant","user","useAuth","orgId","setOrgId","useState","loading","setLoading","aliveRef","useRef","derivedSession","useEffect","didCancel","CANDIDATES","resolvedOrg","nonFatal","col","data","error","supabase","msg","e"],"mappings":"uFAaA,SAASA,GAAY,CACnB,KAAM,CAAE,KAAAC,CAAI,EAAKC,EAAO,GAAM,CAAA,EACxB,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAS,IAAI,EACjC,CAACC,EAASC,CAAU,EAAIF,EAAAA,SAAS,EAAQJ,GAASE,IAAU,IAAI,EAChEK,EAAWC,EAAAA,OAAO,EAAI,EAEtBC,EAAiBT,EAAO,CAAE,KAAAA,CAAI,EAAK,KAEzCU,OAAAA,EAAAA,UAAU,KACRH,EAAS,QAAU,GACZ,IAAM,CACXA,EAAS,QAAU,EACrB,GACC,CAAA,CAAE,EAELG,EAAAA,UAAU,IAAM,CACd,IAAIC,EAAY,GA2DhB,OAzDa,SAAY,CAEvB,GAAI,EAACX,GAAA,MAAAA,EAAM,IAAI,CACTO,EAAS,UACXJ,EAAS,IAAI,EACbG,EAAW,EAAK,GAElB,MACF,CAEIC,EAAS,SAASD,EAAW,EAAI,EAErC,MAAMM,EAAa,CAAC,SAAU,kBAAmB,WAAW,EAC5D,IAAIC,EAAc,KACdC,EAAW,GACf,UAAWC,KAAOH,EAChB,GAAI,CACF,KAAM,CAAE,KAAAI,EAAM,MAAAC,CAAK,EAAK,MAAMC,EAC3B,KAAK,eAAe,EACpB,OAAOH,CAAG,EACV,GAAG,KAAMf,EAAK,EAAE,EAChB,OAAM,EAET,GAAI,CAACiB,GAASD,GAAQ,OAAO,UAAU,eAAe,KAAKA,EAAMD,CAAG,EAAG,CACrEF,EAAcG,EAAKD,CAAG,GAAK,KAC3B,KACF,CACA,GAAIE,EAAO,CACT,MAAME,EAAM,QAAOF,GAAA,YAAAA,EAAO,UAAW,EAAE,EAAE,YAAW,EAEpD,GAAIE,EAAI,SAAS,gBAAgB,GAAKA,EAAI,SAAS,QAAQ,EAAG,SAE9D,GAAIA,EAAI,SAAS,YAAY,GAAKA,EAAI,SAAS,KAAK,EAAG,CACrDL,EAAW,GACX,KACF,CAEA,QAAQ,KAAK,sCAAsCG,GAAA,YAAAA,EAAO,UAAWA,CAAK,CAC5E,CACF,OAASG,EAAG,CACV,QAAQ,KAAK,6CAA6CA,GAAA,YAAAA,EAAG,UAAWA,CAAC,CAC3E,CAGEb,EAAS,SAAW,CAACI,IACnBE,IAAgB,KAClBV,EAASU,CAAW,GAEhBC,GACF,QAAQ,KAAK,8CAA8C,EAE7DX,EAAS,IAAI,GAEfG,EAAW,EAAK,EAEpB,GAEI,EAEG,IAAM,CACXK,EAAY,EACd,CACF,EAAG,CAACX,GAAA,YAAAA,EAAM,EAAE,CAAC,EAEN,CAAE,MAAAE,EAAO,QAAAG,EAAS,QAASI,CAAc,CAClD"}