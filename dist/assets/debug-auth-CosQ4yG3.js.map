{"version":3,"file":"debug-auth-CosQ4yG3.js","sources":["../../src/services/smsTemplateService.js","../../src/pages/debug-auth.jsx"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { safeSelect } from '@/lib/supabase/safeSelect'\r\nimport { toOptions } from '@/lib/options'\r\n\r\nexport async function listSmsTemplatesByOrg(orgId, { activeOnly = true } = {}) {\r\n  let q = supabase.from('sms_templates').select('*').order('created_at', { ascending: true })\r\n  if (activeOnly) q = q.eq('is_active', true)\r\n  if (orgId) q = q.or(`org_id.eq.${orgId},org_id.is.null`)\r\n  const rows = await safeSelect(q, 'sms_templates:listByOrg')\r\n  return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n}\r\n\r\nexport async function listSmsTemplatesGlobal({ activeOnly = true } = {}) {\r\n  let q = supabase.from('sms_templates').select('*').order('created_at', { ascending: true })\r\n  if (activeOnly) q = q.eq('is_active', true)\r\n  // global: no org filter\r\n  const rows = await safeSelect(q, 'sms_templates:listGlobal')\r\n  return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n}\r\n\r\nexport default { listSmsTemplatesByOrg, listSmsTemplatesGlobal }\r\n","// src/pages/debug-auth.jsx\r\nimport React, { useEffect, useState } from 'react'\r\nimport useTenant from '../hooks/useTenant'\r\nimport {\r\n  listVendorsByOrg,\r\n  listProductsByOrg,\r\n  listStaffByOrg,\r\n  listSmsTemplatesByOrg,\r\n} from '../services/tenantService'\r\nimport { listSmsTemplatesGlobal } from '../services/smsTemplateService'\r\nimport {\r\n  getVendors as getVendorsGlobal,\r\n  getProducts as getProductsGlobal,\r\n  getUserProfiles as getUsersGlobal,\r\n} from '../services/dropdownService'\r\nimport { isSupabaseConfigured, testSupabaseConnection } from '@/lib/supabase'\r\n\r\nexport default function DebugAuthPage() {\r\n  const { orgId, loading: tenantLoading, session } = useTenant()\r\n  const [counts, setCounts] = useState({})\r\n  const [loading, setLoading] = useState(false)\r\n  const [error, setError] = useState(null)\r\n  const [conn, setConn] = useState({ configured: false, ok: null, last: null })\r\n\r\n  useEffect(() => {\r\n    let mounted = true\r\n    async function load() {\r\n      setLoading(true)\r\n      setError(null)\r\n      try {\r\n        // Unfiltered/global counts\r\n        const [gVendors, gProducts, gUsers, gSms] = await Promise.all([\r\n          getVendorsGlobal({ activeOnly: false }),\r\n          getProductsGlobal({ activeOnly: false }),\r\n          getUsersGlobal({ activeOnly: false }),\r\n          listSmsTemplatesGlobal?.({ activeOnly: false }).catch(() => []),\r\n        ])\r\n\r\n        // Org+global counts (matches dropdownService logic)\r\n        const [oVendors, oProducts, oUsers, oSms] = await Promise.all([\r\n          orgId ? getVendorsGlobal({ activeOnly: false }) : Promise.resolve([]),\r\n          orgId ? getProductsGlobal({ activeOnly: false }) : Promise.resolve([]),\r\n          orgId ? getUsersGlobal({ activeOnly: false }) : Promise.resolve([]),\r\n          orgId\r\n            ? listSmsTemplatesGlobal({ activeOnly: false }).catch(() => [])\r\n            : Promise.resolve([]),\r\n        ])\r\n\r\n        if (!mounted) return\r\n        setCounts({\r\n          global: {\r\n            vendors: gVendors.length,\r\n            products: gProducts.length,\r\n            users: gUsers.length,\r\n            sms_templates: gSms.length,\r\n          },\r\n          org: {\r\n            vendors: oVendors.length,\r\n            products: oProducts.length,\r\n            users: oUsers.length,\r\n            sms_templates: oSms.length,\r\n          },\r\n        })\r\n      } catch (err) {\r\n        console.error('debug-auth load error', err)\r\n        if (mounted) setError(err?.message || String(err))\r\n      } finally {\r\n        if (mounted) setLoading(false)\r\n      }\r\n    }\r\n\r\n    load()\r\n    // initial env/config snapshot\r\n    setConn((c) => ({ ...c, configured: !!isSupabaseConfigured?.() }))\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, [orgId])\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">Debug: Auth / Org / Tenancy</h1>\r\n\r\n      <section className=\"mb-4\">\r\n        <h2 className=\"font-semibold\">Session</h2>\r\n        <div className=\"mb-2\">\r\n          <span className=\"text-sm text-slate-600\">Session User ID: </span>\r\n          <strong data-testid=\"session-user-id\">{session?.user?.id || '—'}</strong>\r\n        </div>\r\n        <pre className=\"bg-gray-100 p-2 rounded\">{JSON.stringify(session || null, null, 2)}</pre>\r\n      </section>\r\n\r\n      <section className=\"mb-4\">\r\n        <h2 className=\"font-semibold\">Tenant</h2>\r\n        <div>\r\n          orgId: <strong data-testid=\"profile-org-id\">{String(orgId)}</strong>\r\n        </div>\r\n        <div>\r\n          loading: <strong>{String(tenantLoading)}</strong>\r\n        </div>\r\n      </section>\r\n\r\n      <section className=\"mb-4\">\r\n        <h2 className=\"font-semibold\">Supabase connection</h2>\r\n        <div className=\"flex items-center gap-3 mb-2\">\r\n          <span>Configured:</span>\r\n          <strong data-testid=\"sb-configured\">{conn.configured ? 'Yes' : 'No'}</strong>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-mobile btn-mobile-sm\"\r\n            onClick={async () => {\r\n              try {\r\n                const ok = await testSupabaseConnection?.(2)\r\n                setConn({ configured: !!isSupabaseConfigured?.(), ok, last: new Date() })\r\n              } catch (_) {\r\n                setConn({ configured: !!isSupabaseConfigured?.(), ok: false, last: new Date() })\r\n              }\r\n            }}\r\n            data-testid=\"sb-test-btn\"\r\n          >\r\n            Test\r\n          </button>\r\n        </div>\r\n        <div>\r\n          Status:{' '}\r\n          <strong data-testid=\"sb-status\">\r\n            {conn.ok == null ? '—' : conn.ok ? 'OK' : 'Error'}\r\n          </strong>\r\n          {conn.last ? (\r\n            <span className=\"ml-2 text-slate-600 text-sm\" data-testid=\"sb-last\">\r\n              ({conn.last.toLocaleTimeString()})\r\n            </span>\r\n          ) : null}\r\n        </div>\r\n        <p className=\"text-slate-500 text-sm mt-1\">\r\n          If you see “Error” but the app otherwise works, it may be an RLS-permission message. The\r\n          test treats those as reachable.\r\n        </p>\r\n      </section>\r\n\r\n      <section className=\"mb-4\">\r\n        <h2 className=\"font-semibold\">Counts</h2>\r\n        {loading ? (\r\n          <div>Loading counts...</div>\r\n        ) : error ? (\r\n          <div className=\"text-red-600\">Error: {error}</div>\r\n        ) : (\r\n          <div>\r\n            <h3 className=\"mt-2\">Global</h3>\r\n            <ul>\r\n              <li>\r\n                Vendors:{' '}\r\n                <span data-testid=\"global-vendor-count\">{counts?.global?.vendors ?? 'N/A'}</span>\r\n              </li>\r\n              <li>\r\n                Products:{' '}\r\n                <span data-testid=\"global-product-count\">{counts?.global?.products ?? 'N/A'}</span>\r\n              </li>\r\n              <li>\r\n                Users:{' '}\r\n                <span data-testid=\"global-staff-count\">{counts?.global?.users ?? 'N/A'}</span>\r\n              </li>\r\n              <li>\r\n                SMS Templates:{' '}\r\n                <span data-testid=\"global-sms-template-count\">\r\n                  {counts?.global?.sms_templates ?? 'N/A'}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n\r\n            <h3 className=\"mt-2\">Org-scoped</h3>\r\n            <ul>\r\n              <li>\r\n                Vendors: <span data-testid=\"org-vendor-count\">{counts?.org?.vendors ?? 'N/A'}</span>\r\n              </li>\r\n              <li>\r\n                Products:{' '}\r\n                <span data-testid=\"org-product-count\">{counts?.org?.products ?? 'N/A'}</span>\r\n              </li>\r\n              <li>\r\n                Users: <span data-testid=\"org-staff-count\">{counts?.org?.users ?? 'N/A'}</span>\r\n              </li>\r\n              <li>\r\n                SMS Templates:{' '}\r\n                <span data-testid=\"org-sms-template-count\">\r\n                  {counts?.org?.sms_templates ?? 'N/A'}\r\n                </span>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </section>\r\n\r\n      <section className=\"mb-4\">\r\n        <h2 className=\"font-semibold\">Notes</h2>\r\n        <ul className=\"list-disc ml-6\">\r\n          <li>\r\n            This page uses tenant-aware list functions when <code>orgId</code> exists.\r\n          </li>\r\n          <li>Permission / RLS errors will appear in the console and in the error box above.</li>\r\n        </ul>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["listSmsTemplatesGlobal","activeOnly","q","supabase","rows","safeSelect","toOptions","DebugAuthPage","orgId","tenantLoading","session","useTenant","counts","setCounts","useState","loading","setLoading","error","setError","conn","setConn","useEffect","mounted","load","gVendors","gProducts","gUsers","gSms","getVendorsGlobal","getProductsGlobal","getUsersGlobal","oVendors","oProducts","oUsers","oSms","err","c","_a","isSupabaseConfigured","jsxs","jsx","ok","testSupabaseConnection","_b","_c","_d","_e","_f","_g","_h","_i"],"mappings":"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"}