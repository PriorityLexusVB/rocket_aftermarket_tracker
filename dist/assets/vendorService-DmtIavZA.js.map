{"version":3,"file":"vendorService-DmtIavZA.js","sources":["../../src/services/vendorService.js"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\nimport { safeSelect } from '@/lib/supabase/safeSelect'\r\nimport { toOptions } from '@/lib/options'\r\n\r\nexport async function listVendorsByOrg(orgId) {\r\n  let q = supabase.from('vendors').select('*').order('name', { ascending: true })\r\n  if (orgId) q = q.or(`org_id.eq.${orgId},org_id.is.null`)\r\n  const rows = await safeSelect(q, 'vendors:listByOrg')\r\n  return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n}\r\n\r\nexport const vendorService = {\r\n  /**\r\n   * Get all active vendors. If orgId provided, filter by org.\r\n   */\r\n  async getAll(orgId = null) {\r\n    try {\r\n      let q = supabase\r\n        .from('vendors')\r\n        .select('*')\r\n        .eq('is_active', true)\r\n        .order('name', { ascending: true })\r\n      if (orgId) q = q.or(`org_id.eq.${orgId},org_id.is.null`)\r\n      const rows = await safeSelect(q, 'vendors:getAll')\r\n      return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n    } catch (e) {\r\n      console.error('vendorService.getAll failed', e)\r\n      return []\r\n    }\r\n  },\r\n\r\n  /** Search vendors; optional org scoping */\r\n  async search(term, orgId = null) {\r\n    try {\r\n      if (!term?.trim()) return this.getAll(orgId)\r\n      let q = supabase\r\n        .from('vendors')\r\n        .select('*')\r\n        .or(`name.ilike.%${term}%,specialty.ilike.%${term}%,contact_person.ilike.%${term}%`)\r\n        .eq('is_active', true)\r\n        .order('name', { ascending: true })\r\n        .limit(50)\r\n      if (orgId) q = q.or(`org_id.eq.${orgId},org_id.is.null`)\r\n      const rows = await safeSelect(q, 'vendors:search')\r\n      return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n    } catch (e) {\r\n      console.error('vendorService.search failed', e)\r\n      return []\r\n    }\r\n  },\r\n\r\n  /** Get a vendor by id (optionally scoped to org) */\r\n  async getById(id, orgId = null) {\r\n    if (!id) return null\r\n    try {\r\n      let q = supabase\r\n        .from('vendors')\r\n        .select(`*, vendor_hours:vendor_hours(*), products:products(count)`)\r\n        .eq('id', id)\r\n        .single()\r\n      if (orgId) q = q.eq('org_id', orgId)\r\n      const res = await q.throwOnError()\r\n      return res.data\r\n    } catch (e) {\r\n      console.error('vendorService.getById failed', e)\r\n      return null\r\n    }\r\n  },\r\n}\r\n\r\nexport default vendorService\r\n"],"names":["listVendorsByOrg","orgId","q","supabase","rows","safeSelect","toOptions","vendorService","term","e","id"],"mappings":"+EAIO,eAAeA,EAAiBC,EAAO,CAC5C,IAAIC,EAAIC,EAAS,KAAK,SAAS,EAAE,OAAO,GAAG,EAAE,MAAM,OAAQ,CAAE,UAAW,EAAI,CAAE,EAC1EF,IAAOC,EAAIA,EAAE,GAAG,aAAaD,CAAK,iBAAiB,GACvD,MAAMG,EAAO,MAAMC,EAAWH,EAAG,mBAAmB,EACpD,OAAOI,EAAUF,EAAM,CAAE,SAAU,OAAQ,SAAU,KAAM,CAC7D,CAEY,MAACG,EAAgB,CAI3B,MAAM,OAAON,EAAQ,KAAM,CACzB,GAAI,CACF,IAAIC,EAAIC,EACL,KAAK,SAAS,EACd,OAAO,GAAG,EACV,GAAG,YAAa,EAAI,EACpB,MAAM,OAAQ,CAAE,UAAW,EAAI,CAAE,EAChCF,IAAOC,EAAIA,EAAE,GAAG,aAAaD,CAAK,iBAAiB,GACvD,MAAMG,EAAO,MAAMC,EAAWH,EAAG,gBAAgB,EACjD,OAAOI,EAAUF,EAAM,CAAE,SAAU,OAAQ,SAAU,KAAM,CAC7D,OAAS,EAAG,CACV,eAAQ,MAAM,8BAA+B,CAAC,EACvC,CAAA,CACT,CACF,EAGA,MAAM,OAAOI,EAAMP,EAAQ,KAAM,CAC/B,GAAI,CACF,GAAI,EAACO,GAAA,MAAAA,EAAM,QAAQ,OAAO,KAAK,OAAOP,CAAK,EAC3C,IAAIC,EAAIC,EACL,KAAK,SAAS,EACd,OAAO,GAAG,EACV,GAAG,eAAeK,CAAI,sBAAsBA,CAAI,2BAA2BA,CAAI,GAAG,EAClF,GAAG,YAAa,EAAI,EACpB,MAAM,OAAQ,CAAE,UAAW,EAAI,CAAE,EACjC,MAAM,EAAE,EACPP,IAAOC,EAAIA,EAAE,GAAG,aAAaD,CAAK,iBAAiB,GACvD,MAAMG,EAAO,MAAMC,EAAWH,EAAG,gBAAgB,EACjD,OAAOI,EAAUF,EAAM,CAAE,SAAU,OAAQ,SAAU,KAAM,CAC7D,OAASK,EAAG,CACV,eAAQ,MAAM,8BAA+BA,CAAC,EACvC,CAAA,CACT,CACF,EAGA,MAAM,QAAQC,EAAIT,EAAQ,KAAM,CAC9B,GAAI,CAACS,EAAI,OAAO,KAChB,GAAI,CACF,IAAIR,EAAIC,EACL,KAAK,SAAS,EACd,OAAO,2DAA2D,EAClE,GAAG,KAAMO,CAAE,EACX,OAAM,EACT,OAAIT,IAAOC,EAAIA,EAAE,GAAG,SAAUD,CAAK,IACvB,MAAMC,EAAE,aAAY,GACrB,IACb,OAASO,EAAG,CACV,eAAQ,MAAM,+BAAgCA,CAAC,EACxC,IACT,CACF,CACF"}