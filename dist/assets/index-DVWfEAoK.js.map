{"version":3,"file":"index-DVWfEAoK.js","sources":["../../src/services/advancedFeaturesService.js","../../src/components/common/ExportButton.jsx","../../src/services/vehicleService.js","../../src/pages/deals/NewDealModal.jsx","../../src/services/productService.js","../../src/services/staffService.js","../../src/hooks/useDropdownData.js","../../src/components/ui/Portal.jsx","../../src/components/ui/SearchableSelect.jsx","../../src/pages/deals/components/EditDealModal.jsx","../../src/pages/deals/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { supabase } from '@/lib/supabase'\r\n\r\n// Utility functions for safe data handling\r\nconst safeNumber = (value, defaultValue = 0) => {\r\n  if (value === null || value === undefined || value === '') return defaultValue\r\n  const parsed = parseFloat(value)\r\n  return isNaN(parsed) ? defaultValue : parsed\r\n}\r\n\r\nconst safeString = (value, defaultValue = '') => {\r\n  return value === null || value === undefined ? defaultValue : String(value)\r\n}\r\n\r\n// Enhanced service with all advanced features\r\nexport const advancedFeaturesService = {\r\n  // Overdue Jobs Service\r\n  async getOverdueJobs() {\r\n    try {\r\n      const { data, error } = await supabase?.rpc('get_overdue_jobs_enhanced')\r\n\r\n      if (error) {\r\n        console.error('Error fetching overdue jobs:', error)\r\n        return { data: [], error: { message: error?.message } }\r\n      }\r\n\r\n      return { data: data || [], error: null }\r\n    } catch (error) {\r\n      console.error('Error in getOverdueJobs service:', error)\r\n      return { data: [], error: { message: 'Failed to fetch overdue jobs' } }\r\n    }\r\n  },\r\n\r\n  // SMS Template Service\r\n  async getSmsTemplates() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('sms_templates')\r\n        ?.select('*')\r\n        ?.eq('is_active', true)\r\n        ?.order('created_at', { ascending: false })\r\n\r\n      if (error) {\r\n        return { data: [], error: { message: error?.message } }\r\n      }\r\n\r\n      return { data: data || [], error: null }\r\n    } catch (error) {\r\n      console.error('Error fetching SMS templates:', error)\r\n      return { data: [], error: { message: 'Failed to fetch SMS templates' } }\r\n    }\r\n  },\r\n\r\n  async createSmsTemplate(template) {\r\n    try {\r\n      const currentUser = await supabase?.auth?.getUser()\r\n      const { data, error } = await supabase\r\n        ?.from('sms_templates')\r\n        ?.insert([\r\n          {\r\n            ...template,\r\n            created_by: currentUser?.data?.user?.id,\r\n          },\r\n        ])\r\n        ?.select()\r\n        ?.single()\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      console.error('Error creating SMS template:', error)\r\n      return { data: null, error: { message: 'Failed to create SMS template' } }\r\n    }\r\n  },\r\n\r\n  async updateSmsTemplate(id, updates) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('sms_templates')\r\n        ?.update({\r\n          ...updates,\r\n          updated_at: new Date()?.toISOString(),\r\n        })\r\n        ?.eq('id', id)\r\n        ?.select()\r\n        ?.single()\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      console.error('Error updating SMS template:', error)\r\n      return { data: null, error: { message: 'Failed to update SMS template' } }\r\n    }\r\n  },\r\n\r\n  async deleteSmsTemplate(id) {\r\n    try {\r\n      const { error } = await supabase?.from('sms_templates')?.delete()?.eq('id', id)\r\n\r\n      if (error) {\r\n        return { error: { message: error?.message } }\r\n      }\r\n\r\n      return { error: null }\r\n    } catch (error) {\r\n      console.error('Error deleting SMS template:', error)\r\n      return { error: { message: 'Failed to delete SMS template' } }\r\n    }\r\n  },\r\n\r\n  // Filter Presets Service\r\n  async getFilterPresets(pageType) {\r\n    try {\r\n      const currentUser = await supabase?.auth?.getUser()\r\n      const { data, error } = await supabase\r\n        ?.from('filter_presets')\r\n        ?.select('*')\r\n        ?.eq('page_type', pageType)\r\n        ?.or(`user_id.eq.${currentUser?.data?.user?.id},is_public.eq.true`)\r\n        ?.order('created_at', { ascending: false })\r\n\r\n      if (error) {\r\n        return { data: [], error: { message: error?.message } }\r\n      }\r\n\r\n      return { data: data || [], error: null }\r\n    } catch (error) {\r\n      console.error('Error fetching filter presets:', error)\r\n      return { data: [], error: { message: 'Failed to fetch filter presets' } }\r\n    }\r\n  },\r\n\r\n  async saveFilterPreset(pageType, name, filters, isPublic = false) {\r\n    try {\r\n      const currentUser = await supabase?.auth?.getUser()\r\n      const { data, error } = await supabase\r\n        ?.from('filter_presets')\r\n        ?.insert([\r\n          {\r\n            user_id: currentUser?.data?.user?.id,\r\n            page_type: pageType,\r\n            name,\r\n            filters,\r\n            is_public: isPublic,\r\n          },\r\n        ])\r\n        ?.select()\r\n        ?.single()\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      console.error('Error saving filter preset:', error)\r\n      return { data: null, error: { message: 'Failed to save filter preset' } }\r\n    }\r\n  },\r\n\r\n  async deleteFilterPreset(id) {\r\n    try {\r\n      const { error } = await supabase?.from('filter_presets')?.delete()?.eq('id', id)\r\n\r\n      if (error) {\r\n        return { error: { message: error?.message } }\r\n      }\r\n\r\n      return { error: null }\r\n    } catch (error) {\r\n      console.error('Error deleting filter preset:', error)\r\n      return { error: { message: 'Failed to delete filter preset' } }\r\n    }\r\n  },\r\n\r\n  // Export Service\r\n  async exportData(exportType, filters = {}, userRole = 'staff') {\r\n    try {\r\n      const { data, error } = await supabase?.rpc('generate_export_data', {\r\n        export_type: exportType,\r\n        filters,\r\n        user_role: userRole,\r\n      })\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      // Clean and validate export data to prevent NaN/undefined values\r\n      const cleanedData = (data || [])?.map((item) => {\r\n        const exportData = item?.export_data || item\r\n        const cleanedExportData = {}\r\n\r\n        Object?.entries(exportData)?.forEach(([key, value]) => {\r\n          if (typeof value === 'number') {\r\n            cleanedExportData[key] = isNaN(value) ? 0 : value\r\n          } else if (value === null || value === undefined) {\r\n            cleanedExportData[key] = ''\r\n          } else {\r\n            cleanedExportData[key] = value\r\n          }\r\n        })\r\n\r\n        return { export_data: cleanedExportData }\r\n      })\r\n\r\n      return { data: cleanedData, error: null }\r\n    } catch (error) {\r\n      console.error('Error exporting data:', error)\r\n      return { data: null, error: { message: 'Failed to export data' } }\r\n    }\r\n  },\r\n\r\n  async exportToCSV(data, filename, headers = null) {\r\n    try {\r\n      if (!data || data?.length === 0) {\r\n        throw new Error('No data to export')\r\n      }\r\n\r\n      let csvContent = ''\r\n\r\n      // Add headers\r\n      if (headers) {\r\n        csvContent += headers?.join(',') + '\\n'\r\n      } else {\r\n        // Use object keys as headers for JSONB data\r\n        const firstRow = data?.[0]?.export_data || data?.[0]\r\n        if (firstRow) {\r\n          csvContent += Object?.keys(firstRow)?.join(',') + '\\n'\r\n        }\r\n      }\r\n\r\n      // Add data rows with safe value handling\r\n      data?.forEach((row) => {\r\n        const rowData = row?.export_data || row\r\n        const values = Object?.values(rowData)?.map((value) => {\r\n          // Handle nulls, undefined, and NaN values\r\n          if (value === null || value === undefined) return ''\r\n\r\n          // Handle NaN specifically\r\n          if (typeof value === 'number' && isNaN(value)) return '0'\r\n\r\n          // Convert to string safely\r\n          let stringValue = safeString(value)\r\n\r\n          // Escape commas and quotes in CSV\r\n          if (stringValue?.includes(',') || stringValue?.includes('\"')) {\r\n            return `\"${stringValue?.replace(/\"/g, '\"\"')}\"`\r\n          }\r\n\r\n          return stringValue\r\n        })\r\n        csvContent += values?.join(',') + '\\n'\r\n      })\r\n\r\n      // Create and download file\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' })\r\n      const link = document.createElement('a')\r\n\r\n      if (link?.download !== undefined) {\r\n        const url = URL?.createObjectURL(blob)\r\n        link?.setAttribute('href', url)\r\n        link?.setAttribute('download', filename)\r\n        link.style.visibility = 'hidden'\r\n        document.body?.appendChild(link)\r\n        link?.click()\r\n        document.body?.removeChild(link)\r\n        // Clean up the URL object\r\n        URL?.revokeObjectURL(url)\r\n      }\r\n\r\n      return { success: true, error: null }\r\n    } catch (error) {\r\n      console.error('Export to CSV error:', error)\r\n      return { success: false, error: { message: error?.message || 'Failed to export CSV' } }\r\n    }\r\n  },\r\n\r\n  // Bulk Operations Service\r\n  async bulkUpdateJobs(jobIds, updates) {\r\n    try {\r\n      const currentUser = await supabase?.auth?.getUser()\r\n      const { data, error } = await supabase?.rpc('bulk_update_jobs', {\r\n        job_ids: jobIds,\r\n        updates,\r\n        performed_by: currentUser?.data?.user?.id,\r\n      })\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data: data?.[0] || null, error: null }\r\n    } catch (error) {\r\n      console.error('Error in bulk update jobs:', error)\r\n      return { data: null, error: { message: 'Failed to bulk update jobs' } }\r\n    }\r\n  },\r\n\r\n  // Notification Service\r\n  async getNotificationPreferences() {\r\n    try {\r\n      const currentUser = await supabase?.auth?.getUser()\r\n      const { data, error } = await supabase\r\n        ?.from('notification_preferences')\r\n        ?.select('*')\r\n        ?.eq('user_id', currentUser?.data?.user?.id)\r\n\r\n      if (error) {\r\n        return { data: [], error: { message: error?.message } }\r\n      }\r\n\r\n      return { data: data || [], error: null }\r\n    } catch (error) {\r\n      console.error('Error fetching notification preferences:', error)\r\n      return { data: [], error: { message: 'Failed to fetch notification preferences' } }\r\n    }\r\n  },\r\n\r\n  async updateNotificationPreferences(preferences) {\r\n    try {\r\n      const currentUser = await supabase?.auth?.getUser()\r\n\r\n      // Delete existing preferences and insert new ones\r\n      await supabase\r\n        ?.from('notification_preferences')\r\n        ?.delete()\r\n        ?.eq('user_id', currentUser?.data?.user?.id)\r\n\r\n      const preferencesWithUser = preferences?.map((pref) => ({\r\n        ...pref,\r\n        user_id: currentUser?.data?.user?.id,\r\n      }))\r\n\r\n      const { data, error } = await supabase\r\n        ?.from('notification_preferences')\r\n        ?.insert(preferencesWithUser)\r\n        ?.select()\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      console.error('Error updating notification preferences:', error)\r\n      return { data: null, error: { message: 'Failed to update notification preferences' } }\r\n    }\r\n  },\r\n\r\n  // Real-time subscriptions\r\n  subscribeToOverdueJobs(callback) {\r\n    try {\r\n      const subscription = supabase\r\n        ?.channel('overdue-jobs')\r\n        ?.on('postgres_changes', { event: '*', schema: 'public', table: 'jobs' }, (payload) => {\r\n          // Refetch overdue jobs when any job changes\r\n          this.getOverdueJobs()?.then((result) => {\r\n            if (result?.data) {\r\n              callback(result?.data)\r\n            }\r\n          })\r\n        })\r\n        ?.subscribe()\r\n\r\n      return subscription\r\n    } catch (error) {\r\n      console.error('Error subscribing to overdue jobs:', error)\r\n      return null\r\n    }\r\n  },\r\n\r\n  // Enhanced search with filters\r\n  async searchWithFilters(searchQuery, filters, tableType) {\r\n    try {\r\n      let query = supabase?.from(tableType)\r\n\r\n      // Apply search\r\n      if (searchQuery) {\r\n        switch (tableType) {\r\n          case 'jobs':\r\n            query = query?.or(`job_number.ilike.%${searchQuery}%,title.ilike.%${searchQuery}%`)\r\n            break\r\n          case 'vehicles':\r\n            query = query?.or(\r\n              `vin.ilike.%${searchQuery}%,make.ilike.%${searchQuery}%,model.ilike.%${searchQuery}%`\r\n            )\r\n            break\r\n          case 'vendors':\r\n            query = query?.or(`name.ilike.%${searchQuery}%,specialty.ilike.%${searchQuery}%`)\r\n            break\r\n        }\r\n      }\r\n\r\n      // Apply filters\r\n      Object?.entries(filters)?.forEach(([key, value]) => {\r\n        if (value != null && value !== '') {\r\n          if (Array?.isArray(value)) {\r\n            query = query?.in(key, value)\r\n          } else if (typeof value === 'object' && value?.min !== undefined) {\r\n            query = query?.gte(key, value?.min)\r\n          } else if (typeof value === 'object' && value?.max !== undefined) {\r\n            query = query?.lte(key, value?.max)\r\n          } else {\r\n            query = query?.eq(key, value)\r\n          }\r\n        }\r\n      })\r\n\r\n      const { data, error } = await query?.select('*')?.order('created_at', { ascending: false })\r\n\r\n      if (error) {\r\n        return { data: [], error: { message: error?.message } }\r\n      }\r\n\r\n      return { data: data || [], error: null }\r\n    } catch (error) {\r\n      console.error('Error in search with filters:', error)\r\n      return { data: [], error: { message: 'Failed to search with filters' } }\r\n    }\r\n  },\r\n}\r\n\r\n// Hook for overdue jobs\r\nexport const useOverdueJobs = () => {\r\n  const [overdueJobs, setOverdueJobs] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState(null)\r\n\r\n  const fetchOverdueJobs = async () => {\r\n    try {\r\n      setLoading(true)\r\n      const result = await advancedFeaturesService?.getOverdueJobs()\r\n      if (result?.error) {\r\n        setError(result?.error?.message)\r\n      } else {\r\n        setOverdueJobs(result?.data)\r\n        setError(null)\r\n      }\r\n    } catch (err) {\r\n      console.error('Error fetching overdue jobs:', err)\r\n      setError('Failed to fetch overdue jobs')\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchOverdueJobs()\r\n\r\n    // Set up real-time subscription\r\n    const subscription = advancedFeaturesService?.subscribeToOverdueJobs(setOverdueJobs)\r\n\r\n    return () => {\r\n      if (subscription) {\r\n        subscription?.unsubscribe()\r\n      }\r\n    }\r\n  }, [])\r\n\r\n  return { overdueJobs, loading, error, refetch: fetchOverdueJobs }\r\n}\r\n\r\n// Hook for filter presets\r\nexport const useFilterPresets = (pageType) => {\r\n  const [presets, setPresets] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    const loadPresets = async () => {\r\n      setLoading(true)\r\n      const result = await advancedFeaturesService?.getFilterPresets(pageType)\r\n      if (result?.data) {\r\n        setPresets(result?.data)\r\n      }\r\n      setLoading(false)\r\n    }\r\n\r\n    loadPresets()\r\n  }, [pageType])\r\n\r\n  const savePreset = async (name, filters, isPublic = false) => {\r\n    const result = await advancedFeaturesService?.saveFilterPreset(\r\n      pageType,\r\n      name,\r\n      filters,\r\n      isPublic\r\n    )\r\n    if (result?.data) {\r\n      setPresets((prev) => [result?.data, ...prev])\r\n    }\r\n    return result\r\n  }\r\n\r\n  const deletePreset = async (id) => {\r\n    const result = await advancedFeaturesService?.deleteFilterPreset(id)\r\n    if (result?.error === null) {\r\n      setPresets((prev) => prev?.filter((preset) => preset?.id !== id))\r\n    }\r\n    return result\r\n  }\r\n\r\n  return { presets, loading, savePreset, deletePreset }\r\n}\r\n\r\nexport default advancedFeaturesService\r\n","import React, { useState } from 'react';\r\nimport Icon from '../AppIcon';\r\nimport Button from '../ui/Button';\r\nimport Select from '../ui/Select';\r\nimport { advancedFeaturesService } from '../../services/advancedFeaturesService';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst ExportButton = ({\r\n  exportType, // 'jobs', 'vehicles', 'vendors', 'transactions'\r\n  filters = {},\r\n  selectedIds = [], // For exporting only selected items\r\n  onExportStart,\r\n  onExportComplete,\r\n  onExportError,\r\n  disabled = false,\r\n  variant = 'outline',\r\n  size = 'sm',\r\n  className = ''\r\n}) => {\r\n  const [isExporting, setIsExporting] = useState(false);\r\n  const [showOptions, setShowOptions] = useState(false);\r\n  const [exportFormat, setExportFormat] = useState('csv');\r\n  const [exportScope, setExportScope] = useState('filtered');\r\n  const { user, userProfile } = useAuth();\r\n\r\n  const exportOptions = [\r\n    { value: 'csv', label: 'CSV File' },\r\n    { value: 'excel', label: 'Excel File' }\r\n  ];\r\n\r\n  const scopeOptions = [\r\n    { value: 'all', label: 'All Records' },\r\n    { value: 'filtered', label: 'Filtered Results' },\r\n    ...(selectedIds?.length > 0 ? [{ value: 'selected', label: `Selected (${selectedIds?.length})` }] : [])\r\n  ];\r\n\r\n  const getExportFilename = () => {\r\n    const timestamp = new Date()?.toISOString()?.split('T')?.[0];\r\n    const scope = exportScope === 'selected' ? 'selected' : exportScope;\r\n    return `${exportType}-${scope}-${timestamp}.${exportFormat}`;\r\n  };\r\n\r\n  const exportData = async () => {\r\n    try {\r\n      setIsExporting(true);\r\n      \r\n      // Get data from service instead of undefined generateExportData\r\n      const result = await advancedFeaturesService?.exportData(\r\n        exportType, \r\n        filters, \r\n        userProfile?.role || 'staff'\r\n      );\r\n\r\n      if (result?.error) {\r\n        onExportError?.(result?.error?.message || 'Export failed');\r\n        return;\r\n      }\r\n\r\n      const data = result?.data;\r\n      \r\n      if (!data || data?.length === 0) {\r\n        onExportError?.('No data available for export');\r\n        return;\r\n      }\r\n\r\n      // Enhanced CSV columns with proper guards\r\n      const csvData = data?.map(row => {\r\n        // Helper function to guard against NaN/undefined values\r\n        const safeValue = (value, fallback = '') => {\r\n          if (value === null || value === undefined || value === '' || \r\n              (typeof value === 'number' && (isNaN(value) || !isFinite(value)))) {\r\n            return fallback;\r\n          }\r\n          return value;\r\n        };\r\n\r\n        const safeNumber = (value, fallback = 0) => {\r\n          const num = parseFloat(value);\r\n          return isNaN(num) || !isFinite(num) ? fallback : num;\r\n        };\r\n\r\n        const safeCurrency = (value) => {\r\n          const num = safeNumber(value, 0);\r\n          return new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD'\r\n          })?.format(num);\r\n        };\r\n\r\n        return {\r\n          // Core identification\r\n          Stock: safeValue(row?.vehicle?.stock_number),\r\n          Customer: safeValue(row?.customer_name),\r\n          Phone: safeValue(row?.customer_phone),\r\n          \r\n          // Vehicle information\r\n          Vehicle: row?.vehicle ? \r\n            `${safeValue(row?.vehicle?.year)} ${safeValue(row?.vehicle?.make)} ${safeValue(row?.vehicle?.model)}`?.trim() : \r\n            '',\r\n          \r\n          // Staff assignments\r\n          Sales: safeValue(row?.assigned_to_name),\r\n          Status: safeValue(row?.job_status, 'unknown')?.replace('_', ' ')?.toUpperCase(),\r\n          \r\n          // Service details\r\n          ServiceType: row?.service_type === 'vendor' ? 'Off-Site' : 'On-Site',\r\n          \r\n          // Loaner information with proper boolean check\r\n          Loaner: row?.customer_needs_loaner === true ? 'Yes' : 'No',\r\n          \r\n          // Next promised date with safe formatting\r\n          NextPromised: (() => {\r\n            if (!row?.job_parts || row?.job_parts?.length === 0) return '';\r\n            \r\n            const schedulingItems = row?.job_parts?.filter(part => \r\n              part?.requires_scheduling && part?.promised_date\r\n            );\r\n            \r\n            if (schedulingItems?.length === 0) return '';\r\n            \r\n            const earliestPromise = schedulingItems?.sort((a, b) => \r\n              new Date(a.promised_date) - new Date(b.promised_date)\r\n            )?.[0];\r\n            \r\n            if (!earliestPromise?.promised_date) return '';\r\n            \r\n            try {\r\n              return new Date(earliestPromise.promised_date)?.toLocaleDateString('en-US', {\r\n                year: 'numeric',\r\n                month: 'short',\r\n                day: 'numeric'\r\n              });\r\n            } catch {\r\n              return '';\r\n            }\r\n          })(),\r\n          \r\n          // Financial information with currency formatting\r\n          Value: safeCurrency(row?.total_amount),\r\n          \r\n          // Vendor information\r\n          Vendor: safeValue(row?.vendor?.name)\r\n        };\r\n      });\r\n\r\n      // Generate filename with timestamp\r\n      const timestamp = new Date()?.toISOString()?.slice(0, 19)?.replace(/:/g, '-');\r\n      const filename = `${exportType}_export_${timestamp}.csv`;\r\n      \r\n      // Convert to CSV\r\n      const csvContent = convertToCSV(csvData);\r\n      \r\n      // Download CSV\r\n      const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n      const link = document.createElement('a');\r\n      const url = URL.createObjectURL(blob);\r\n      \r\n      link?.setAttribute('href', url);\r\n      link?.setAttribute('download', filename);\r\n      link.style.visibility = 'hidden';\r\n      document.body?.appendChild(link);\r\n      link?.click();\r\n      document.body?.removeChild(link);\r\n      \r\n      onExportComplete?.(data?.length, filename);\r\n      \r\n    } catch (error) {\r\n      console.error('Export error:', error);\r\n      onExportError?.(error?.message || 'Export failed');\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  // Helper function to convert data to CSV with proper escaping\r\n  const convertToCSV = (data) => {\r\n    if (!data || data?.length === 0) return '';\r\n    \r\n    const headers = Object.keys(data?.[0]);\r\n    const csvRows = [\r\n      // Header row\r\n      headers?.map(header => `\"${header}\"`)?.join(','),\r\n      // Data rows\r\n      ...data?.map(row =>\r\n        headers?.map(header => {\r\n          const value = row?.[header];\r\n          // Escape quotes and wrap in quotes\r\n          const escapedValue = String(value || '')?.replace(/\"/g, '\"\"');\r\n          return `\"${escapedValue}\"`;\r\n        })?.join(',')\r\n      )\r\n    ];\r\n    \r\n    return csvRows?.join('\\n');\r\n  };\r\n\r\n  const handleExport = async () => {\r\n    if (isExporting) return;\r\n\r\n    try {\r\n      setIsExporting(true);\r\n      if (onExportStart) onExportStart();\r\n\r\n      // Prepare filters based on scope\r\n      let exportFilters = { ...filters };\r\n      \r\n      if (exportScope === 'selected' && selectedIds?.length > 0) {\r\n        exportFilters.ids = selectedIds;\r\n      }\r\n\r\n      if (exportScope === 'all') {\r\n        exportFilters = {}; // Clear all filters for full export\r\n      }\r\n\r\n      // Get data from service\r\n      const result = await advancedFeaturesService?.exportData(\r\n        exportType, \r\n        exportFilters, \r\n        userProfile?.role || 'staff'\r\n      );\r\n\r\n      if (result?.error) {\r\n        throw new Error(result?.error?.message);\r\n      }\r\n\r\n      if (!result?.data || result?.data?.length === 0) {\r\n        throw new Error('No data found to export');\r\n      }\r\n\r\n      // Export to file\r\n      const filename = getExportFilename();\r\n      const exportResult = await advancedFeaturesService?.exportToCSV(\r\n        result?.data, \r\n        filename\r\n      );\r\n\r\n      if (exportResult?.error) {\r\n        throw new Error(exportResult?.error?.message);\r\n      }\r\n\r\n      setShowOptions(false);\r\n      if (onExportComplete) {\r\n        onExportComplete(result?.data?.length, filename);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Export error:', error);\r\n      if (onExportError) {\r\n        onExportError(error?.message || 'Export failed');\r\n      }\r\n    } finally {\r\n      setIsExporting(false);\r\n    }\r\n  };\r\n\r\n  const getExportTypeLabel = () => {\r\n    switch (exportType) {\r\n      case 'jobs': return 'Jobs';\r\n      case 'vehicles': return 'Vehicles';\r\n      case 'vendors': return 'Vendors';\r\n      case 'transactions': return 'Transactions';\r\n      default: return 'Data';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"relative\">\r\n      <Button\r\n        variant={variant}\r\n        size={size}\r\n        onClick={() => setShowOptions(!showOptions)}\r\n        disabled={disabled || isExporting}\r\n        iconName={isExporting ? undefined : 'Download'}\r\n        iconPosition=\"left\"\r\n        className={`${className} ${isExporting ? 'cursor-wait' : ''}`}\r\n        aria-label={`Export ${getExportTypeLabel()}`}\r\n      >\r\n        {isExporting ? (\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"w-4 h-4 border-2 border-gray-300 border-t-primary rounded-full animate-spin\" />\r\n            <span>Exporting...</span>\r\n          </div>\r\n        ) : (\r\n          `Export ${getExportTypeLabel()}`\r\n        )}\r\n      </Button>\r\n\r\n      {/* Export Options Dropdown */}\r\n      {showOptions && !isExporting && (\r\n        <div className=\"absolute top-full left-0 mt-2 w-64 bg-card border border-border rounded-lg shadow-lg z-50\">\r\n          <div className=\"p-4 space-y-4\">\r\n            <div>\r\n              <label className=\"text-sm font-medium text-foreground mb-2 block\">\r\n                Export Format\r\n              </label>\r\n              <Select\r\n                value={exportFormat}\r\n                onChange={setExportFormat}\r\n                options={exportOptions}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"text-sm font-medium text-foreground mb-2 block\">\r\n                Export Scope\r\n              </label>\r\n              <Select\r\n                value={exportScope}\r\n                onChange={setExportScope}\r\n                options={scopeOptions}\r\n                className=\"w-full\"\r\n              />\r\n            </div>\r\n\r\n            {exportScope === 'filtered' && Object?.keys(filters)?.length === 0 && (\r\n              <div className=\"text-xs text-orange-600 bg-orange-50 p-2 rounded\">\r\n                <Icon name=\"AlertTriangle\" size={12} className=\"inline mr-1\" />\r\n                No filters applied. This will export all records.\r\n              </div>\r\n            )}\r\n\r\n            {exportScope === 'selected' && (\r\n              <div className=\"text-xs text-blue-600 bg-blue-50 p-2 rounded\">\r\n                <Icon name=\"Info\" size={12} className=\"inline mr-1\" />\r\n                Exporting {selectedIds?.length} selected record{selectedIds?.length !== 1 ? 's' : ''}.\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"flex justify-end space-x-2 pt-2 border-t border-border\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={() => setShowOptions(false)}\r\n                className=\"min-w-0\"\r\n                aria-label=\"Cancel export\"\r\n              >\r\n                Cancel\r\n              </Button>\r\n              \r\n              <Button\r\n                size=\"sm\"\r\n                onClick={handleExport}\r\n                iconName=\"Download\"\r\n                iconPosition=\"left\"\r\n                className=\"min-w-0\"\r\n                aria-label={`Export ${getExportTypeLabel()}`}\r\n              >\r\n                Export\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExportButton;","import { supabase } from '@/lib/supabase'\r\nimport { safeSelect } from '../lib/supabase/safeSelect'\r\n\r\nexport const vehicleService = {\r\n  // Get all vehicles with optional filtering\r\n  async getVehicles(filters = {}, orgId = null) {\r\n    try {\r\n      let query = supabase\r\n        ?.from('vehicles')\r\n        ?.select(\r\n          `\r\n          *,\r\n          created_by_profile:user_profiles!vehicles_created_by_fkey(full_name, email)\r\n        `\r\n        )\r\n        ?.order('created_at', { ascending: false })\r\n      if (orgId) query = query?.eq('org_id', orgId)\r\n\r\n      // Apply filters\r\n      if (filters?.status) {\r\n        query = query?.eq('vehicle_status', filters?.status)\r\n      }\r\n\r\n      if (filters?.make) {\r\n        query = query?.eq('make', filters?.make)\r\n      }\r\n\r\n      if (filters?.year) {\r\n        query = query?.eq('year', filters?.year)\r\n      }\r\n\r\n      if (filters?.search) {\r\n        query = query?.or(\r\n          `vin.ilike.%${filters?.search}%,make.ilike.%${filters?.search}%,model.ilike.%${filters?.search}%,license_plate.ilike.%${filters?.search}%,owner_name.ilike.%${filters?.search}%,owner_phone.ilike.%${filters?.search}%,owner_email.ilike.%${filters?.search}%,stock_number.ilike.%${filters?.search}%`\r\n        )\r\n      }\r\n\r\n      const data = await safeSelect(query, 'vehicles:getVehicles')\r\n\r\n      return { data: data || [], error: null }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message:\r\n              'Cannot connect to database. Your Supabase project may be paused or deleted. Please visit your Supabase dashboard to check project status.',\r\n          },\r\n        }\r\n      }\r\n      return { data: null, error: { message: 'Failed to load vehicles' } }\r\n    }\r\n  },\r\n\r\n  // Get single vehicle by ID\r\n  async getVehicleById(id, orgId = null) {\r\n    try {\r\n      let q = supabase\r\n        ?.from('vehicles')\r\n        ?.select(\r\n          `\r\n          *,\r\n          created_by_profile:user_profiles!vehicles_created_by_fkey(full_name, email),\r\n          jobs(\r\n            id,\r\n            job_number,\r\n            title,\r\n            job_status,\r\n            priority,\r\n            estimated_cost,\r\n            actual_cost,\r\n            created_at,\r\n            assigned_to_profile:user_profiles!jobs_assigned_to_fkey(full_name)\r\n          )\r\n        `\r\n        )\r\n        ?.eq('id', id)\r\n        ?.single()\r\n      if (orgId) q = q?.eq('org_id', orgId)\r\n      const data = await safeSelect(q, 'vehicles:getVehicleById')\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message:\r\n              'Cannot connect to database. Your Supabase project may be paused or deleted. Please visit your Supabase dashboard to check project status.',\r\n          },\r\n        }\r\n      }\r\n      return { data: null, error: { message: 'Failed to load vehicle details' } }\r\n    }\r\n  },\r\n\r\n  // Create new vehicle\r\n  async createVehicle(vehicleData) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('vehicles')\r\n        ?.insert([\r\n          {\r\n            ...vehicleData,\r\n            created_by: (await supabase?.auth?.getUser())?.data?.user?.id,\r\n          },\r\n        ])\r\n        ?.select(\r\n          `\r\n          *,\r\n          created_by_profile:user_profiles!vehicles_created_by_fkey(full_name, email)\r\n        `\r\n        )\r\n        ?.single()\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message:\r\n              'Cannot connect to database. Your Supabase project may be paused or deleted. Please visit your Supabase dashboard to check project status.',\r\n          },\r\n        }\r\n      }\r\n      return { data: null, error: { message: 'Failed to create vehicle' } }\r\n    }\r\n  },\r\n\r\n  async create(vehicleData) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('vehicles')\r\n        ?.insert([vehicleData])\r\n        ?.select()\r\n        ?.single()\r\n\r\n      if (error) {\r\n        console.error('Vehicle creation error:', error)\r\n        throw new Error(error.message || 'Failed to create vehicle')\r\n      }\r\n\r\n      console.log('Vehicle created successfully:', data)\r\n      return data\r\n    } catch (error) {\r\n      console.error('Error in vehicleService.create:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async createVehicleWithProducts(vehicleData) {\r\n    try {\r\n      console.log('Creating vehicle with products:', vehicleData)\r\n\r\n      // In a real implementation, this would:\r\n      // 1. Create the vehicle record in the vehicles table\r\n      // 2. Create vehicle_products records for each selected product\r\n      // 3. Optionally create initial job records if vendor is assigned\r\n      // 4. Return the created vehicle with all relationships\r\n\r\n      // Mock implementation for now\r\n      const mockVehicleId = `vehicle_${Date.now()}`\r\n\r\n      // Simulate API call delay\r\n      await new Promise((resolve) => setTimeout(resolve, 1000))\r\n\r\n      // Mock successful response\r\n      const createdVehicle = {\r\n        id: mockVehicleId,\r\n        ...vehicleData,\r\n        created_at: new Date()?.toISOString(),\r\n        initial_products_count: vehicleData?.initial_products?.length || 0,\r\n        estimated_aftermarket_value: vehicleData?.total_initial_product_value || 0,\r\n      }\r\n\r\n      console.log('Vehicle created successfully:', createdVehicle)\r\n      return createdVehicle\r\n    } catch (error) {\r\n      console.error('Error creating vehicle with products:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  async checkStockNumberExists(stockNumber) {\r\n    if (!stockNumber?.trim()) return false\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('vehicles')\r\n        ?.select('id')\r\n        ?.eq('stock_number', stockNumber?.trim())\r\n        ?.maybeSingle()\r\n\r\n      if (error) {\r\n        console.error('Stock number check error:', error)\r\n        return false\r\n      }\r\n\r\n      return !!data\r\n    } catch (error) {\r\n      console.error('Error checking stock number:', error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  async checkVinExists(vin) {\r\n    if (!vin?.trim()) return false\r\n\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('vehicles')\r\n        ?.select('id')\r\n        ?.eq('vin', vin?.trim())\r\n        ?.maybeSingle()\r\n\r\n      if (error) {\r\n        console.error('VIN check error:', error)\r\n        return false\r\n      }\r\n\r\n      return !!data\r\n    } catch (error) {\r\n      console.error('Error checking VIN:', error)\r\n      return false\r\n    }\r\n  },\r\n\r\n  // Update vehicle\r\n  async updateVehicle(id, updates) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        ?.from('vehicles')\r\n        ?.update({\r\n          ...updates,\r\n          updated_at: new Date()?.toISOString(),\r\n        })\r\n        ?.eq('id', id)\r\n        ?.select(\r\n          `\r\n          *,\r\n          created_by_profile:user_profiles!vehicles_created_by_fkey(full_name, email)\r\n        `\r\n        )\r\n        ?.single()\r\n\r\n      if (error) {\r\n        return { data: null, error: { message: error?.message } }\r\n      }\r\n\r\n      return { data, error: null }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message:\r\n              'Cannot connect to database. Your Supabase project may be paused or deleted. Please visit your Supabase dashboard to check project status.',\r\n          },\r\n        }\r\n      }\r\n      return { data: null, error: { message: 'Failed to update vehicle' } }\r\n    }\r\n  },\r\n\r\n  // Delete vehicle\r\n  async deleteVehicle(id) {\r\n    try {\r\n      const { error } = await supabase?.from('vehicles')?.delete()?.eq('id', id)\r\n\r\n      if (error) {\r\n        return { error: { message: error?.message } }\r\n      }\r\n\r\n      return { error: null }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          error: {\r\n            message:\r\n              'Cannot connect to database. Your Supabase project may be paused or deleted. Please visit your Supabase dashboard to check project status.',\r\n          },\r\n        }\r\n      }\r\n      return { error: { message: 'Failed to delete vehicle' } }\r\n    }\r\n  },\r\n\r\n  // Get vehicle statistics\r\n  async getVehicleStats(orgId = null) {\r\n    try {\r\n      let q = supabase?.from('vehicles')?.select('vehicle_status')\r\n      if (orgId) q = q?.eq('org_id', orgId)\r\n      const data = await safeSelect(q, 'vehicles:getVehicleStats')\r\n\r\n      const stats = {\r\n        total: data?.length || 0,\r\n        active: data?.filter((v) => v?.vehicle_status === 'active')?.length || 0,\r\n        maintenance: data?.filter((v) => v?.vehicle_status === 'maintenance')?.length || 0,\r\n        retired: data?.filter((v) => v?.vehicle_status === 'retired')?.length || 0,\r\n        sold: data?.filter((v) => v?.vehicle_status === 'sold')?.length || 0,\r\n      }\r\n\r\n      return { data: stats, error: null }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          data: null,\r\n          error: {\r\n            message:\r\n              'Cannot connect to database. Your Supabase project may be paused or deleted. Please visit your Supabase dashboard to check project status.',\r\n          },\r\n        }\r\n      }\r\n      return { data: null, error: { message: 'Failed to load vehicle statistics' } }\r\n    }\r\n  },\r\n\r\n  // Get all vehicles (alias for getVehicles for consistent API usage)\r\n  async getAllVehicles(filters = {}) {\r\n    return await this.getVehicles(filters)\r\n  },\r\n}\r\n\r\n// Add vendor-aware vehicle fetching\r\nexport const getVehicles = async (options = {}, orgId = null) => {\r\n  try {\r\n    let query = supabase?.from('vehicles')?.select(`\r\n      *,\r\n      jobs:jobs!vehicles_vehicle_id_fkey(\r\n        id,\r\n        job_number,\r\n        title,\r\n        job_status,\r\n        vendor_id,\r\n        assigned_to\r\n      )\r\n    `)\r\n    if (orgId) query = query?.eq('org_id', orgId)\r\n\r\n    // Apply filters if provided\r\n    if (options?.status) {\r\n      query = query?.eq('vehicle_status', options?.status)\r\n    }\r\n\r\n    if (options?.search) {\r\n      query = query?.or(`\r\n        make.ilike.%${options?.search}%,\r\n        model.ilike.%${options?.search}%,\r\n        vin.ilike.%${options?.search}%,\r\n        license_plate.ilike.%${options?.search}%\r\n      `)\r\n    }\r\n\r\n    const data = await safeSelect(\r\n      query?.order('created_at', { ascending: false }),\r\n      'vehicles:getVehiclesFlat'\r\n    )\r\n    return data || []\r\n  } catch (error) {\r\n    console.error('Error fetching vehicles:', error)\r\n    throw error\r\n  }\r\n}\r\n\r\n// Vendor-specific vehicle access function\r\nexport const getVendorAccessibleVehicles = async (vendorId) => {\r\n  try {\r\n    const { data, error } = await supabase?.rpc('get_vendor_vehicles', {\r\n      vendor_uuid: vendorId,\r\n    })\r\n\r\n    if (error) {\r\n      throw error\r\n    }\r\n\r\n    return data || []\r\n  } catch (error) {\r\n    console.error('Error fetching vendor vehicles:', error)\r\n    throw error\r\n  }\r\n}\r\nfunction createVehicleWithProducts(...args) {\r\n  // eslint-disable-next-line no-console\r\n  console.warn('Placeholder: createVehicleWithProducts is not implemented yet.', args)\r\n  return null\r\n}\r\n\r\nexport { createVehicleWithProducts }\r\n","import React, { useState, useEffect } from 'react'\r\nimport { supabase } from '../../lib/supabase'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport useTenant from '../../hooks/useTenant'\r\nimport dealService from '../../services/dealService'\r\nimport { vehicleService } from '../../services/vehicleService'\r\nimport Button from '../../components/ui/Button'\r\nimport Icon from '../../components/ui/Icon'\r\n// Prefer shared dropdown service helpers with fuzzy fallback and optional org scoping\r\nimport {\r\n  getSalesConsultants,\r\n  getDeliveryCoordinators,\r\n  getFinanceManagers,\r\n  getVendors,\r\n  getProducts,\r\n} from '../../services/dropdownService'\r\n\r\nexport default function NewDealModal({ isOpen, onClose, onSuccess }) {\r\n  const { user } = useAuth()\r\n  const { orgId } = useTenant() || {}\r\n  const [currentStep, setCurrentStep] = useState(1) // 1 = Customer, 2 = Line Items\r\n  const [isSubmitting, setIsSubmitting] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [isDirty, setIsDirty] = useState(false)\r\n  const [showUnsavedWarning, setShowUnsavedWarning] = useState(false)\r\n\r\n  // ✅ FIXED: Enhanced dropdown state with comprehensive error handling and retry logic\r\n  const [dropdownData, setDropdownData] = useState({\r\n    salesConsultants: [],\r\n    deliveryCoordinators: [],\r\n    financeManagers: [],\r\n    vendors: [],\r\n    products: [],\r\n    loading: true,\r\n    error: null,\r\n    retryCount: 0,\r\n  })\r\n\r\n  // Initial form state for dirty checking\r\n  const initialFormState = {\r\n    customerName: '',\r\n    customerPhone: '',\r\n    customerEmail: '',\r\n    needsLoaner: false,\r\n    assignedTo: null,\r\n    deliveryCoordinator: null,\r\n    financeManager: null,\r\n    vehicleYear: new Date()?.getFullYear(),\r\n    vehicleMake: 'Toyota',\r\n    vehicleModel: 'Camry',\r\n    stockNumber: '',\r\n  }\r\n\r\n  // Customer form data\r\n  const [customerData, setCustomerData] = useState(initialFormState)\r\n\r\n  // Line items data\r\n  const [lineItems, setLineItems] = useState([])\r\n\r\n  // ✅ FIXED: Enhanced dropdown data loading with comprehensive error handling and retry logic\r\n  const loadDropdownData = async (retryCount = 0) => {\r\n    try {\r\n      setDropdownData((prev) => ({ ...prev, loading: true, error: null, retryCount }))\r\n\r\n      // Use shared services with org-aware scoping and fuzzy fallbacks\r\n      const [sales, dc, finance, vendorsOpts, productsOpts] = await Promise.all([\r\n        getSalesConsultants().catch(() => []),\r\n        getDeliveryCoordinators().catch(() => []),\r\n        getFinanceManagers().catch(() => []),\r\n        getVendors({ activeOnly: true }).catch(() => []),\r\n        getProducts({ activeOnly: true }).catch(() => []),\r\n      ])\r\n\r\n      setDropdownData({\r\n        salesConsultants: sales,\r\n        deliveryCoordinators: dc,\r\n        financeManagers: finance,\r\n        vendors: vendorsOpts,\r\n        products: productsOpts?.map((p) => ({ ...p, unitPrice: p?.unit_price })),\r\n        loading: false,\r\n        error: null,\r\n        retryCount,\r\n      })\r\n    } catch (err) {\r\n      console.error('Failed to load dropdown data:', err)\r\n\r\n      // Retry logic for network failures\r\n      if (\r\n        retryCount < 2 &&\r\n        (err?.message?.includes('fetch') || err?.message?.includes('network'))\r\n      ) {\r\n        setTimeout(() => loadDropdownData(retryCount + 1), 1000 * (retryCount + 1))\r\n        return\r\n      }\r\n\r\n      setDropdownData((prev) => ({\r\n        ...prev,\r\n        loading: false,\r\n        error: 'Failed to load dropdown data. Please check your connection and try again.',\r\n        retryCount,\r\n      }))\r\n    }\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced loaner checkbox with proper mobile accessibility and boolean handling\r\n  const LoanerCheckbox = ({ checked, onChange }) => (\r\n    <div className=\"bg-slate-50 p-4 rounded-lg border border-slate-200\">\r\n      <label\r\n        htmlFor=\"needs-loaner-modal\"\r\n        className=\"flex items-center gap-3 cursor-pointer select-none\"\r\n      >\r\n        <input\r\n          id=\"needs-loaner-modal\"\r\n          type=\"checkbox\"\r\n          checked={Boolean(checked)}\r\n          onChange={(e) => {\r\n            const isChecked = Boolean(e?.target?.checked)\r\n            onChange(isChecked)\r\n          }}\r\n          className=\"w-5 h-5 text-blue-600 border-2 border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer\"\r\n          data-testid=\"loaner-checkbox\"\r\n        />\r\n        <span className=\"text-sm font-medium text-gray-700\">Customer needs loaner vehicle</span>\r\n      </label>\r\n      <p className=\"text-xs text-gray-500 mt-2 ml-8\">\r\n        Check this if the customer requires a loaner vehicle during service\r\n      </p>\r\n    </div>\r\n  )\r\n\r\n  // ✅ FIXED: Enhanced native select component with better error handling\r\n  const MobileSelect = ({\r\n    label,\r\n    options,\r\n    value,\r\n    onChange,\r\n    placeholder,\r\n    required = false,\r\n    helpText,\r\n    testId,\r\n  }) => (\r\n    <div>\r\n      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n        {label} {required && <span className=\"text-red-500\">*</span>}\r\n      </label>\r\n      <select\r\n        value={value || ''}\r\n        onChange={(e) => onChange(e?.target?.value || null)}\r\n        className=\"bg-white border border-gray-300 rounded-lg w-full h-11 px-3 text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer\"\r\n        disabled={dropdownData?.loading}\r\n        required={required}\r\n        data-testid={testId}\r\n      >\r\n        <option value=\"\">{placeholder}</option>\r\n        {options?.map((option) => (\r\n          <option key={option?.id} value={option?.id}>\r\n            {option?.full_name || option?.label || option?.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      {helpText && <p className=\"mt-1 text-xs text-gray-500\">{helpText}</p>}\r\n      {options?.length === 0 && !dropdownData?.loading && (\r\n        <p className=\"mt-1 text-xs text-gray-500\">\r\n          No {label?.toLowerCase()} found yet. Add it in Admin.{' '}\r\n          <a\r\n            href=\"/admin\"\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n            className=\"text-blue-600 hover:underline\"\r\n          >\r\n            Open Admin\r\n          </a>\r\n        </p>\r\n      )}\r\n    </div>\r\n  )\r\n\r\n  // Dirty state tracking\r\n  useEffect(() => {\r\n    const hasChanges =\r\n      customerData?.customerName !== initialFormState?.customerName ||\r\n      customerData?.customerPhone !== initialFormState?.customerPhone ||\r\n      customerData?.customerEmail !== initialFormState?.customerEmail ||\r\n      customerData?.needsLoaner !== initialFormState?.needsLoaner ||\r\n      customerData?.assignedTo !== initialFormState?.assignedTo ||\r\n      customerData?.deliveryCoordinator !== initialFormState?.deliveryCoordinator ||\r\n      customerData?.financeManager !== initialFormState?.financeManager ||\r\n      lineItems?.length > 0\r\n\r\n    setIsDirty(hasChanges)\r\n  }, [customerData, lineItems])\r\n\r\n  // Load dropdown data when modal opens\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      loadDropdownData()\r\n    }\r\n  }, [isOpen])\r\n\r\n  // Add new line item\r\n  const addLineItem = () => {\r\n    setLineItems((prev) => [\r\n      ...prev,\r\n      {\r\n        id: Date.now(),\r\n        productId: '',\r\n        unitPrice: '',\r\n        serviceType: 'in_house',\r\n        vendorId: '',\r\n        requiresScheduling: true,\r\n        promisedDate: '',\r\n        noScheduleReason: '',\r\n        serviceNotes: '',\r\n      },\r\n    ])\r\n  }\r\n\r\n  // Update line item\r\n  const updateLineItem = (id, field, value) => {\r\n    setLineItems((prev) =>\r\n      prev?.map((item) => {\r\n        if (item?.id === id) {\r\n          let updatedItem = { ...item, [field]: value }\r\n\r\n          if (field === 'requiresScheduling') {\r\n            if (value === true) {\r\n              updatedItem.noScheduleReason = ''\r\n            } else {\r\n              updatedItem.promisedDate = ''\r\n            }\r\n          }\r\n\r\n          return updatedItem\r\n        }\r\n        return item\r\n      })\r\n    )\r\n\r\n    // Auto-populate price when product is selected\r\n    if (field === 'productId' && value) {\r\n      const selectedProduct = dropdownData?.products?.find((p) => p?.id === value)\r\n      if (selectedProduct) {\r\n        setLineItems((prev) =>\r\n          prev?.map((item) =>\r\n            item?.id === id ? { ...item, unitPrice: selectedProduct?.unitPrice || '' } : item\r\n          )\r\n        )\r\n      }\r\n    }\r\n  }\r\n\r\n  // Remove line item\r\n  const removeLineItem = (id) => {\r\n    setLineItems((prev) => prev?.filter((item) => item?.id !== id))\r\n  }\r\n\r\n  // Validation\r\n  const validateStep1 = () => {\r\n    return customerData?.customerName?.trim()?.length > 0\r\n  }\r\n\r\n  const validateStep2 = () => {\r\n    if (lineItems?.length === 0) return false\r\n\r\n    return lineItems?.every((item) => {\r\n      if (!item?.productId || !item?.unitPrice) return false\r\n      if (item?.requiresScheduling && !item?.promisedDate) return false\r\n      if (!item?.requiresScheduling && !item?.noScheduleReason?.trim()) return false\r\n      if (item?.serviceType === 'vendor' && !item?.vendorId) return false\r\n      return true\r\n    })\r\n  }\r\n\r\n  // Calculate total\r\n  const calculateTotal = () => {\r\n    return lineItems?.reduce((sum, item) => {\r\n      return sum + (parseFloat(item?.unitPrice) || 0)\r\n    }, 0)\r\n  }\r\n\r\n  // Handle save as draft\r\n  const handleSaveDraft = async () => {\r\n    if (!validateStep1()) {\r\n      setError('Customer name is required to save draft')\r\n      return\r\n    }\r\n\r\n    setIsSubmitting(true)\r\n    setError('')\r\n\r\n    try {\r\n      // Create vehicle via service (service-layer boundary)\r\n      const vehiclePayload = {\r\n        year: customerData?.vehicleYear || new Date()?.getFullYear(),\r\n        make: customerData?.vehicleMake || 'TBD',\r\n        model: customerData?.vehicleModel || 'TBD',\r\n        owner_name: customerData?.customerName?.trim(),\r\n        owner_phone: customerData?.customerPhone?.trim() || null,\r\n        owner_email: customerData?.customerEmail?.trim() || null,\r\n        stock_number: customerData?.stockNumber?.trim() || `DRAFT-${Date.now()}`,\r\n        vehicle_status: 'active',\r\n        ...(orgId ? { org_id: orgId } : {}),\r\n      }\r\n      const vehicle = await vehicleService.create(vehiclePayload)\r\n\r\n      // Create draft job via dealService\r\n      const payload = {\r\n        title: `Draft Deal - ${customerData?.customerName?.trim()}`,\r\n        description: `Draft deal for ${customerData?.customerName?.trim()}`,\r\n        job_status: 'draft',\r\n        service_type: 'in_house',\r\n        vehicle_id: vehicle?.id,\r\n        assigned_to: customerData?.assignedTo || user?.id,\r\n        delivery_coordinator_id: customerData?.deliveryCoordinator || null,\r\n        finance_manager_id: customerData?.financeManager || null,\r\n        customer_needs_loaner: Boolean(customerData?.needsLoaner),\r\n        customerName: customerData?.customerName?.trim(),\r\n        customerPhone: customerData?.customerPhone?.trim() || '',\r\n        customerEmail: customerData?.customerEmail?.trim() || '',\r\n        org_id: orgId || undefined,\r\n        lineItems: [],\r\n      }\r\n      await dealService.createDeal(payload)\r\n\r\n      onSuccess?.()\r\n      resetForm()\r\n      onClose()\r\n    } catch (err) {\r\n      setError(`Failed to save draft: ${err?.message}`)\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  // Handle create full deal\r\n  const handleCreateDeal = async () => {\r\n    if (!validateStep1() || !validateStep2()) {\r\n      setError('Please complete all required fields')\r\n      return\r\n    }\r\n\r\n    setIsSubmitting(true)\r\n    setError('')\r\n\r\n    try {\r\n      // Create vehicle via service\r\n      const vehiclePayload = {\r\n        year: customerData?.vehicleYear || new Date()?.getFullYear(),\r\n        make: customerData?.vehicleMake || 'TBD',\r\n        model: customerData?.vehicleModel || 'TBD',\r\n        owner_name: customerData?.customerName?.trim(),\r\n        owner_phone: customerData?.customerPhone?.trim() || null,\r\n        owner_email: customerData?.customerEmail?.trim() || null,\r\n        stock_number: customerData?.stockNumber?.trim() || `DEAL-${Date.now()}`,\r\n        vehicle_status: 'active',\r\n        ...(orgId ? { org_id: orgId } : {}),\r\n      }\r\n      const vehicle = await vehicleService.create(vehiclePayload)\r\n\r\n      const total = calculateTotal()\r\n      const hasVendorItems = lineItems?.some((item) => item?.serviceType === 'vendor')\r\n      const serviceType = hasVendorItems ? 'vendor' : 'in_house'\r\n      const primaryVendor = lineItems?.find((item) => item?.vendorId)?.vendorId || null\r\n\r\n      // If vendor job, ensure scheduled_start_time is set (DB constraint)\r\n      let scheduledStart = null\r\n      if (serviceType === 'vendor') {\r\n        const vendorDates = (lineItems || [])\r\n          .filter(\r\n            (it) => it?.serviceType === 'vendor' && it?.requiresScheduling && it?.promisedDate\r\n          )\r\n          .map((it) => new Date(it?.promisedDate))\r\n          .sort((a, b) => a - b)\r\n        scheduledStart = (vendorDates?.[0] || new Date())?.toISOString()\r\n      }\r\n\r\n      // Build line items for dealService\r\n      const li = (lineItems || []).map((item) => ({\r\n        product_id: item?.productId,\r\n        quantity_used: 1,\r\n        unit_price: parseFloat(item?.unitPrice || 0),\r\n        promised_date: item?.requiresScheduling ? item?.promisedDate : null,\r\n        requires_scheduling: Boolean(item?.requiresScheduling),\r\n        no_schedule_reason: !item?.requiresScheduling ? item?.noScheduleReason : null,\r\n        is_off_site: item?.serviceType === 'vendor',\r\n      }))\r\n\r\n      const payload = {\r\n        title: `Deal - ${customerData?.customerName?.trim()}`,\r\n        description: `Deal for ${customerData?.customerName?.trim()}`,\r\n        job_status: 'pending',\r\n        service_type: serviceType,\r\n        vehicle_id: vehicle?.id,\r\n        vendor_id: primaryVendor,\r\n        assigned_to: customerData?.assignedTo || user?.id,\r\n        delivery_coordinator_id: customerData?.deliveryCoordinator || null,\r\n        finance_manager_id: customerData?.financeManager || null,\r\n        customer_needs_loaner: Boolean(customerData?.needsLoaner),\r\n        scheduled_start_time: scheduledStart,\r\n        estimated_cost: total,\r\n        org_id: orgId || undefined,\r\n        customerName: customerData?.customerName?.trim(),\r\n        customerPhone: customerData?.customerPhone?.trim() || '',\r\n        customerEmail: customerData?.customerEmail?.trim() || '',\r\n        lineItems: li,\r\n      }\r\n\r\n      // Create via service (inserts job + parts)\r\n      const created = await dealService.createDeal(payload)\r\n\r\n      // Upsert transaction and finalize totals via update\r\n      await dealService.updateDeal(created?.id, payload)\r\n\r\n      onSuccess?.()\r\n      resetForm()\r\n      onClose()\r\n    } catch (err) {\r\n      setError(`Failed to create deal: ${err?.message}`)\r\n    } finally {\r\n      setIsSubmitting(false)\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setCurrentStep(1)\r\n    setCustomerData(initialFormState)\r\n    setLineItems([])\r\n    setError('')\r\n    setIsDirty(false)\r\n  }\r\n\r\n  // Enhanced close handler with unsaved changes guard\r\n  const handleClose = () => {\r\n    if (isDirty) {\r\n      setShowUnsavedWarning(true)\r\n    } else {\r\n      resetForm()\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  const confirmClose = () => {\r\n    setShowUnsavedWarning(false)\r\n    resetForm()\r\n    onClose()\r\n  }\r\n\r\n  if (!isOpen) return null\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-xl w-full max-w-4xl max-h-[95vh] flex flex-col overflow-hidden shadow-xl\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b bg-slate-50 flex-shrink-0\">\r\n          <div>\r\n            <h2 className=\"text-xl font-semibold text-gray-900\">Create New Deal</h2>\r\n            <p className=\"text-sm text-gray-600 mt-1\">\r\n              {currentStep === 1 ? 'Customer Information' : 'Line Items & Service Configuration'}\r\n            </p>\r\n          </div>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"text-gray-400 hover:text-gray-600 p-2 hover:bg-gray-100 rounded-lg\"\r\n          >\r\n            <Icon name=\"X\" size={24} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Progress indicator */}\r\n        <div className=\"px-6 py-4 bg-slate-50 flex-shrink-0 border-b\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div\r\n              className={`flex items-center space-x-2 ${currentStep >= 1 ? 'text-blue-600' : 'text-gray-400'}`}\r\n            >\r\n              <div\r\n                className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\r\n                  currentStep >= 1 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'\r\n                }`}\r\n              >\r\n                1\r\n              </div>\r\n              <span className=\"font-medium\">Customer</span>\r\n            </div>\r\n            <div className=\"flex-1 h-px bg-gray-300\"></div>\r\n            <div\r\n              className={`flex items-center space-x-2 ${currentStep >= 2 ? 'text-blue-600' : 'text-gray-400'}`}\r\n            >\r\n              <div\r\n                className={`w-8 h-8 rounded-full flex items-center justify-center text-sm font-medium ${\r\n                  currentStep >= 2 ? 'bg-blue-600 text-white' : 'bg-gray-200 text-gray-600'\r\n                }`}\r\n              >\r\n                2\r\n              </div>\r\n              <span className=\"font-medium\">Line Items</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 overflow-y-auto flex-1 bg-white\">\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg text-red-800 text-sm\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div>\r\n                  <strong>Error:</strong> {error}\r\n                </div>\r\n                <button\r\n                  onClick={() => setError('')}\r\n                  className=\"text-red-600 hover:text-red-800 ml-2\"\r\n                >\r\n                  <Icon name=\"X\" size={16} />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Inline, non-blocking loading UX: remove global banner; controls handle loading state */}\r\n\r\n          {dropdownData?.error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg text-red-800 text-sm\">\r\n              <div className=\"flex justify-between items-start\">\r\n                <div>\r\n                  <strong>Error:</strong> {dropdownData?.error}\r\n                </div>\r\n                <button\r\n                  onClick={() => loadDropdownData()}\r\n                  className=\"text-blue-600 hover:text-blue-800 ml-2 text-xs underline\"\r\n                >\r\n                  Retry\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {currentStep === 1 && (\r\n            <div className=\"space-y-6\">\r\n              {/* Customer Information */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Customer Name <span className=\"text-red-500\">*</span>\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={customerData?.customerName}\r\n                    onChange={(e) =>\r\n                      setCustomerData((prev) => ({ ...prev, customerName: e?.target?.value }))\r\n                    }\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"Enter customer name\"\r\n                    required\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Customer Phone\r\n                  </label>\r\n                  <input\r\n                    type=\"tel\"\r\n                    value={customerData?.customerPhone}\r\n                    onChange={(e) =>\r\n                      setCustomerData((prev) => ({ ...prev, customerPhone: e?.target?.value }))\r\n                    }\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"Enter customer phone\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Customer Email\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  value={customerData?.customerEmail}\r\n                  onChange={(e) =>\r\n                    setCustomerData((prev) => ({ ...prev, customerEmail: e?.target?.value }))\r\n                  }\r\n                  className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                  placeholder=\"Enter customer email\"\r\n                />\r\n              </div>\r\n\r\n              {/* Vehicle Information */}\r\n              <div className=\"bg-slate-50 p-4 rounded-lg border border-slate-200\">\r\n                <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Vehicle Information</h4>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Year</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      value={customerData?.vehicleYear || ''}\r\n                      onChange={(e) =>\r\n                        setCustomerData((prev) => ({ ...prev, vehicleYear: e?.target?.value }))\r\n                      }\r\n                      className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"2024\"\r\n                      min=\"1900\"\r\n                      max={new Date()?.getFullYear() + 2}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Make</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={customerData?.vehicleMake || ''}\r\n                      onChange={(e) =>\r\n                        setCustomerData((prev) => ({ ...prev, vehicleMake: e?.target?.value }))\r\n                      }\r\n                      className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Toyota\"\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Model</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={customerData?.vehicleModel || ''}\r\n                      onChange={(e) =>\r\n                        setCustomerData((prev) => ({ ...prev, vehicleModel: e?.target?.value }))\r\n                      }\r\n                      className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                      placeholder=\"Camry\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mt-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Stock Number\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={customerData?.stockNumber || ''}\r\n                    onChange={(e) =>\r\n                      setCustomerData((prev) => ({ ...prev, stockNumber: e?.target?.value }))\r\n                    }\r\n                    className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                    placeholder=\"Enter stock number (optional)\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* ✅ FIXED: Enhanced loaner checkbox with proper mobile functionality */}\r\n              <LoanerCheckbox\r\n                checked={customerData?.needsLoaner}\r\n                onChange={(checked) => {\r\n                  setCustomerData((prev) => ({ ...prev, needsLoaner: Boolean(checked) }))\r\n                }}\r\n              />\r\n\r\n              {/* ✅ FIXED: Dealer Representatives with working dropdowns */}\r\n              <div className=\"bg-slate-50 p-4 rounded-lg border border-slate-200\">\r\n                <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Dealer Representatives</h4>\r\n\r\n                <div className=\"grid grid-cols-1 gap-4\">\r\n                  <MobileSelect\r\n                    label=\"Sales Consultant\"\r\n                    options={dropdownData?.salesConsultants}\r\n                    value={customerData?.assignedTo}\r\n                    onChange={(value) =>\r\n                      setCustomerData((prev) => ({ ...prev, assignedTo: value }))\r\n                    }\r\n                    placeholder=\"Select sales consultant (optional)\"\r\n                    helpText=\"Choose the sales consultant responsible for this deal\"\r\n                    testId=\"sales-select\"\r\n                  />\r\n\r\n                  <MobileSelect\r\n                    label=\"Delivery Coordinator\"\r\n                    options={dropdownData?.deliveryCoordinators}\r\n                    value={customerData?.deliveryCoordinator}\r\n                    onChange={(value) =>\r\n                      setCustomerData((prev) => ({ ...prev, deliveryCoordinator: value }))\r\n                    }\r\n                    placeholder=\"Select delivery coordinator (optional)\"\r\n                    helpText=\"Choose the delivery coordinator for this deal\"\r\n                    testId=\"delivery-select\"\r\n                  />\r\n\r\n                  <MobileSelect\r\n                    label=\"Finance Manager\"\r\n                    options={dropdownData?.financeManagers}\r\n                    value={customerData?.financeManager}\r\n                    onChange={(value) =>\r\n                      setCustomerData((prev) => ({ ...prev, financeManager: value }))\r\n                    }\r\n                    placeholder=\"Select finance manager (optional)\"\r\n                    helpText=\"Choose the finance manager for this deal\"\r\n                    testId=\"finance-select\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {currentStep === 2 && (\r\n            <div className=\"space-y-6\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <h3 className=\"text-lg font-medium text-gray-900\">Line Items</h3>\r\n                <Button\r\n                  onClick={addLineItem}\r\n                  variant=\"outline\"\r\n                  size=\"sm\"\r\n                  className=\"flex items-center space-x-2 bg-blue-50 border-blue-200 text-blue-700 hover:bg-blue-100 h-11\"\r\n                >\r\n                  <Icon name=\"Plus\" size={16} />\r\n                  <span>Add Item</span>\r\n                </Button>\r\n              </div>\r\n\r\n              {lineItems?.length === 0 ? (\r\n                <div className=\"text-center py-8 text-gray-500 bg-slate-50 rounded-lg border-2 border-dashed border-gray-300\">\r\n                  <Icon name=\"Package\" size={48} className=\"mx-auto mb-4 text-gray-300\" />\r\n                  <p>No line items added yet</p>\r\n                  <p className=\"text-sm\">Click \"Add Item\" to get started</p>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-4\">\r\n                  {lineItems?.map((item, index) => (\r\n                    <div\r\n                      key={item?.id}\r\n                      className=\"border rounded-xl p-4 bg-slate-50 border-slate-200\"\r\n                    >\r\n                      <div className=\"flex items-center justify-between mb-4\">\r\n                        <h4 className=\"font-medium text-gray-900\">Item #{index + 1}</h4>\r\n                        <button\r\n                          onClick={() => removeLineItem(item?.id)}\r\n                          className=\"text-red-600 hover:text-red-800 p-2 hover:bg-red-50 rounded-lg\"\r\n                          aria-label=\"Remove line item\"\r\n                          title=\"Remove line item\"\r\n                        >\r\n                          <Icon name=\"Trash2\" size={16} />\r\n                        </button>\r\n                      </div>\r\n\r\n                      {/* Product and Price */}\r\n                      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Product <span className=\"text-red-500\">*</span>\r\n                          </label>\r\n                          <select\r\n                            value={item?.productId || ''}\r\n                            onChange={(e) =>\r\n                              updateLineItem(item?.id, 'productId', e?.target?.value)\r\n                            }\r\n                            className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer\"\r\n                            required\r\n                            data-testid={`product-select-${index}`}\r\n                          >\r\n                            <option value=\"\">Select product</option>\r\n                            {dropdownData?.products?.map((product) => (\r\n                              <option key={product?.id} value={product?.id}>\r\n                                {product?.label}\r\n                              </option>\r\n                            ))}\r\n                          </select>\r\n                          {!dropdownData?.loading &&\r\n                            (dropdownData?.products?.length || 0) === 0 && (\r\n                              <p className=\"mt-1 text-xs text-gray-500\">\r\n                                No products found yet. Add one in Admin.{' '}\r\n                                <a\r\n                                  href=\"/admin\"\r\n                                  target=\"_blank\"\r\n                                  rel=\"noreferrer\"\r\n                                  className=\"text-blue-600 hover:underline\"\r\n                                >\r\n                                  Open Admin\r\n                                </a>\r\n                              </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Unit Price <span className=\"text-red-500\">*</span>\r\n                          </label>\r\n                          <input\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            min=\"0\"\r\n                            value={item?.unitPrice}\r\n                            onChange={(e) =>\r\n                              updateLineItem(item?.id, 'unitPrice', e?.target?.value)\r\n                            }\r\n                            className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            placeholder=\"0.00\"\r\n                            required\r\n                            data-testid={`unit-price-input-${index}`}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n\r\n                      {/* Service Configuration */}\r\n                      <div className=\"bg-white rounded-lg p-4 border border-slate-200 mb-4\">\r\n                        <h5 className=\"font-medium text-gray-900 mb-3\">Service Configuration</h5>\r\n\r\n                        {/* Service Type */}\r\n                        <div className=\"mb-4\">\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Service Type\r\n                          </label>\r\n                          <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                            <label className=\"flex items-center cursor-pointer\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                name={`serviceType_${item?.id}`}\r\n                                value=\"in_house\"\r\n                                checked={item?.serviceType === 'in_house'}\r\n                                onChange={(e) =>\r\n                                  updateLineItem(item?.id, 'serviceType', e?.target?.value)\r\n                                }\r\n                                className=\"mr-2 cursor-pointer\"\r\n                              />\r\n                              🏠 On-Site (In-House)\r\n                            </label>\r\n                            <label className=\"flex items-center cursor-pointer\">\r\n                              <input\r\n                                type=\"radio\"\r\n                                name={`serviceType_${item?.id}`}\r\n                                value=\"vendor\"\r\n                                checked={item?.serviceType === 'vendor'}\r\n                                onChange={(e) =>\r\n                                  updateLineItem(item?.id, 'serviceType', e?.target?.value)\r\n                                }\r\n                                className=\"mr-2 cursor-pointer\"\r\n                              />\r\n                              🏢 Off-Site (Vendor)\r\n                            </label>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Vendor Selection */}\r\n                        {item?.serviceType === 'vendor' && (\r\n                          <div className=\"mb-4 p-3 bg-orange-50 rounded-lg border border-orange-200\">\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                              Vendor <span className=\"text-red-500\">*</span>\r\n                            </label>\r\n                            <select\r\n                              value={item?.vendorId || ''}\r\n                              onChange={(e) =>\r\n                                updateLineItem(item?.id, 'vendorId', e?.target?.value)\r\n                              }\r\n                              className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer\"\r\n                              required\r\n                            >\r\n                              <option value=\"\">Select vendor</option>\r\n                              {dropdownData?.vendors?.map((vendor) => (\r\n                                <option key={vendor?.id} value={vendor?.id}>\r\n                                  {vendor?.label}\r\n                                </option>\r\n                              ))}\r\n                            </select>\r\n                            {!dropdownData?.loading &&\r\n                              (dropdownData?.vendors?.length || 0) === 0 && (\r\n                                <p className=\"mt-1 text-xs text-gray-500\">\r\n                                  No vendors found yet. Add one in Admin.{' '}\r\n                                  <a\r\n                                    href=\"/admin\"\r\n                                    target=\"_blank\"\r\n                                    rel=\"noreferrer\"\r\n                                    className=\"text-blue-600 hover:underline\"\r\n                                  >\r\n                                    Open Admin\r\n                                  </a>\r\n                                </p>\r\n                              )}\r\n                          </div>\r\n                        )}\r\n\r\n                        {/* Scheduling */}\r\n                        <div className=\"mb-4\">\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Scheduling\r\n                          </label>\r\n                          <div className=\"space-y-3\">\r\n                            <div className=\"flex flex-col sm:flex-row gap-2\">\r\n                              <label\r\n                                className=\"flex items-center cursor-pointer\"\r\n                                htmlFor={`requiresScheduling-${index}`}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name={`scheduling_${item?.id}`}\r\n                                  checked={item?.requiresScheduling === true}\r\n                                  onChange={() =>\r\n                                    updateLineItem(item?.id, 'requiresScheduling', true)\r\n                                  }\r\n                                  className=\"mr-2 cursor-pointer\"\r\n                                  id={`requiresScheduling-${index}`}\r\n                                  data-testid={`requires-scheduling-${index}`}\r\n                                />\r\n                                Needs Scheduling\r\n                              </label>\r\n                              <label\r\n                                className=\"flex items-center cursor-pointer\"\r\n                                htmlFor={`noScheduling-${index}`}\r\n                              >\r\n                                <input\r\n                                  type=\"radio\"\r\n                                  name={`scheduling_${item?.id}`}\r\n                                  checked={item?.requiresScheduling === false}\r\n                                  onChange={() =>\r\n                                    updateLineItem(item?.id, 'requiresScheduling', false)\r\n                                  }\r\n                                  className=\"mr-2 cursor-pointer\"\r\n                                  id={`noScheduling-${index}`}\r\n                                />\r\n                                No Scheduling Needed\r\n                              </label>\r\n                            </div>\r\n\r\n                            {item?.requiresScheduling ? (\r\n                              <div className=\"p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                  Promised Date <span className=\"text-red-500\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"date\"\r\n                                  value={item?.promisedDate}\r\n                                  onChange={(e) =>\r\n                                    updateLineItem(item?.id, 'promisedDate', e?.target?.value)\r\n                                  }\r\n                                  min={new Date()?.toISOString()?.split('T')?.[0]}\r\n                                  className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            ) : (\r\n                              <div className=\"p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                                  Reason for No Schedule <span className=\"text-red-500\">*</span>\r\n                                </label>\r\n                                <input\r\n                                  type=\"text\"\r\n                                  value={item?.noScheduleReason}\r\n                                  onChange={(e) =>\r\n                                    updateLineItem(item?.id, 'noScheduleReason', e?.target?.value)\r\n                                  }\r\n                                  className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                                  placeholder=\"e.g., installed at delivery, no appointment needed\"\r\n                                  required\r\n                                />\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Service Notes */}\r\n                        <div>\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Service Notes\r\n                          </label>\r\n                          <textarea\r\n                            rows={2}\r\n                            value={item?.serviceNotes}\r\n                            onChange={(e) =>\r\n                              updateLineItem(item?.id, 'serviceNotes', e?.target?.value)\r\n                            }\r\n                            className=\"w-full p-3 border border-gray-300 rounded-lg text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                            placeholder=\"Special instructions, customer preferences, etc.\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  {/* Total */}\r\n                  <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"text-lg font-medium text-gray-900\">Total:</span>\r\n                      <span className=\"text-xl font-bold text-green-700\">\r\n                        ${calculateTotal()?.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600 mt-1\">\r\n                      {lineItems?.length} item{lineItems?.length !== 1 ? 's' : ''} added\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Footer */}\r\n        <div className=\"px-6 py-4 border-t bg-slate-50 flex-shrink-0\">\r\n          <div className=\"flex flex-col md:flex-row justify-between items-center gap-3\">\r\n            <div className=\"flex space-x-3 w-full md:w-auto\">\r\n              {currentStep === 2 && (\r\n                <Button\r\n                  onClick={() => setCurrentStep(1)}\r\n                  variant=\"outline\"\r\n                  className=\"w-full md:w-auto h-11\"\r\n                >\r\n                  ← Back\r\n                </Button>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"flex space-x-3 w-full md:w-auto\">\r\n              <Button onClick={handleClose} variant=\"outline\" className=\"w-full md:w-auto h-11\">\r\n                Cancel\r\n              </Button>\r\n\r\n              {currentStep === 1 && (\r\n                <>\r\n                  <Button\r\n                    onClick={handleSaveDraft}\r\n                    disabled={!validateStep1() || isSubmitting}\r\n                    variant=\"outline\"\r\n                    className=\"w-full md:w-auto h-11 bg-yellow-50 border-yellow-300 text-yellow-800 hover:bg-yellow-100\"\r\n                  >\r\n                    {isSubmitting ? 'Saving...' : 'Save Draft'}\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => setCurrentStep(2)}\r\n                    disabled={!validateStep1()}\r\n                    className=\"w-full md:w-auto h-11 bg-blue-600 hover:bg-blue-700\"\r\n                  >\r\n                    Add Line Items →\r\n                  </Button>\r\n                </>\r\n              )}\r\n\r\n              {currentStep === 2 && (\r\n                <Button\r\n                  onClick={handleCreateDeal}\r\n                  disabled={!validateStep1() || !validateStep2() || isSubmitting}\r\n                  className=\"w-full md:w-auto h-11 bg-green-600 hover:bg-green-700\"\r\n                >\r\n                  {isSubmitting ? 'Creating...' : 'Create Deal'}\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Unsaved Changes Warning Modal */}\r\n        {showUnsavedWarning && (\r\n          <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center z-10\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md mx-4 shadow-xl\">\r\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\">Unsaved Changes</h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                You have unsaved changes. Are you sure you want to close and discard your changes?\r\n              </p>\r\n              <div className=\"flex space-x-3\">\r\n                <Button\r\n                  variant=\"outline\"\r\n                  onClick={() => setShowUnsavedWarning(false)}\r\n                  className=\"flex-1 h-11\"\r\n                >\r\n                  Keep Editing\r\n                </Button>\r\n                <Button\r\n                  onClick={confirmClose}\r\n                  className=\"flex-1 h-11 bg-red-600 hover:bg-red-700 text-white\"\r\n                >\r\n                  Discard Changes\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { supabase } from '@/lib/supabase'\r\nimport { safeSelect } from '@/lib/supabase/safeSelect'\r\nimport { toOptions } from '@/lib/options'\r\n\r\n// Tenant-aware list for dropdowns and consumers\r\nexport async function listProductsByOrg(orgId, { activeOnly = true } = {}) {\r\n  let q = supabase.from('products').select('*').order('name', { ascending: true })\r\n  if (activeOnly) q = q.eq('is_active', true)\r\n  if (orgId) q = q.or(`org_id.eq.${orgId},org_id.is.null`)\r\n  const rows = await safeSelect(q, 'products:listByOrg')\r\n  return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n}\r\n\r\nexport const productService = {\r\n  async list({ orgId = null, activeOnly = true } = {}) {\r\n    let q = supabase.from('products').select('*').order('name', { ascending: true })\r\n    if (activeOnly) q = q.eq('is_active', true)\r\n    if (orgId) q = q.or(`org_id.eq.${orgId},org_id.is.null`)\r\n    const rows = await safeSelect(q, 'products:list')\r\n    return toOptions(rows, { labelKey: 'name', valueKey: 'id' })\r\n  },\r\n\r\n  async getById(id, orgId = null) {\r\n    if (!id) return null\r\n    try {\r\n      let q = supabase.from('products').select('*').eq('id', id).single()\r\n      if (orgId) q = q.eq('org_id', orgId)\r\n      const res = await q.throwOnError()\r\n      return res?.data ?? null\r\n    } catch (e) {\r\n      console.error('[products:getById] failed', e)\r\n      return null\r\n    }\r\n  },\r\n}\r\n\r\nexport default productService\r\n","import { supabase } from '@/lib/supabase'\r\nimport { safeSelect } from '@/lib/supabase/safeSelect'\r\n\r\n// Prefer user_profiles as the authoritative staff source\r\nexport function listStaffByOrg(orgId, { activeOnly = true } = {}) {\r\n  let q = supabase.from('user_profiles').select('*').order('full_name', { ascending: true })\r\n  if (activeOnly) q = q.eq('is_active', true)\r\n  if (orgId) q = q.eq('org_id', orgId)\r\n  return safeSelect(q, 'staff:listByOrg')\r\n}\r\n\r\nexport default { listStaffByOrg }\r\n","import { useEffect, useState } from 'react'\r\nimport { useAuth } from '../contexts/AuthContext'\r\nimport useTenant from './useTenant'\r\nimport { listVendorsByOrg } from '../services/vendorService'\r\nimport { listProductsByOrg } from '../services/productService'\r\nimport { listStaffByOrg } from '../services/staffService'\r\nimport { listSmsTemplatesByOrg } from '../services/smsTemplateService'\r\nimport {\r\n  getDeliveryCoordinators,\r\n  getSalesConsultants,\r\n  getFinanceManagers,\r\n  getUserProfiles,\r\n  getVendors,\r\n  getProducts,\r\n  peekVendors,\r\n  peekProducts,\r\n  peekStaff,\r\n  globalSearch,\r\n} from '../services/dropdownService'\r\n\r\nexport function useDropdownData(options = {}) {\r\n  const {\r\n    loadOnMount = true,\r\n    cacheTime = 5 * 60 * 1000, // 5 minutes default\r\n  } = options\r\n\r\n  const [state, setState] = useState({\r\n    dc: [],\r\n    sales: [],\r\n    finance: [],\r\n    users: [],\r\n    vendors: [],\r\n    products: [],\r\n    smsTemplates: [],\r\n    loading: true,\r\n    error: null,\r\n    searchResults: null,\r\n  })\r\n\r\n  const [lastUpdate, setLastUpdate] = useState(null)\r\n\r\n  const tenant = useTenant()\r\n  const auth = useAuth()\r\n\r\n  // Enhanced load data with tenant-aware services and better error handling\r\n  const loadData = async () => {\r\n    try {\r\n      // If tenant is still loading, skip without toggling the loading flag here.\r\n      // The effect below re-invokes loadData when tenant.loading flips to false.\r\n      if (tenant.loading) {\r\n        return\r\n      }\r\n\r\n      setState((prev) => ({ ...prev, loading: true, error: null }))\r\n\r\n      // If no user session, prefer global safe fallbacks\r\n      if (!tenant.session?.user) {\r\n        console.warn('Dropdowns: no authenticated user; some queries may return empty due to RLS')\r\n        setState((prev) => ({ ...prev, loading: false }))\r\n        return\r\n      }\r\n\r\n      // If org is not present, fallback to global dropdownService calls\r\n      const useTenantLists = Boolean(tenant.orgId)\r\n\r\n      const promises = [\r\n        getDeliveryCoordinators()?.catch((err) => {\r\n          console.error('[dropdowns:dc] Delivery coordinators failed:', err)\r\n          return []\r\n        }),\r\n        getSalesConsultants()?.catch((err) => {\r\n          console.error('[dropdowns:sales] Sales consultants failed:', err)\r\n          return []\r\n        }),\r\n        getFinanceManagers()?.catch((err) => {\r\n          console.error('[dropdowns:finance] Finance managers failed:', err)\r\n          return []\r\n        }),\r\n        useTenantLists\r\n          ? listStaffByOrg(tenant.orgId).catch((err) => {\r\n              console.error('[dropdowns:users] tenant staff failed:', err)\r\n              return []\r\n            })\r\n          : getUserProfiles({ activeOnly: true }).catch((err) => {\r\n              console.error('[dropdowns:users] global user profiles failed:', err)\r\n              return []\r\n            }),\r\n        useTenantLists\r\n          ? listVendorsByOrg(tenant.orgId).catch((err) => {\r\n              console.error('[dropdowns:vendors] tenant vendors failed:', err)\r\n              return []\r\n            })\r\n          : getVendors({ activeOnly: true }).catch((err) => {\r\n              console.error('[dropdowns:vendors] global vendors failed:', err)\r\n              return []\r\n            }),\r\n        useTenantLists\r\n          ? listProductsByOrg(tenant.orgId).catch((err) => {\r\n              console.error('[dropdowns:products] tenant products failed:', err)\r\n              return []\r\n            })\r\n          : getProducts({ activeOnly: true }).catch((err) => {\r\n              console.error('[dropdowns:products] global products failed:', err)\r\n              return []\r\n            }),\r\n        useTenantLists\r\n          ? listSmsTemplatesByOrg(tenant.orgId).catch((err) => {\r\n              console.error('[dropdowns:smsTemplates] tenant SMS templates failed:', err)\r\n              return []\r\n            })\r\n          : Promise.resolve([]),\r\n      ]\r\n\r\n      const [dc, sales, finance, users, vendors, products, smsTemplates] =\r\n        await Promise.all(promises)\r\n\r\n      setState({\r\n        dc,\r\n        sales,\r\n        finance,\r\n        users,\r\n        vendors,\r\n        products,\r\n        smsTemplates,\r\n        loading: false,\r\n        error: null,\r\n        searchResults: null,\r\n      })\r\n      setLastUpdate(Date.now())\r\n    } catch (err) {\r\n      setState({\r\n        dc: [],\r\n        sales: [],\r\n        finance: [],\r\n        users: [],\r\n        vendors: [],\r\n        products: [],\r\n        smsTemplates: [],\r\n        loading: false,\r\n        error: err?.message || 'Failed to load dropdown data',\r\n        searchResults: null,\r\n      })\r\n      console.error('[dropdowns] Dropdown data load failed:', err)\r\n    }\r\n  }\r\n\r\n  // Optimistic cached-first hydrate to avoid initial loading UI where possible\r\n  useEffect(() => {\r\n    try {\r\n      const cachedSales = peekStaff({\r\n        departments: ['Sales', 'Sales Consultant', 'Sales Consultants'],\r\n      })\r\n      const cachedDC = peekStaff({\r\n        departments: ['Delivery', 'Delivery Coordinator', 'Delivery Coordinators'],\r\n      })\r\n      const cachedFinance = peekStaff({\r\n        departments: ['Finance', 'Finance Manager', 'Finance Managers'],\r\n      })\r\n      const cachedVendors = peekVendors({ activeOnly: true })\r\n      const cachedProducts = peekProducts({ activeOnly: true })\r\n\r\n      const anyCached = [\r\n        cachedSales?.length,\r\n        cachedDC?.length,\r\n        cachedFinance?.length,\r\n        cachedVendors?.length,\r\n        cachedProducts?.length,\r\n      ].some(Boolean)\r\n\r\n      if (anyCached) {\r\n        setState((prev) => ({\r\n          ...prev,\r\n          sales: cachedSales || prev.sales,\r\n          dc: cachedDC || prev.dc,\r\n          finance: cachedFinance || prev.finance,\r\n          vendors: cachedVendors || prev.vendors,\r\n          products: cachedProducts || prev.products,\r\n          loading: false,\r\n          error: null,\r\n        }))\r\n      }\r\n    } catch (e) {\r\n      // Non-fatal; continue to normal load\r\n      console.info('[dropdowns] cached-first hydrate skipped:', e?.message)\r\n    }\r\n    // run only once on mount\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [])\r\n\r\n  // Check if cache is still valid\r\n  const isCacheValid = () => {\r\n    if (!lastUpdate) return false\r\n    return Date.now() - lastUpdate < cacheTime\r\n  }\r\n\r\n  // Refresh data if cache is invalid\r\n  const refreshIfNeeded = async () => {\r\n    if (!isCacheValid()) {\r\n      await loadData()\r\n    }\r\n  }\r\n\r\n  // Enhanced search functionality with error handling\r\n  const performGlobalSearch = async (searchTerm) => {\r\n    try {\r\n      if (!searchTerm?.trim()) {\r\n        setState((prev) => ({ ...prev, searchResults: null }))\r\n        return\r\n      }\r\n\r\n      const results = await globalSearch(searchTerm)\r\n      setState((prev) => ({ ...prev, searchResults: results }))\r\n    } catch (err) {\r\n      console.error('[dropdowns:search] Search failed:', err)\r\n      setState((prev) => ({ ...prev, searchResults: { users: [], vendors: [] } }))\r\n    }\r\n  }\r\n\r\n  // Clear search results\r\n  const clearSearch = () => {\r\n    setState((prev) => ({ ...prev, searchResults: null }))\r\n  }\r\n\r\n  // Get user options with filtering\r\n  const getUserOptions = (filterOptions = {}) => {\r\n    const { roles = [], departments = [], activeOnly = true } = filterOptions\r\n\r\n    let filteredUsers = state?.users || []\r\n\r\n    if (activeOnly) {\r\n      filteredUsers = filteredUsers?.filter((user) => user?.is_active)\r\n    }\r\n\r\n    if (roles?.length > 0) {\r\n      filteredUsers = filteredUsers?.filter((user) => roles?.includes(user?.role))\r\n    }\r\n\r\n    if (departments?.length > 0) {\r\n      filteredUsers = filteredUsers?.filter((user) => departments?.includes(user?.department))\r\n    }\r\n\r\n    return (\r\n      filteredUsers?.map((user) => ({\r\n        id: user?.id,\r\n        value: user?.id,\r\n        label: user?.full_name,\r\n        name: user?.full_name,\r\n        role: user?.role,\r\n        department: user?.department,\r\n        email: user?.email,\r\n      })) || []\r\n    )\r\n  }\r\n\r\n  // Get vendor options with filtering\r\n  const getVendorOptions = (filterOptions = {}) => {\r\n    const { activeOnly = true, specialty = null } = filterOptions\r\n\r\n    let filteredVendors = state?.vendors || []\r\n\r\n    if (activeOnly) {\r\n      filteredVendors = filteredVendors?.filter((vendor) => vendor?.is_active)\r\n    }\r\n\r\n    if (specialty) {\r\n      filteredVendors = filteredVendors?.filter((vendor) =>\r\n        vendor?.specialty?.toLowerCase()?.includes(specialty?.toLowerCase())\r\n      )\r\n    }\r\n\r\n    return (\r\n      filteredVendors?.map((vendor) => ({\r\n        id: vendor?.id,\r\n        value: vendor?.value || vendor?.id,\r\n        label: vendor?.label || vendor?.name,\r\n        name: vendor?.name,\r\n        specialty: vendor?.specialty,\r\n        email: vendor?.email,\r\n        phone: vendor?.phone,\r\n      })) || []\r\n    )\r\n  }\r\n\r\n  // Load data on mount if requested\r\n  useEffect(() => {\r\n    let mounted = true\r\n\r\n    ;(async () => {\r\n      if (!loadOnMount) return\r\n\r\n      // wait until auth.loading === false (or timeout after a few tries)\r\n      const start = Date.now()\r\n      while (mounted && auth?.loading && Date.now() - start < 5000) {\r\n        // small sleep\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await new Promise((r) => setTimeout(r, 200))\r\n      }\r\n\r\n      if (!mounted) return\r\n      if (!auth?.user) {\r\n        console.warn(\r\n          'Dropdowns: no authenticated user; dropdown queries will likely return empty due to RLS'\r\n        )\r\n      } else {\r\n        console.log('Dropdowns: authenticated user', auth?.user?.id)\r\n        if (auth?.userProfile) console.log('Dropdowns: user profile org', auth.userProfile)\r\n      }\r\n\r\n      if (mounted) await loadData()\r\n    })()\r\n\r\n    return () => {\r\n      mounted = false\r\n    }\r\n  }, [loadOnMount, auth?.loading, auth?.user?.id, tenant?.loading, tenant?.orgId])\r\n\r\n  return {\r\n    // Original data arrays\r\n    dc: state?.dc,\r\n    sales: state?.sales,\r\n    finance: state?.finance,\r\n    users: state?.users,\r\n    vendors: state?.vendors,\r\n    products: state?.products,\r\n    smsTemplates: state?.smsTemplates,\r\n\r\n    // Loading state\r\n    loading: state?.loading,\r\n    error: state?.error,\r\n\r\n    // Search functionality\r\n    searchResults: state?.searchResults,\r\n    globalSearch: performGlobalSearch,\r\n    clearSearch,\r\n\r\n    // Enhanced options methods expected by deals page\r\n    getUserOptions,\r\n    getVendorOptions,\r\n\r\n    // Actions\r\n    refresh: loadData,\r\n    refreshIfNeeded,\r\n\r\n    // Cache info\r\n    lastUpdate,\r\n    isCacheValid: isCacheValid(),\r\n\r\n    // Formatted options for backward compatibility\r\n    salesConsultantOptions: (state?.sales || [])?.map((item) => ({\r\n      id: item?.id,\r\n      value: item?.id,\r\n      label: item?.full_name,\r\n      name: item?.full_name,\r\n    })),\r\n\r\n    deliveryCoordinatorOptions: (state?.dc || [])?.map((item) => ({\r\n      id: item?.id,\r\n      value: item?.id,\r\n      label: item?.full_name,\r\n      name: item?.full_name,\r\n    })),\r\n\r\n    financeManagerOptions: (state?.finance || [])?.map((item) => ({\r\n      id: item?.id,\r\n      value: item?.id,\r\n      label: item?.full_name,\r\n      name: item?.full_name,\r\n    })),\r\n  }\r\n}\r\n\r\n// Enhanced deal form dropdowns hook with Finance Managers\r\nexport const useDealFormDropdowns = () => {\r\n  const {\r\n    dc: deliveryCoordinators,\r\n    sales: salesConsultants,\r\n    finance: financeManagers,\r\n    vendors,\r\n    products,\r\n    loading,\r\n    error,\r\n    refresh,\r\n  } = useDropdownData({ loadOnMount: true })\r\n\r\n  return {\r\n    // Deal-specific data with Finance Managers and additional data\r\n    salesConsultants,\r\n    deliveryCoordinators,\r\n    financeManagers,\r\n    vendors,\r\n    products,\r\n\r\n    // Loading state\r\n    loading,\r\n    error,\r\n\r\n    // Actions\r\n    refresh,\r\n\r\n    // Formatted options for dropdowns\r\n    salesConsultantOptions: (salesConsultants || [])?.map((item) => ({\r\n      id: item?.id,\r\n      value: item?.id,\r\n      label: item?.full_name,\r\n      name: item?.full_name,\r\n    })),\r\n\r\n    deliveryCoordinatorOptions: (deliveryCoordinators || [])?.map((item) => ({\r\n      id: item?.id,\r\n      value: item?.id,\r\n      label: item?.full_name,\r\n      name: item?.full_name,\r\n    })),\r\n\r\n    financeManagerOptions: (financeManagers || [])?.map((item) => ({\r\n      id: item?.id,\r\n      value: item?.id,\r\n      label: item?.full_name,\r\n      name: item?.full_name,\r\n    })),\r\n\r\n    vendorOptions: vendors || [],\r\n    productOptions: products || [],\r\n  }\r\n}\r\n\r\nexport default useDropdownData\r\n","import React, { useEffect } from 'react';\r\n\r\nconst Portal = () => {\r\n  React.useEffect(() => {\r\n    // eslint-disable-next-line no-console\r\n    console.warn('Placeholder: Portal is not implemented yet.');\r\n  }, []);\r\n  return (\r\n    <>\r\n  { /*Portal */} \r\n </>\r\n  );\r\n};\r\n\r\nexport { Portal };\r\n","import React, { useState, useEffect, useRef } from 'react';\r\nimport Icon from './Icon';\r\nimport { Portal } from './Portal';\r\n\r\n/**\r\n * SearchableSelect Component with Mobile Native Select Support\r\n * Automatically detects mobile and renders native <select> for mobile devices\r\n * while keeping headless select with portal rendering for desktop\r\n */\r\nconst SearchableSelect = ({ \r\n  options = [], \r\n  value, \r\n  onChange, \r\n  placeholder = \"Select...\",\r\n  searchable = false,\r\n  clearable = false,\r\n  disabled = false,\r\n  loading = false,\r\n  error = null,\r\n  className = \"\",\r\n  optionLabel = \"label\",\r\n  optionValue = \"value\",\r\n  groupBy = null,\r\n  renderOption = null,\r\n  label = '',\r\n  helperText = ''\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const [filteredOptions, setFilteredOptions] = useState(options);\r\n  const [highlightedIndex, setHighlightedIndex] = useState(-1);\r\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\r\n  \r\n  const containerRef = useRef(null);\r\n  const searchInputRef = useRef(null);\r\n  const listRef = useRef(null);\r\n\r\n  // Detect mobile device\r\n  useEffect(() => {\r\n    const checkIsMobile = () => {\r\n      return window.matchMedia('(max-width: 767px)')?.matches;\r\n    };\r\n    \r\n    setIsMobile(checkIsMobile());\r\n    \r\n    const mediaQuery = window.matchMedia('(max-width: 767px)');\r\n    const handleResize = () => setIsMobile(mediaQuery?.matches);\r\n    \r\n    mediaQuery?.addEventListener('change', handleResize);\r\n    return () => mediaQuery?.removeEventListener('change', handleResize);\r\n  }, []);\r\n\r\n  // Filter options based on search term\r\n  useEffect(() => {\r\n    if (!searchTerm?.trim()) {\r\n      setFilteredOptions(options);\r\n      return;\r\n    }\r\n\r\n    const term = searchTerm?.toLowerCase();\r\n    const filtered = options?.filter(option => {\r\n      const searchFields = [\r\n        option?.name,\r\n        option?.displayName,\r\n        option?.category,\r\n        option?.brand,\r\n        option?.specialty,\r\n        option?.department,\r\n        option?.email\r\n      ]?.filter(Boolean);\r\n\r\n      return searchFields?.some(field => \r\n        field?.toLowerCase()?.includes(term)\r\n      );\r\n    });\r\n\r\n    setFilteredOptions(filtered);\r\n    setHighlightedIndex(-1);\r\n  }, [searchTerm, options]);\r\n\r\n  // Find selected option\r\n  const selectedOption = options?.find(opt => opt?.id === value);\r\n\r\n  // Check if option is selected\r\n  const isSelected = (option) => {\r\n    return (option?.[optionValue] || option?.id) === value;\r\n  };\r\n\r\n  // Calculate dropdown position\r\n  const calculateDropdownPosition = () => {\r\n    if (containerRef?.current) {\r\n      const rect = containerRef?.current?.getBoundingClientRect();\r\n      setDropdownPosition({\r\n        top: rect?.bottom + window.scrollY,\r\n        left: rect?.left + window.scrollX,\r\n        width: rect?.width\r\n      });\r\n    }\r\n  };\r\n\r\n  // Update position when opening dropdown\r\n  useEffect(() => {\r\n    if (isOpen && !isMobile) {\r\n      calculateDropdownPosition();\r\n    }\r\n  }, [isOpen, isMobile]);\r\n\r\n  // Handle click outside (desktop only)\r\n  useEffect(() => {\r\n    if (isMobile) return; // Skip for mobile\r\n    \r\n    const handleClickOutside = (event) => {\r\n      if (containerRef?.current && !containerRef?.current?.contains(event?.target)) {\r\n        setIsOpen(false);\r\n        setSearchTerm('');\r\n        setHighlightedIndex(-1);\r\n      }\r\n    };\r\n\r\n    document?.addEventListener('mousedown', handleClickOutside);\r\n    return () => document?.removeEventListener('mousedown', handleClickOutside);\r\n  }, [isMobile]);\r\n\r\n  // Handle keyboard navigation (desktop only)\r\n  const handleKeyDown = (e) => {\r\n    if (isMobile) return; // Skip for mobile\r\n    \r\n    if (!isOpen) {\r\n      if (e?.key === 'Enter' || e?.key === ' ' || e?.key === 'ArrowDown') {\r\n        e?.preventDefault();\r\n        setIsOpen(true);\r\n        if (searchable) {\r\n          setTimeout(() => searchInputRef?.current?.focus(), 0);\r\n        }\r\n      }\r\n      return;\r\n    }\r\n\r\n    switch (e?.key) {\r\n      case 'Escape':\r\n        setIsOpen(false);\r\n        setSearchTerm('');\r\n        setHighlightedIndex(-1);\r\n        break;\r\n      case 'ArrowDown':\r\n        e?.preventDefault();\r\n        setHighlightedIndex(prev => \r\n          prev < filteredOptions?.length - 1 ? prev + 1 : 0\r\n        );\r\n        break;\r\n      case 'ArrowUp':\r\n        e?.preventDefault();\r\n        setHighlightedIndex(prev => \r\n          prev > 0 ? prev - 1 : filteredOptions?.length - 1\r\n        );\r\n        break;\r\n      case 'Enter':\r\n        e?.preventDefault();\r\n        if (highlightedIndex >= 0 && filteredOptions?.[highlightedIndex]) {\r\n          handleSelect(filteredOptions?.[highlightedIndex]);\r\n        }\r\n        break;\r\n      case 'Tab':\r\n        setIsOpen(false);\r\n        setSearchTerm('');\r\n        setHighlightedIndex(-1);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  // Handle option selection\r\n  const handleSelect = (option) => {\r\n    onChange?.(option?.id);\r\n    setIsOpen(false);\r\n    setSearchTerm('');\r\n    setHighlightedIndex(-1);\r\n  };\r\n\r\n  // Handle clear selection (desktop only)\r\n  const handleClear = (e) => {\r\n    e?.stopPropagation();\r\n    onChange?.(null);\r\n  };\r\n\r\n  // ✅ FIXED: Use native select on mobile per user requirements\r\n  if (isMobile) {\r\n    return (\r\n      <div className={`relative ${className}`}>\r\n        <select\r\n          value={value || ''}\r\n          onChange={(e) => onChange?.(e?.target?.value || null)}\r\n          disabled={disabled || loading}\r\n          className={`\r\n            w-full px-3 py-2 border rounded-lg\r\n            ${error ? 'border-red-500' : 'border-gray-300'}\r\n            ${disabled || loading ? 'bg-gray-100 cursor-not-allowed' : 'bg-white'}\r\n            focus:ring-1 focus:ring-blue-500 focus:border-blue-500\r\n            appearance-none text-base\r\n          `}\r\n        >\r\n          <option value=\"\">{placeholder}</option>\r\n          {options?.map((option) => (\r\n            <option \r\n              key={option?.[optionValue] || option?.id} \r\n              value={option?.[optionValue] || option?.id}\r\n            >\r\n              {option?.[optionLabel] || option?.label || option?.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {/* Mobile select arrow */}\r\n        <div className=\"absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none\">\r\n          <Icon name=\"ChevronDown\" size={16} className=\"text-gray-400\" />\r\n        </div>\r\n        {error && (\r\n          <div className=\"mt-1 text-sm text-red-600\">{error}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // ✅ ENHANCED: Desktop headless dropdown with better portal rendering\r\n  return (\r\n    <div className={`relative ${className}`} ref={containerRef}>\r\n      {/* Trigger */}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => !disabled && !loading && setIsOpen(!isOpen)}\r\n        onKeyDown={handleKeyDown}\r\n        disabled={disabled || loading}\r\n        className={`\r\n          w-full px-3 py-2 text-left border rounded-lg\r\n          ${error ? 'border-red-500' : 'border-gray-300'}\r\n          ${disabled || loading ? 'bg-gray-100 cursor-not-allowed' : 'bg-white hover:border-gray-400'}\r\n          ${isOpen ? 'ring-1 ring-blue-500 border-blue-500' : ''}\r\n          focus:ring-1 focus:ring-blue-500 focus:border-blue-500\r\n          flex items-center justify-between\r\n        `}\r\n      >\r\n        {/* Display text */}\r\n        <span className={selectedOption ? 'text-gray-900' : 'text-gray-500'}>\r\n          {selectedOption ? (selectedOption?.[optionLabel] || selectedOption?.label) : placeholder}\r\n        </span>\r\n        \r\n        {/* Icons */}\r\n        <div className=\"flex items-center space-x-1\">\r\n          {loading && <Icon name=\"Loader2\" size={16} className=\"animate-spin text-gray-400\" />}\r\n          {clearable && selectedOption && !loading && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleClear}\r\n              className=\"p-0.5 hover:bg-gray-200 rounded\"\r\n            >\r\n              <Icon name=\"X\" size={14} className=\"text-gray-400 hover:text-gray-600\" />\r\n            </button>\r\n          )}\r\n          <Icon \r\n            name={isOpen ? \"ChevronUp\" : \"ChevronDown\"} \r\n            size={16} \r\n            className=\"text-gray-400\" \r\n          />\r\n        </div>\r\n      </button>\r\n      {/* ✅ ENHANCED: Portal-rendered dropdown with proper z-index */}\r\n      {isOpen && typeof window !== 'undefined' && (\r\n        <Portal>\r\n          <div \r\n            className=\"fixed inset-0 z-50\"\r\n            onClick={() => setIsOpen(false)}\r\n          >\r\n            <div \r\n              style={{\r\n                position: 'absolute',\r\n                top: `${dropdownPosition?.top}px`,\r\n                left: `${dropdownPosition?.left}px`,\r\n                width: `${dropdownPosition?.width}px`,\r\n                zIndex: 9999\r\n              }}\r\n              className=\"bg-white border border-gray-300 rounded-lg shadow-lg max-h-60 overflow-hidden\"\r\n              onClick={(e) => e?.stopPropagation()}\r\n            >\r\n              {/* Search input */}\r\n              {searchable && (\r\n                <div className=\"p-2 border-b border-gray-200\">\r\n                  <input\r\n                    type=\"text\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e?.target?.value)}\r\n                    placeholder=\"Search...\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\r\n                    autoFocus\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* Options list */}\r\n              <div className=\"max-h-48 overflow-auto\">\r\n                {filteredOptions?.length === 0 ? (\r\n                  <div className=\"px-3 py-2 text-sm text-gray-500\">\r\n                    {searchTerm ? 'No results found' : 'No options available'}\r\n                  </div>\r\n                ) : (\r\n                  filteredOptions?.map((option) => (\r\n                    <button\r\n                      key={option?.[optionValue] || option?.id}\r\n                      type=\"button\"\r\n                      onClick={() => handleSelect(option)}\r\n                      className={`\r\n                        w-full px-3 py-2 text-left text-sm hover:bg-gray-50\r\n                        ${isSelected(option) ? 'bg-blue-50 text-blue-700' : 'text-gray-900'}\r\n                        focus:bg-gray-50 focus:outline-none\r\n                      `}\r\n                    >\r\n                      {option?.[optionLabel] || option?.label || option?.name}\r\n                    </button>\r\n                  ))\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Portal>\r\n      )}\r\n      {/* Error message */}\r\n      {error && (\r\n        <div className=\"mt-1 text-sm text-red-600\">{error}</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchableSelect;","import React, { useEffect, useMemo, useState } from 'react'\r\nimport { getDeal, updateDeal, deleteDeal, mapDbDealToForm } from '../../../services/dealService'\r\nimport { supabase } from '../../../lib/supabase'\r\nimport { useDealFormDropdowns } from '../../../hooks/useDropdownData'\r\nimport Button from '../../../components/ui/Button'\r\nimport Input from '../../../components/ui/Input'\r\nimport Select from '../../../components/ui/Select'\r\nimport SearchableSelect from '../../../components/ui/SearchableSelect'\r\nimport Icon from '../../../components/ui/Icon'\r\n\r\n// Accept either a dealId to fetch or a preloaded deal object to render immediately\r\nconst EditDealModal = ({ isOpen, dealId, deal: initialDeal, onClose, onSuccess }) => {\r\n  const [loading, setLoading] = useState(true)\r\n  const [saving, setSaving] = useState(false)\r\n  const [error, setError] = useState('')\r\n  const [deleteConfirm, setDeleteConfirm] = useState(false)\r\n  const [deleting, setDeleting] = useState(false)\r\n  const [isDirty, setIsDirty] = useState(false)\r\n  const [showUnsavedWarning, setShowUnsavedWarning] = useState(false)\r\n  const [initialFormData, setInitialFormData] = useState(null)\r\n  const [loanerAssignment, setLoanerAssignment] = useState(null)\r\n  const [loanerForm, setLoanerForm] = useState({\r\n    loaner_number: '',\r\n    eta_return_date: '',\r\n    notes: '',\r\n  })\r\n\r\n  // Enhanced dropdown data\r\n  const {\r\n    // Use pre-formatted option arrays so labels/ids match SearchableSelect expectations\r\n    salesConsultantOptions,\r\n    deliveryCoordinatorOptions,\r\n    financeManagerOptions,\r\n    vendorOptions: vendors,\r\n    productOptions: products,\r\n    loading: dropdownLoading,\r\n    refresh: refreshDropdowns,\r\n  } = useDealFormDropdowns()\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState({\r\n    customerName: '',\r\n    customerPhone: '',\r\n    customerEmail: '',\r\n    job_status: 'draft',\r\n    priority: 'medium',\r\n    customer_needs_loaner: false,\r\n    assignedTo: null,\r\n    deliveryCoordinator: null,\r\n    financeManager: null,\r\n    lineItems: [],\r\n  })\r\n\r\n  // Synthetic option reconciliation so selections show immediately even before lists load\r\n  const withSelected = (opts = [], selectedId, placeholder = 'Selected') => {\r\n    if (!selectedId) return opts\r\n    if (Array.isArray(opts) && opts.some((o) => o?.id === selectedId)) return opts\r\n    return [...(opts || []), { id: selectedId, value: selectedId, label: placeholder }]\r\n  }\r\n\r\n  const vendorOptionsEffective = useMemo(\r\n    () => withSelected(vendors, formData?.vendor_id, 'Selected vendor'),\r\n    [vendors, formData?.vendor_id]\r\n  )\r\n  const salesOptionsEffective = useMemo(\r\n    () => withSelected(salesConsultantOptions, formData?.assignedTo, 'Selected user'),\r\n    [salesConsultantOptions, formData?.assignedTo]\r\n  )\r\n  const deliveryOptionsEffective = useMemo(\r\n    () => withSelected(deliveryCoordinatorOptions, formData?.deliveryCoordinator, 'Selected user'),\r\n    [deliveryCoordinatorOptions, formData?.deliveryCoordinator]\r\n  )\r\n  const financeOptionsEffective = useMemo(\r\n    () => withSelected(financeManagerOptions, formData?.financeManager, 'Selected user'),\r\n    [financeManagerOptions, formData?.financeManager]\r\n  )\r\n\r\n  // Dirty state tracking\r\n  useEffect(() => {\r\n    if (initialFormData) {\r\n      const hasChanges = JSON.stringify(formData) !== JSON.stringify(initialFormData)\r\n      setIsDirty(hasChanges)\r\n    }\r\n  }, [formData, initialFormData])\r\n\r\n  // Load dropdown data when the modal opens (non-blocking; hook caches results)\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      try {\r\n        refreshDropdowns?.()\r\n      } catch {}\r\n    }\r\n  }, [isOpen, refreshDropdowns])\r\n\r\n  // If a preloaded deal object is provided, use it; otherwise load by id\r\n  useEffect(() => {\r\n    if (!isOpen) return\r\n    // Prefer preloaded deal for instant render (avoids a second network call)\r\n    if (initialDeal && initialDeal?.id) {\r\n      try {\r\n        const formDeal = mapDbDealToForm(initialDeal)\r\n        const loadedFormData = {\r\n          ...formDeal,\r\n          // Map DB snake_case to UI camelCase for staff + vendor selections\r\n          assignedTo: formDeal?.assigned_to || null,\r\n          deliveryCoordinator: formDeal?.delivery_coordinator_id || null,\r\n          financeManager: formDeal?.finance_manager_id || null,\r\n          vendor_id: formDeal?.vendor_id || null,\r\n          customerName: initialDeal?.customer_name || '',\r\n          customerPhone: initialDeal?.customer_phone || '',\r\n          customerEmail: initialDeal?.customer_email || '',\r\n          lineItems:\r\n            (formDeal?.lineItems || [])?.length > 0\r\n              ? toCamelLineItems(formDeal?.lineItems)\r\n              : [createEmptyLineItem()],\r\n        }\r\n        setFormData(loadedFormData)\r\n        setInitialFormData(JSON.parse(JSON.stringify(loadedFormData)))\r\n        setLoading(false)\r\n        setError('')\r\n      } catch (e) {\r\n        console.warn('[EditDealModal] failed to preload deal, falling back to fetch:', e)\r\n        loadDealData()\r\n      }\r\n    } else if (dealId) {\r\n      loadDealData()\r\n    } else {\r\n      // If opened with neither dealId nor deal, show a friendly error instead of spinning forever\r\n      setError('No deal selected to edit.')\r\n      setLoading(false)\r\n    }\r\n  }, [isOpen, dealId, initialDeal?.id])\r\n\r\n  // Safety: if something goes sideways, stop showing the spinner after a short timeout\r\n  useEffect(() => {\r\n    if (!isOpen) return\r\n    if (!loading) return\r\n    const t = setTimeout(() => {\r\n      setLoading(false)\r\n      setError((prev) => prev || 'Took longer than expected to load. You can retry the load.')\r\n    }, 8000)\r\n    return () => clearTimeout(t)\r\n  }, [isOpen, loading])\r\n\r\n  // Simplified Loaner Checkbox (native behavior; single-click reliable)\r\n  const LoanerCheckbox = ({ checked, onChange }) => (\r\n    <div className=\"bg-slate-50 p-4 rounded-lg border\">\r\n      <label\r\n        htmlFor=\"customer_needs_loaner\"\r\n        className=\"inline-flex items-center gap-3 min-h-11 px-2 cursor-pointer\"\r\n      >\r\n        <input\r\n          id=\"customer_needs_loaner\"\r\n          type=\"checkbox\"\r\n          checked={Boolean(checked)}\r\n          onChange={(e) => onChange(Boolean(e?.target?.checked))}\r\n          className=\"w-5 h-5 accent-blue-600 appearance-auto border-2 border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n          data-testid=\"loaner-checkbox\"\r\n        />\r\n        <span className=\"text-sm font-medium text-gray-700 select-none\">\r\n          Customer needs loaner vehicle\r\n        </span>\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  // Enhanced Service Type Radio with proper mobile accessibility\r\n  const ServiceTypeRadio = ({ value, selectedValue, onChange, itemIndex, disabled = false }) => (\r\n    <div className=\"flex space-x-6\">\r\n      <label className=\"inline-flex items-center gap-2 min-h-11 px-2 cursor-pointer\">\r\n        <input\r\n          type=\"radio\"\r\n          name={`serviceLocation_${itemIndex}`}\r\n          value=\"in_house\"\r\n          checked={!selectedValue}\r\n          onChange={() => onChange(false)}\r\n          className=\"w-4 h-4 text-blue-600 border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n          data-testid=\"service-type-in-house\"\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"text-sm text-gray-700 select-none\">🏠 On-Site</span>\r\n      </label>\r\n      <label className=\"inline-flex items-center gap-2 min-h-11 px-2 cursor-pointer\">\r\n        <input\r\n          type=\"radio\"\r\n          name={`serviceLocation_${itemIndex}`}\r\n          value=\"vendor\"\r\n          checked={selectedValue}\r\n          onChange={() => onChange(true)}\r\n          className=\"w-4 h-4 text-blue-600 border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n          data-testid=\"service-type-vendor\"\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"text-sm text-gray-700 select-none\">🏢 Off-Site</span>\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  // Enhanced Scheduling Radio with mobile optimization\r\n  const SchedulingRadio = ({ requiresScheduling, onChange, itemIndex, disabled = false }) => (\r\n    <div className=\"flex space-x-6\">\r\n      <label className=\"inline-flex items-center gap-2 min-h-11 px-2 cursor-pointer\">\r\n        <input\r\n          type=\"radio\"\r\n          name={`scheduling_${itemIndex}`}\r\n          checked={requiresScheduling === true}\r\n          onChange={() => onChange(true)}\r\n          className=\"w-4 h-4 text-blue-600 border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n          data-testid=\"requires-scheduling-yes\"\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"text-sm text-gray-700 select-none\">Needs scheduling</span>\r\n      </label>\r\n      <label className=\"inline-flex items-center gap-2 min-h-11 px-2 cursor-pointer\">\r\n        <input\r\n          type=\"radio\"\r\n          name={`scheduling_${itemIndex}`}\r\n          checked={requiresScheduling === false}\r\n          onChange={() => onChange(false)}\r\n          className=\"w-4 h-4 text-blue-600 border-gray-300 focus:ring-2 focus:ring-blue-500\"\r\n          data-testid=\"requires-scheduling-no\"\r\n          disabled={disabled}\r\n        />\r\n        <span className=\"text-sm text-gray-700 select-none\">No scheduling needed</span>\r\n      </label>\r\n    </div>\r\n  )\r\n\r\n  // Normalize DB/Supabase line items into the camelCase keys this modal expects\r\n  const toCamelLineItems = (items = []) =>\r\n    (items || []).map((part) => ({\r\n      product_id: part?.product_id ?? null,\r\n      unit_price: part?.unit_price ?? 0,\r\n      quantity_used: part?.quantity_used ?? 1,\r\n      lineItemPromisedDate: part?.lineItemPromisedDate || part?.promised_date || '',\r\n      requiresScheduling:\r\n        typeof part?.requiresScheduling === 'boolean'\r\n          ? part?.requiresScheduling\r\n          : !!part?.requires_scheduling,\r\n      noScheduleReason: part?.noScheduleReason || part?.no_schedule_reason || '',\r\n      isOffSite: typeof part?.isOffSite === 'boolean' ? part?.isOffSite : !!part?.is_off_site,\r\n      description: part?.description || '',\r\n    }))\r\n\r\n  const loadDealData = async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError('')\r\n\r\n      const deal = await getDeal(dealId)\r\n      const formDeal = mapDbDealToForm(deal)\r\n\r\n      // Get transaction data for customer info\r\n      const { data: transaction } = await supabase\r\n        ?.from('transactions')\r\n        ?.select('customer_name, customer_phone, customer_email')\r\n        ?.eq('job_id', dealId)\r\n        ?.single()\r\n\r\n      // Load active loaner assignment (if any)\r\n      let activeLoaner = null\r\n      try {\r\n        const { data: la } = await supabase\r\n          ?.from('loaner_assignments')\r\n          ?.select('id, loaner_number, eta_return_date, returned_at')\r\n          ?.eq('job_id', dealId)\r\n          ?.is('returned_at', null)\r\n          ?.limit(1)\r\n        activeLoaner = Array.isArray(la) ? la[0] : la\r\n      } catch (_) {\r\n        // ignore\r\n      }\r\n\r\n      const loadedFormData = {\r\n        ...formDeal,\r\n        // Map DB snake_case to UI camelCase for staff + vendor selections\r\n        assignedTo: formDeal?.assigned_to || null,\r\n        deliveryCoordinator: formDeal?.delivery_coordinator_id || null,\r\n        financeManager: formDeal?.finance_manager_id || null,\r\n        vendor_id: formDeal?.vendor_id || null,\r\n        customerName: transaction?.customer_name || '',\r\n        customerPhone: transaction?.customer_phone || '',\r\n        customerEmail: transaction?.customer_email || '',\r\n        lineItems:\r\n          (formDeal?.lineItems || [])?.length > 0\r\n            ? toCamelLineItems(formDeal?.lineItems)\r\n            : [createEmptyLineItem()],\r\n      }\r\n\r\n      setFormData(loadedFormData)\r\n      setInitialFormData(JSON.parse(JSON.stringify(loadedFormData))) // Deep copy for comparison\r\n      setLoanerAssignment(activeLoaner || null)\r\n\r\n      // Initialize loaner form\r\n      if (activeLoaner) {\r\n        setLoanerForm({\r\n          loaner_number: activeLoaner?.loaner_number || '',\r\n          eta_return_date: activeLoaner?.eta_return_date || '',\r\n          notes: activeLoaner?.notes || '',\r\n        })\r\n      } else {\r\n        // Default ETA to the latest scheduled promised_date among line items (if any)\r\n        const dates = (loadedFormData?.lineItems || [])\r\n          .filter((li) => li?.requiresScheduling && li?.lineItemPromisedDate)\r\n          .map((li) => new Date(li.lineItemPromisedDate).getTime())\r\n        const latest = dates?.length ? new Date(Math.max(...dates)) : null\r\n        setLoanerForm((prev) => ({\r\n          ...prev,\r\n          eta_return_date: latest ? latest.toISOString().split('T')[0] : '',\r\n        }))\r\n      }\r\n    } catch (err) {\r\n      setError(`Failed to load deal: ${err?.message}`)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const createEmptyLineItem = () => ({\r\n    product_id: null,\r\n    unit_price: 0,\r\n    quantity_used: 1,\r\n    lineItemPromisedDate: '',\r\n    requiresScheduling: false,\r\n    noScheduleReason: '',\r\n    isOffSite: false,\r\n    description: '',\r\n  })\r\n\r\n  const updateFormData = (updates) => {\r\n    setFormData((prev) => ({ ...prev, ...updates }))\r\n  }\r\n\r\n  const updateLineItem = (index, updates) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      lineItems: prev?.lineItems?.map((item, i) => {\r\n        if (i === index) {\r\n          let updatedItem = { ...item, ...updates }\r\n\r\n          // Boolean coercion and paired field clearing\r\n          if ('requiresScheduling' in updates) {\r\n            updatedItem.requiresScheduling = Boolean(updates?.requiresScheduling)\r\n            if (updates?.requiresScheduling === true) {\r\n              updatedItem.noScheduleReason = ''\r\n            } else {\r\n              updatedItem.lineItemPromisedDate = ''\r\n            }\r\n          }\r\n\r\n          if ('isOffSite' in updates) {\r\n            updatedItem.isOffSite = Boolean(updates?.isOffSite)\r\n            if (!updates?.isOffSite) {\r\n              updatedItem.vendorId = ''\r\n            }\r\n          }\r\n\r\n          return updatedItem\r\n        }\r\n        return item\r\n      }),\r\n    }))\r\n\r\n    // Auto-populate price when product is selected\r\n    if (updates?.product_id) {\r\n      const selectedProduct = products?.find((p) => p?.id === updates?.product_id)\r\n      if (selectedProduct) {\r\n        setFormData((prev) => ({\r\n          ...prev,\r\n          lineItems: prev?.lineItems?.map((item, i) =>\r\n            i === index\r\n              ? {\r\n                  ...item,\r\n                  unit_price:\r\n                    selectedProduct?.unitPrice || selectedProduct?.unit_price || item?.unit_price,\r\n                  cost_price: selectedProduct?.cost || item?.cost_price,\r\n                }\r\n              : item\r\n          ),\r\n        }))\r\n      }\r\n    }\r\n  }\r\n\r\n  const addLineItem = () => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      lineItems: [...prev?.lineItems, createEmptyLineItem()],\r\n    }))\r\n  }\r\n\r\n  const removeLineItem = (index) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      lineItems: prev?.lineItems?.filter((_, i) => i !== index),\r\n    }))\r\n  }\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      setSaving(true)\r\n      setError('')\r\n\r\n      if (!formData?.customerName?.trim()) {\r\n        setError('Customer name is required')\r\n        return\r\n      }\r\n\r\n      // Validate line items with scheduling\r\n      for (let i = 0; i < formData?.lineItems?.length; i++) {\r\n        const item = formData?.lineItems?.[i]\r\n\r\n        if (!item?.product_id) {\r\n          setError(`Line item ${i + 1}: Product is required`)\r\n          return\r\n        }\r\n\r\n        if (item?.requiresScheduling && !item?.lineItemPromisedDate) {\r\n          setError(`Line item ${i + 1}: Promised date is required when scheduling is needed`)\r\n          return\r\n        }\r\n\r\n        if (!item?.requiresScheduling && !item?.noScheduleReason?.trim()) {\r\n          setError(`Line item ${i + 1}: Reason is required when no scheduling is needed`)\r\n          return\r\n        }\r\n\r\n        // Vendor selection is tracked at the deal level (vendor_id). No per-line vendor requirement.\r\n      }\r\n\r\n      // Update the deal with proper boolean coercion\r\n      const updatedFormData = {\r\n        ...formData,\r\n        customer_needs_loaner: Boolean(formData?.customer_needs_loaner),\r\n        lineItems: formData?.lineItems?.map((item) => ({\r\n          ...item,\r\n          requiresScheduling: Boolean(item?.requiresScheduling),\r\n          isOffSite: Boolean(item?.isOffSite),\r\n          unit_price: parseFloat(item?.unit_price) || 0,\r\n          quantity_used: parseInt(item?.quantity_used) || 1,\r\n        })),\r\n      }\r\n\r\n      // Map UI camelCase fields back to DB snake_case keys for service layer\r\n      const payloadForSave = {\r\n        ...updatedFormData,\r\n        assigned_to: updatedFormData?.assignedTo ?? null,\r\n        delivery_coordinator_id: updatedFormData?.deliveryCoordinator ?? null,\r\n        finance_manager_id: updatedFormData?.financeManager ?? null,\r\n        vendor_id: updatedFormData?.vendor_id ?? null,\r\n      }\r\n\r\n      // Include inline loaner form (optional) for assignment upsert\r\n      await updateDeal(dealId, { ...payloadForSave, loanerForm })\r\n\r\n      onSuccess?.()\r\n      onClose?.()\r\n    } catch (err) {\r\n      setError(`Failed to save deal: ${err?.message}`)\r\n    } finally {\r\n      setSaving(false)\r\n    }\r\n  }\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      setDeleting(true)\r\n      await deleteDeal(dealId)\r\n      onSuccess?.()\r\n      onClose?.()\r\n    } catch (err) {\r\n      setError(`Failed to delete deal: ${err?.message}`)\r\n    } finally {\r\n      setDeleting(false)\r\n      setDeleteConfirm(false)\r\n    }\r\n  }\r\n\r\n  // Enhanced close handler with unsaved changes guard\r\n  const handleClose = () => {\r\n    if (isDirty) {\r\n      setShowUnsavedWarning(true)\r\n    } else {\r\n      onClose()\r\n    }\r\n  }\r\n\r\n  const confirmClose = () => {\r\n    setShowUnsavedWarning(false)\r\n    onClose()\r\n  }\r\n\r\n  // Calculate total with guard for NaN\r\n  const calculateTotal = () => {\r\n    return (\r\n      formData?.lineItems?.reduce((total, item) => {\r\n        const price = parseFloat(item?.unit_price) || 0\r\n        const quantity = parseInt(item?.quantity_used) || 1\r\n        return total + price * quantity\r\n      }, 0) || 0\r\n    )\r\n  }\r\n\r\n  if (!isOpen) return null\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-xl w-full max-w-6xl max-h-[90vh] overflow-hidden shadow-xl\">\r\n        {/* Header with enhanced styling */}\r\n        <div className=\"flex items-center justify-between p-6 border-b bg-slate-50\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900\">Edit Deal</h2>\r\n          <button\r\n            onClick={handleClose}\r\n            className=\"p-2 hover:bg-gray-100 rounded-lg text-gray-400 hover:text-gray-600\"\r\n          >\r\n            <Icon name=\"X\" size={20} />\r\n          </button>\r\n        </div>\r\n\r\n        {/* Content with light theme */}\r\n        <div className=\"overflow-y-auto max-h-[calc(90vh-180px)]\">\r\n          <div className=\"p-6 space-y-6 bg-white\">\r\n            {error && (\r\n              <div className=\"bg-red-50 border border-red-200 rounded-lg p-4\">\r\n                <div className=\"text-red-800 text-sm\">{error}</div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Inline, non-blocking loading UX: remove global banner; fields show their own state */}\r\n\r\n            {loading ? (\r\n              <div className=\"flex flex-col items-center justify-center py-12 gap-3\">\r\n                <div className=\"text-gray-600\">Loading deal...</div>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => {\r\n                    loadDealData()\r\n                    try {\r\n                      refreshDropdowns?.()\r\n                    } catch {}\r\n                  }}\r\n                  className=\"text-sm text-blue-600 hover:text-blue-800\"\r\n                >\r\n                  Having trouble? Retry load\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {/* Basic Info with mobile-first layout */}\r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Status</label>\r\n                    <Select\r\n                      value={formData?.job_status}\r\n                      onChange={(e) => updateFormData({ job_status: e?.target?.value })}\r\n                    >\r\n                      <option value=\"draft\">Draft</option>\r\n                      <option value=\"pending\">Pending</option>\r\n                      <option value=\"in_progress\">In Progress</option>\r\n                      <option value=\"completed\">Completed</option>\r\n                    </Select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Customer Name *\r\n                    </label>\r\n                    <Input\r\n                      id=\"customer-name\"\r\n                      aria-label=\"Customer name input\"\r\n                      label=\"\"\r\n                      helperText=\"\"\r\n                      maxLength={255}\r\n                      style={{}}\r\n                      value={formData?.customerName}\r\n                      onChange={(e) => updateFormData({ customerName: e?.target?.value })}\r\n                      placeholder=\"Enter customer name\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Customer Phone\r\n                    </label>\r\n                    <Input\r\n                      id=\"customer-phone\"\r\n                      aria-label=\"Customer phone input\"\r\n                      label=\"\"\r\n                      helperText=\"\"\r\n                      maxLength={20}\r\n                      style={{}}\r\n                      value={formData?.customerPhone}\r\n                      onChange={(e) => updateFormData({ customerPhone: e?.target?.value })}\r\n                      placeholder=\"Enter phone number\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                      Customer Email\r\n                    </label>\r\n                    <Input\r\n                      id=\"customer-email\"\r\n                      aria-label=\"Customer email input\"\r\n                      label=\"\"\r\n                      helperText=\"\"\r\n                      maxLength={255}\r\n                      style={{}}\r\n                      type=\"email\"\r\n                      value={formData?.customerEmail}\r\n                      onChange={(e) => updateFormData({ customerEmail: e?.target?.value })}\r\n                      placeholder=\"Enter email address\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Priority</label>\r\n                    <Select\r\n                      value={formData?.priority}\r\n                      onChange={(e) => updateFormData({ priority: e?.target?.value })}\r\n                    >\r\n                      <option value=\"low\">Low</option>\r\n                      <option value=\"medium\">Medium</option>\r\n                      <option value=\"high\">High</option>\r\n                      <option value=\"urgent\">Urgent</option>\r\n                    </Select>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Vehicle Information Section - Visible on Mobile and Desktop */}\r\n                <div className=\"block bg-slate-50 p-4 rounded-lg border\">\r\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Vehicle Information</h4>\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Year</label>\r\n                      <Input\r\n                        id=\"vehicle-year\"\r\n                        aria-label=\"Vehicle year input\"\r\n                        label=\"\"\r\n                        helperText=\"\"\r\n                        maxLength={4}\r\n                        style={{}}\r\n                        type=\"number\"\r\n                        value={formData?.vehicleYear || ''}\r\n                        onChange={(e) => updateFormData({ vehicleYear: e?.target?.value })}\r\n                        placeholder=\"2024\"\r\n                        min=\"1900\"\r\n                        max={new Date()?.getFullYear() + 2}\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Make</label>\r\n                      <Input\r\n                        id=\"vehicle-make\"\r\n                        aria-label=\"Vehicle make input\"\r\n                        label=\"\"\r\n                        helperText=\"\"\r\n                        maxLength={50}\r\n                        style={{}}\r\n                        value={formData?.vehicleMake || ''}\r\n                        onChange={(e) => updateFormData({ vehicleMake: e?.target?.value })}\r\n                        placeholder=\"Toyota\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">Model</label>\r\n                      <Input\r\n                        id=\"vehicle-model\"\r\n                        aria-label=\"Vehicle model input\"\r\n                        label=\"\"\r\n                        helperText=\"\"\r\n                        maxLength={50}\r\n                        style={{}}\r\n                        value={formData?.vehicleModel || ''}\r\n                        onChange={(e) => updateFormData({ vehicleModel: e?.target?.value })}\r\n                        placeholder=\"Camry\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"mt-4\">\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                      Stock Number\r\n                    </label>\r\n                    <Input\r\n                      id=\"vehicle-stock\"\r\n                      aria-label=\"Vehicle stock number input\"\r\n                      label=\"\"\r\n                      helperText=\"\"\r\n                      maxLength={20}\r\n                      style={{}}\r\n                      value={formData?.stockNumber || ''}\r\n                      onChange={(e) => updateFormData({ stockNumber: e?.target?.value })}\r\n                      placeholder=\"Enter stock number\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Customer Needs Loaner with enhanced styling and click propagation */}\r\n                <div className=\"space-y-3\">\r\n                  <LoanerCheckbox\r\n                    checked={formData?.customer_needs_loaner}\r\n                    onChange={(checked) => {\r\n                      updateFormData({ customer_needs_loaner: checked })\r\n                      if (checked) {\r\n                        // If turning on and ETA empty, default to latest scheduled promised date\r\n                        if (!loanerForm?.eta_return_date) {\r\n                          const dates = (formData?.lineItems || [])\r\n                            .filter((li) => li?.requiresScheduling && li?.lineItemPromisedDate)\r\n                            .map((li) => new Date(li.lineItemPromisedDate).getTime())\r\n                          const latest = dates?.length ? new Date(Math.max(...dates)) : null\r\n                          if (latest) {\r\n                            setLoanerForm((prev) => ({\r\n                              ...prev,\r\n                              eta_return_date: latest.toISOString().split('T')[0],\r\n                            }))\r\n                          }\r\n                        }\r\n                      }\r\n                    }}\r\n                  />\r\n                  {/* Current Loaner summary (mirrors Deals page badge) */}\r\n                  {loanerAssignment && (\r\n                    <div className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800 border border-purple-200\">\r\n                      🚗 Loaner #{loanerAssignment?.loaner_number}\r\n                      {loanerAssignment?.eta_return_date && (\r\n                        <span className=\"ml-1\">\r\n                          • due{' '}\r\n                          {new Date(loanerAssignment?.eta_return_date)?.toLocaleDateString(\r\n                            'en-US',\r\n                            { month: 'short', day: 'numeric' }\r\n                          )}\r\n                        </span>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Inline Loaner editor */}\r\n                  {formData?.customer_needs_loaner && (\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 bg-white border rounded-lg p-4\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Loaner Number\r\n                        </label>\r\n                        <Input\r\n                          id=\"loaner-number\"\r\n                          aria-label=\"Loaner number\"\r\n                          value={loanerForm?.loaner_number || ''}\r\n                          onChange={(e) =>\r\n                            setLoanerForm((prev) => ({ ...prev, loaner_number: e?.target?.value }))\r\n                          }\r\n                          placeholder=\"e.g. 1234\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          ETA Return Date\r\n                        </label>\r\n                        <Input\r\n                          id=\"loaner-eta\"\r\n                          aria-label=\"Loaner ETA\"\r\n                          type=\"date\"\r\n                          value={loanerForm?.eta_return_date || ''}\r\n                          onChange={(e) =>\r\n                            setLoanerForm((prev) => ({\r\n                              ...prev,\r\n                              eta_return_date: e?.target?.value,\r\n                            }))\r\n                          }\r\n                          min={new Date()?.toISOString()?.split('T')?.[0]}\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                          Notes\r\n                        </label>\r\n                        <Input\r\n                          id=\"loaner-notes\"\r\n                          aria-label=\"Loaner notes\"\r\n                          value={loanerForm?.notes || ''}\r\n                          onChange={(e) =>\r\n                            setLoanerForm((prev) => ({ ...prev, notes: e?.target?.value }))\r\n                          }\r\n                          placeholder=\"Optional notes\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Dealer Representatives */}\r\n                <div className=\"bg-slate-50 p-4 rounded-lg border\">\r\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-4\">Dealer Representatives</h4>\r\n\r\n                  {/* Vendor (job-level) */}\r\n                  <div className=\"mb-4\" data-testid=\"vendor-select\">\r\n                    <SearchableSelect\r\n                      label=\"Vendor\"\r\n                      options={vendorOptionsEffective}\r\n                      value={formData?.vendor_id || ''}\r\n                      onChange={(value) => updateFormData({ vendor_id: value || null })}\r\n                      placeholder=\"Select vendor\"\r\n                      searchable={true}\r\n                      clearable={true}\r\n                      groupBy=\"specialty\"\r\n                    />\r\n                    {!dropdownLoading && (vendors?.length || 0) === 0 && (\r\n                      <div className=\"mt-1 text-xs text-gray-500\">\r\n                        No vendors found yet. Add one in Admin.{' '}\r\n                        <a\r\n                          href=\"/admin\"\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                          className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                          Open Admin\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Sales Consultant */}\r\n                  <div className=\"mb-4\" data-testid=\"sales-select\">\r\n                    <SearchableSelect\r\n                      label=\"Sales Consultant\"\r\n                      options={salesOptionsEffective}\r\n                      value={formData?.assignedTo}\r\n                      onChange={(value) => updateFormData({ assignedTo: value })}\r\n                      placeholder=\"Select sales consultant\"\r\n                      searchable={true}\r\n                      clearable={true}\r\n                    />\r\n                    {!dropdownLoading && (salesConsultantOptions?.length || 0) === 0 && (\r\n                      <div className=\"mt-1 text-xs text-gray-500\">\r\n                        No staff found for this role. Add staff in Admin.{' '}\r\n                        <a\r\n                          href=\"/admin\"\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                          className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                          Open Admin\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Delivery Coordinator */}\r\n                  <div className=\"mb-4\" data-testid=\"delivery-select\">\r\n                    <SearchableSelect\r\n                      label=\"Delivery Coordinator\"\r\n                      options={deliveryOptionsEffective}\r\n                      value={formData?.deliveryCoordinator}\r\n                      onChange={(value) => updateFormData({ deliveryCoordinator: value })}\r\n                      placeholder=\"Select delivery coordinator\"\r\n                      searchable={true}\r\n                      clearable={true}\r\n                    />\r\n                    {!dropdownLoading && (deliveryCoordinatorOptions?.length || 0) === 0 && (\r\n                      <div className=\"mt-1 text-xs text-gray-500\">\r\n                        No staff found for this role. Add staff in Admin.{' '}\r\n                        <a\r\n                          href=\"/admin\"\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                          className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                          Open Admin\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Finance Manager */}\r\n                  <div data-testid=\"finance-select\">\r\n                    <SearchableSelect\r\n                      label=\"Finance Manager\"\r\n                      options={financeOptionsEffective}\r\n                      value={formData?.financeManager}\r\n                      onChange={(value) => updateFormData({ financeManager: value })}\r\n                      placeholder=\"Select finance manager\"\r\n                      searchable={true}\r\n                      clearable={true}\r\n                      helperText=\"Optional - does not block saves\"\r\n                    />\r\n                    {!dropdownLoading && (financeManagerOptions?.length || 0) === 0 && (\r\n                      <div className=\"mt-1 text-xs text-gray-500\">\r\n                        No staff found for this role. Add staff in Admin.{' '}\r\n                        <a\r\n                          href=\"/admin\"\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                          className=\"text-blue-600 hover:underline\"\r\n                        >\r\n                          Open Admin\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Line Items */}\r\n                <div>\r\n                  <div className=\"flex items-center justify-between mb-4\">\r\n                    <h3 className=\"text-lg font-medium text-gray-900\">Line Items</h3>\r\n                    <Button\r\n                      className=\"bg-blue-50 border-blue-200 text-blue-700 hover:bg-blue-100\"\r\n                      aria-label=\"Add line item\"\r\n                      variant=\"outline\"\r\n                      size=\"sm\"\r\n                      onClick={addLineItem}\r\n                    >\r\n                      <Icon name=\"Plus\" size={16} className=\"mr-2\" />\r\n                      Add Item\r\n                    </Button>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-4\">\r\n                    {formData?.lineItems?.map((item, index) => (\r\n                      <div key={index} className=\"border rounded-xl p-4 bg-slate-50\">\r\n                        <div className=\"flex items-center justify-between mb-4\">\r\n                          <h4 className=\"font-medium text-gray-900\">Item #{index + 1}</h4>\r\n                          {formData?.lineItems?.length > 1 && (\r\n                            <Button\r\n                              className=\"text-red-600 hover:text-red-800 hover:bg-red-50\"\r\n                              aria-label=\"Remove line item\"\r\n                              variant=\"ghost\"\r\n                              size=\"sm\"\r\n                              onClick={() => removeLineItem(index)}\r\n                            >\r\n                              <Icon name=\"Trash2\" size={16} />\r\n                            </Button>\r\n                          )}\r\n                        </div>\r\n\r\n                        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\r\n                          <div>\r\n                            <SearchableSelect\r\n                              label=\"Product *\"\r\n                              options={products}\r\n                              value={item?.product_id || ''}\r\n                              onChange={(value) =>\r\n                                updateLineItem(index, {\r\n                                  product_id: value ? parseInt(value) : null,\r\n                                })\r\n                              }\r\n                              placeholder=\"Select product\"\r\n                              searchable={true}\r\n                              clearable={true}\r\n                              groupBy=\"category\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                              Unit Price *\r\n                            </label>\r\n                            <Input\r\n                              id={`unit-price-${index}`}\r\n                              aria-label=\"Unit price input\"\r\n                              label=\"\"\r\n                              helperText=\"\"\r\n                              maxLength={10}\r\n                              style={{}}\r\n                              type=\"number\"\r\n                              step=\"0.01\"\r\n                              value={item?.unit_price}\r\n                              onChange={(e) =>\r\n                                updateLineItem(index, {\r\n                                  unit_price: parseFloat(e?.target?.value) || 0,\r\n                                })\r\n                              }\r\n                              placeholder=\"0.00\"\r\n                            />\r\n                          </div>\r\n\r\n                          <div>\r\n                            <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                              Quantity\r\n                            </label>\r\n                            <Input\r\n                              id={`quantity-${index}`}\r\n                              aria-label=\"Quantity input\"\r\n                              label=\"\"\r\n                              helperText=\"\"\r\n                              maxLength={10}\r\n                              style={{}}\r\n                              type=\"number\"\r\n                              min=\"1\"\r\n                              value={item?.quantity_used}\r\n                              onChange={(e) =>\r\n                                updateLineItem(index, {\r\n                                  quantity_used: parseInt(e?.target?.value) || 1,\r\n                                })\r\n                              }\r\n                              placeholder=\"1\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n\r\n                        {/* Service Location with enhanced radio buttons */}\r\n                        <div className=\"mb-4\">\r\n                          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                            Service Location\r\n                          </label>\r\n                          <ServiceTypeRadio\r\n                            selectedValue={item?.isOffSite}\r\n                            onChange={(value) => updateLineItem(index, { isOffSite: value })}\r\n                            itemIndex={index}\r\n                          />\r\n                        </div>\r\n\r\n                        {/* Vendor selection occurs at the deal level (above). */}\r\n\r\n                        {/* Scheduling with enhanced styling */}\r\n                        <div className=\"bg-white rounded-lg p-4 border\">\r\n                          <h5 className=\"font-medium text-gray-900 mb-3\">Scheduling</h5>\r\n\r\n                          <div className=\"mb-3\">\r\n                            <SchedulingRadio\r\n                              requiresScheduling={item?.requiresScheduling}\r\n                              onChange={(value) =>\r\n                                updateLineItem(index, { requiresScheduling: value })\r\n                              }\r\n                              itemIndex={index}\r\n                            />\r\n                          </div>\r\n\r\n                          {item?.requiresScheduling ? (\r\n                            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Promised Date *\r\n                                </label>\r\n                                <Input\r\n                                  id={`promised-date-${index}`}\r\n                                  aria-label=\"Promised date input\"\r\n                                  label=\"\"\r\n                                  helperText=\"\"\r\n                                  maxLength={255}\r\n                                  style={{}}\r\n                                  type=\"date\"\r\n                                  value={item?.lineItemPromisedDate}\r\n                                  onChange={(e) =>\r\n                                    updateLineItem(index, {\r\n                                      lineItemPromisedDate: e?.target?.value,\r\n                                    })\r\n                                  }\r\n                                  min={new Date()?.toISOString()?.split('T')?.[0]}\r\n                                  placeholder=\"\"\r\n                                />\r\n                              </div>\r\n                              <div>\r\n                                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                  Notes\r\n                                </label>\r\n                                <Input\r\n                                  id={`notes-${index}`}\r\n                                  aria-label=\"Notes input\"\r\n                                  label=\"\"\r\n                                  helperText=\"\"\r\n                                  maxLength={500}\r\n                                  style={{}}\r\n                                  value={item?.description || ''}\r\n                                  onChange={(e) =>\r\n                                    updateLineItem(index, { description: e?.target?.value })\r\n                                  }\r\n                                  placeholder=\"Special instructions...\"\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            <div className=\"p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n                              <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                                Reason for no schedule *\r\n                              </label>\r\n                              <Input\r\n                                id={`no-schedule-reason-${index}`}\r\n                                aria-label=\"No schedule reason input\"\r\n                                label=\"\"\r\n                                helperText=\"\"\r\n                                maxLength={255}\r\n                                style={{}}\r\n                                value={item?.noScheduleReason}\r\n                                onChange={(e) =>\r\n                                  updateLineItem(index, { noScheduleReason: e?.target?.value })\r\n                                }\r\n                                placeholder=\"e.g., installed at delivery, no appointment needed\"\r\n                              />\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n                        {/* Line Total with NaN guard */}\r\n                        <div className=\"text-right mt-3 text-sm text-gray-600\">\r\n                          Line Total: $\r\n                          {(\r\n                            (parseFloat(item?.unit_price) || 0) *\r\n                            (parseInt(item?.quantity_used) || 1)\r\n                          )?.toFixed(2)}\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Deal Total with enhanced styling */}\r\n                  <div className=\"flex justify-end mt-4\">\r\n                    <div className=\"bg-green-50 border border-green-200 px-4 py-2 rounded-lg\">\r\n                      <span className=\"font-medium text-green-900\">\r\n                        Deal Total: ${calculateTotal()?.toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Footer with mobile-friendly buttons */}\r\n        <div className=\"flex flex-col md:flex-row items-center justify-between p-6 border-t bg-slate-50 gap-3\">\r\n          <Button\r\n            className=\"w-full md:w-auto h-11 text-red-600 border-red-300 hover:bg-red-50\"\r\n            aria-label=\"Delete deal\"\r\n            variant=\"outline\"\r\n            onClick={() => setDeleteConfirm(true)}\r\n          >\r\n            <Icon name=\"Trash2\" size={16} className=\"mr-2\" />\r\n            Delete Deal\r\n          </Button>\r\n\r\n          <div className=\"flex space-x-3 w-full md:w-auto\">\r\n            <Button\r\n              className=\"w-full md:w-auto h-11\"\r\n              aria-label=\"Cancel editing\"\r\n              variant=\"outline\"\r\n              onClick={handleClose}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              className=\"w-full md:w-auto h-11 bg-blue-600 hover:bg-blue-700\"\r\n              aria-label=\"Save changes\"\r\n              onClick={handleSave}\r\n              disabled={saving}\r\n            >\r\n              {saving ? 'Saving...' : 'Save Changes'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Delete Confirmation Modal */}\r\n        {deleteConfirm && (\r\n          <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md mx-4 shadow-xl\">\r\n              <h3 className=\"text-lg font-semibold mb-4\">Delete Deal</h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                Are you sure you want to delete this deal and all its line items? This action cannot\r\n                be undone.\r\n              </p>\r\n              <div className=\"flex space-x-3\">\r\n                <Button\r\n                  className=\"flex-1 h-11\"\r\n                  aria-label=\"Cancel deletion\"\r\n                  variant=\"outline\"\r\n                  onClick={() => setDeleteConfirm(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  className=\"flex-1 h-11 bg-red-600 hover:bg-red-700 text-white\"\r\n                  aria-label=\"Confirm deletion\"\r\n                  onClick={handleDelete}\r\n                  disabled={deleting}\r\n                >\r\n                  {deleting ? 'Deleting...' : 'Delete'}\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Unsaved Changes Warning Modal */}\r\n        {showUnsavedWarning && (\r\n          <div className=\"absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center z-10\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md mx-4 shadow-xl\">\r\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-900\">Unsaved Changes</h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                You have unsaved changes. Are you sure you want to close and discard your changes?\r\n              </p>\r\n              <div className=\"flex space-x-3\">\r\n                <Button\r\n                  className=\"flex-1 h-11\"\r\n                  aria-label=\"Keep editing\"\r\n                  variant=\"outline\"\r\n                  onClick={() => setShowUnsavedWarning(false)}\r\n                >\r\n                  Keep Editing\r\n                </Button>\r\n                <Button\r\n                  className=\"flex-1 h-11 bg-red-600 hover:bg-red-700 text-white\"\r\n                  aria-label=\"Discard changes\"\r\n                  onClick={confirmClose}\r\n                >\r\n                  Discard Changes\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditDealModal\r\n","// src/pages/deals/index.jsx\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { getAllDeals, markLoanerReturned } from '../../services/dealService'\r\nimport ExportButton from '../../components/common/ExportButton'\r\nimport NewDealModal from './NewDealModal'\r\nimport EditDealModal from './components/EditDealModal'\r\n\r\nimport { useDropdownData } from '../../hooks/useDropdownData'\r\nimport Navbar from '../../components/ui/Navbar'\r\nimport { supabase } from '../../lib/supabase'\r\nimport { useAuth } from '../../contexts/AuthContext'\r\nimport Button from '../../components/ui/Button'\r\nimport Icon from '../../components/ui/Icon'\r\n\r\n// ✅ UPDATED: StatusPill with enhanced styling\r\nconst StatusPill = ({ status }) => {\r\n  const statusColors = {\r\n    draft: 'bg-gray-100 text-gray-700',\r\n    pending: 'bg-blue-100 text-blue-700',\r\n    in_progress: 'bg-orange-100 text-orange-700',\r\n    completed: 'bg-green-100 text-green-700',\r\n    cancelled: 'bg-red-100 text-red-700',\r\n  }\r\n  const color = statusColors?.[status] || 'bg-gray-100 text-gray-700'\r\n  const displayStatus = status?.replace('_', ' ')?.toUpperCase() || 'UNKNOWN'\r\n\r\n  return <span className={`px-2 py-1 rounded text-xs font-medium ${color}`}>{displayStatus}</span>\r\n}\r\n\r\n// ✅ ADDED: Helper to format names as \"Lastname, F.\"\r\nconst formatStaffName = (fullName) => {\r\n  if (!fullName) return ''\r\n  const parts = fullName?.trim()?.split(' ')\r\n  if (parts?.length < 2) return fullName\r\n\r\n  const firstName = parts?.[0]\r\n  const lastName = parts?.slice(1)?.join(' ')\r\n  const firstInitial = firstName?.[0]?.toUpperCase()\r\n\r\n  return `${lastName}, ${firstInitial}.`\r\n}\r\n\r\n// ✅ UPDATED: Enhanced \"Next\" promised chip with exact functionality per requirements\r\nconst NextPromisedChip = ({ nextPromisedShort }) => {\r\n  if (!nextPromisedShort) {\r\n    return <span className=\"text-xs text-gray-500\">—</span>\r\n  }\r\n\r\n  // Parse the date to determine urgency\r\n  const promiseDate = new Date(nextPromisedShort)\r\n  const today = new Date()\r\n  today?.setHours(0, 0, 0, 0)\r\n  promiseDate?.setHours(0, 0, 0, 0)\r\n\r\n  const todayPlus2 = new Date(today)\r\n  todayPlus2?.setDate(today?.getDate() + 2)\r\n\r\n  let urgencyClass = ''\r\n\r\n  // Compute urgency per requirements\r\n  if (promiseDate < today) {\r\n    // overdue: date < today\r\n    urgencyClass = 'bg-red-100 text-red-800 border-red-200'\r\n  } else if (promiseDate <= todayPlus2) {\r\n    // soon: today ≤ date ≤ today+2\r\n    urgencyClass = 'bg-amber-100 text-amber-800 border-amber-200'\r\n  } else {\r\n    // ok: otherwise\r\n    urgencyClass = 'bg-green-100 text-green-800 border-green-200'\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className={`inline-flex items-center px-2 py-1 rounded text-xs font-medium border ${urgencyClass}`}\r\n    >\r\n      Next: {nextPromisedShort}\r\n    </span>\r\n  )\r\n}\r\n\r\n// ✅ UPDATED: Service Location Tag with exact colors per checklist (#22c55e in-house / #f97316 vendor)\r\nconst ServiceLocationTag = ({ serviceType, jobParts }) => {\r\n  // Check if any line items are off-site to determine vendor status\r\n  const hasOffSiteItems = jobParts?.some((part) => part?.is_off_site)\r\n  const hasOnSiteItems = jobParts?.some((part) => !part?.is_off_site)\r\n\r\n  if (hasOffSiteItems && hasOnSiteItems) {\r\n    return (\r\n      <div className=\"flex flex-col space-y-1\">\r\n        <span\r\n          className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium text-white\"\r\n          style={{ backgroundColor: '#f97316' }}\r\n        >\r\n          🏢 Off-Site\r\n        </span>\r\n        <span\r\n          className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium text-white\"\r\n          style={{ backgroundColor: '#22c55e' }}\r\n        >\r\n          🏠 In-House\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if (hasOffSiteItems) {\r\n    return (\r\n      <span\r\n        className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium text-white\"\r\n        style={{ backgroundColor: '#f97316' }}\r\n      >\r\n        🏢 Off-Site\r\n      </span>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <span\r\n      className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium text-white\"\r\n      style={{ backgroundColor: '#22c55e' }}\r\n    >\r\n      🏠 In-House\r\n    </span>\r\n  )\r\n}\r\n\r\n// ✅ UPDATED: Enhanced draft reminder with improved styling\r\nconst DraftReminderBanner = ({ draftsCount, onViewDrafts }) => {\r\n  const [dismissed, setDismissed] = useState(false)\r\n\r\n  if (draftsCount === 0 || dismissed) return null\r\n\r\n  return (\r\n    <div\r\n      className=\"mb-6 p-4 rounded-lg border\"\r\n      style={{ backgroundColor: '#FEF3C7', borderColor: '#F3E8A3', color: '#92400E' }}\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div className=\"flex-shrink-0\">\r\n            <Icon name=\"AlertCircle\" size={20} style={{ color: '#D97706' }} />\r\n          </div>\r\n          <div>\r\n            <p className=\"font-medium\">Draft – needs details</p>\r\n            <p className=\"text-sm\">\r\n              You have {draftsCount} draft deal{draftsCount > 1 ? 's' : ''} to complete.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Button\r\n            size=\"sm\"\r\n            variant=\"ghost\"\r\n            onClick={onViewDrafts}\r\n            style={{ color: '#92400E' }}\r\n            className=\"hover:bg-yellow-100\"\r\n            aria-label=\"View draft deals\"\r\n          >\r\n            View drafts\r\n          </Button>\r\n          <button onClick={() => setDismissed(true)} className=\"p-1\" style={{ color: '#F59E0B' }}>\r\n            <Icon name=\"X\" size={16} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n// Safe display helpers to replace deprecated deal.title usage\r\nconst getDealPrimaryRef = (deal) => {\r\n  if (!deal) return '—'\r\n  if (deal?.job_number) return deal.job_number\r\n  if (deal?.id) return `Job-${String(deal.id).slice(0, 8)}`\r\n  return '—'\r\n}\r\n\r\nconst getDealSubtitle = (deal) => {\r\n  if (!deal) return ''\r\n  return deal?.customer_name || ''\r\n}\r\n\r\n// ✅ UPDATED: Mobile-friendly customer display with enhanced tap-to-call and SMS\r\nconst CustomerDisplay = ({ deal }) => {\r\n  if (!deal?.customer_name && !deal?.customer_phone) {\r\n    return <span className=\"text-xs text-gray-500\">—</span>\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-1\">\r\n      {deal?.customer_name && (\r\n        <div className=\"font-medium text-sm text-slate-900\">{deal?.customer_name}</div>\r\n      )}\r\n      {deal?.customer_phone && (\r\n        <a\r\n          href={`tel:${deal?.customer_phone}`}\r\n          className=\"text-xs text-slate-500 hover:text-blue-600 underline\"\r\n          onClick={(e) => e?.stopPropagation()}\r\n        >\r\n          {deal?.customer_phone}\r\n        </a>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n// ✅ UPDATED: Value display with currency formatting\r\nconst ValueDisplay = ({ amount }) => {\r\n  const value = parseFloat(amount) || 0\r\n  return (\r\n    <div className=\"text-right\">\r\n      <span className=\"text-sm font-medium text-slate-900\">\r\n        {new Intl.NumberFormat('en-US', {\r\n          style: 'currency',\r\n          currency: 'USD',\r\n        })?.format(value)}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\n// ✅ ADDED: Enhanced Loaner Badge component for tracker rows\r\nconst LoanerBadge = ({ deal }) => {\r\n  if (!deal?.loaner_number) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <span className=\"inline-flex items-center px-2 py-1 rounded text-xs font-medium bg-purple-100 text-purple-800 border border-purple-200\">\r\n      🚗 Loaner #{deal?.loaner_number}\r\n      {deal?.loaner_eta_short && <span className=\"ml-1\">• due {deal?.loaner_eta_short}</span>}\r\n    </span>\r\n  )\r\n}\r\n\r\n// ✅ FIXED: Loaner Drawer Component with enhanced mobile functionality\r\nconst LoanerDrawer = ({ isOpen, onClose, deal, onSave, loading }) => {\r\n  const [loanerForm, setLoanerForm] = useState({\r\n    loaner_number: '',\r\n    eta_return_date: '',\r\n    notes: '',\r\n  })\r\n  const [error, setError] = useState('')\r\n\r\n  // Reset form when drawer opens/closes\r\n  useEffect(() => {\r\n    if (isOpen && deal) {\r\n      // Compute default ETA as the latest scheduled promised_date if none exists yet\r\n      let defaultEta = ''\r\n      try {\r\n        const dates = (deal?.job_parts || [])\r\n          .filter((p) => p?.requires_scheduling && p?.promised_date)\r\n          .map((p) => new Date(p.promised_date))\r\n        if (dates?.length > 0) {\r\n          const latest = new Date(Math.max.apply(null, dates))\r\n          // format YYYY-MM-DD for date input\r\n          defaultEta = latest.toISOString().split('T')[0]\r\n        }\r\n      } catch (_) {}\r\n\r\n      // Pre-populate if loaner exists; otherwise use computed default for ETA\r\n      setLoanerForm({\r\n        loaner_number: deal?.loaner_number || '',\r\n        eta_return_date: deal?.loaner_eta_return_date || defaultEta || '',\r\n        notes: deal?.loaner_notes || '',\r\n      })\r\n      setError('')\r\n    } else if (!isOpen) {\r\n      setLoanerForm({ loaner_number: '', eta_return_date: '', notes: '' })\r\n      setError('')\r\n    }\r\n  }, [isOpen, deal])\r\n\r\n  const handleSave = async () => {\r\n    setError('')\r\n\r\n    if (!loanerForm?.loaner_number?.trim()) {\r\n      setError('Loaner number is required')\r\n      return\r\n    }\r\n\r\n    if (!loanerForm?.eta_return_date) {\r\n      setError('ETA return date is required')\r\n      return\r\n    }\r\n\r\n    try {\r\n      await onSave({\r\n        job_id: deal?.id,\r\n        loaner_number: loanerForm?.loaner_number?.trim(),\r\n        eta_return_date: loanerForm?.eta_return_date,\r\n        notes: loanerForm?.notes?.trim() || null,\r\n      })\r\n      onClose() // Close drawer on successful save\r\n    } catch (err) {\r\n      setError(err?.message || 'Failed to save loaner assignment')\r\n    }\r\n  }\r\n\r\n  if (!isOpen) return null\r\n\r\n  return (\r\n    <>\r\n      {/* Backdrop */}\r\n      <div className=\"fixed inset-0 bg-black bg-opacity-50 z-50\" onClick={onClose} />\r\n\r\n      {/* Drawer - Mobile-first light theme only */}\r\n      <div className=\"fixed right-0 top-0 h-full w-full md:w-96 bg-white shadow-xl z-50 overflow-y-auto\">\r\n        <div className=\"p-6\">\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h3 className=\"text-lg font-semibold text-slate-900\">Loaner Assignment</h3>\r\n            <Button variant=\"ghost\" size=\"icon\" onClick={onClose} aria-label=\"Close drawer\">\r\n              <Icon name=\"X\" size={20} />\r\n            </Button>\r\n          </div>\r\n\r\n          {/* Deal Info */}\r\n          <div className=\"mb-6 p-4 bg-slate-50 rounded-lg border border-slate-200\">\r\n            <h4 className=\"font-medium text-sm text-slate-900 mb-2\">Deal Information</h4>\r\n            <p className=\"text-sm text-slate-600\">{getDealPrimaryRef(deal)}</p>\r\n            <p className=\"text-xs text-slate-500\">{getDealSubtitle(deal)}</p>\r\n          </div>\r\n\r\n          {/* Error Display */}\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n              <p className=\"text-sm text-red-700\">{error}</p>\r\n              <button\r\n                onClick={() => setError('')}\r\n                className=\"text-xs text-red-500 hover:text-red-700 mt-1 underline\"\r\n              >\r\n                Dismiss\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Form with light theme inputs */}\r\n          <div className=\"space-y-4\">\r\n            {/* Loaner Number */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-2\">\r\n                Loaner Number *\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                value={loanerForm?.loaner_number}\r\n                onChange={(e) =>\r\n                  setLoanerForm((prev) => ({ ...prev, loaner_number: e?.target?.value }))\r\n                }\r\n                className=\"bg-white border border-slate-200 rounded-lg w-full h-11 px-3 text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                placeholder=\"e.g., 123\"\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* ETA Return Date */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-2\">\r\n                Expected Return Date *\r\n              </label>\r\n              <input\r\n                type=\"date\"\r\n                value={loanerForm?.eta_return_date}\r\n                onChange={(e) =>\r\n                  setLoanerForm((prev) => ({ ...prev, eta_return_date: e?.target?.value }))\r\n                }\r\n                className=\"bg-white border border-slate-200 rounded-lg w-full h-11 px-3 text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                min={new Date()?.toISOString()?.split('T')?.[0]}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            {/* Notes */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-700 mb-2\">\r\n                Notes (optional)\r\n              </label>\r\n              <textarea\r\n                value={loanerForm?.notes}\r\n                onChange={(e) => setLoanerForm((prev) => ({ ...prev, notes: e?.target?.value }))}\r\n                className=\"bg-white border border-slate-200 rounded-lg w-full px-3 py-2 text-base focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\r\n                rows={3}\r\n                placeholder=\"Optional notes about the loaner vehicle...\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div className=\"flex gap-3 mt-6\">\r\n            <Button variant=\"outline\" onClick={onClose} className=\"flex-1 h-11\" disabled={loading}>\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={handleSave}\r\n              className=\"flex-1 h-11 bg-blue-600 hover:bg-blue-700 text-white\"\r\n              disabled={\r\n                loading || !loanerForm?.loaner_number?.trim() || !loanerForm?.eta_return_date\r\n              }\r\n            >\r\n              {loading ? 'Saving...' : 'Save Loaner'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\n// ✅ ADDED: Mark Returned Modal Component\r\nconst MarkReturnedModal = ({ loaner, onClose, onConfirm, loading }) => {\r\n  if (!loaner) return null\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n      <div className=\"bg-white rounded-lg w-full max-w-md\">\r\n        <div className=\"p-6\">\r\n          <h3 className=\"text-lg font-semibold mb-4 text-slate-900\">Mark Loaner Returned</h3>\r\n          <p className=\"text-slate-600 mb-6\">\r\n            Mark loaner <strong>#{loaner?.loaner_number}</strong> as returned?\r\n          </p>\r\n          <div className=\"flex gap-3\">\r\n            <Button\r\n              variant=\"outline\"\r\n              onClick={onClose}\r\n              className=\"flex-1 h-11\"\r\n              disabled={loading}\r\n              aria-label=\"Cancel marking loaner as returned\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              onClick={onConfirm}\r\n              className=\"flex-1 h-11 bg-green-600 hover:bg-green-700 text-white\"\r\n              disabled={loading}\r\n              aria-label=\"Confirm loaner returned\"\r\n            >\r\n              {loading ? 'Processing...' : 'Mark Returned'}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default function DealsPage() {\r\n  const [deals, setDeals] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [showNewDealModal, setShowNewDealModal] = useState(false)\r\n  const [showEditDealModal, setShowEditDealModal] = useState(false)\r\n  const [editingDealId, setEditingDealId] = useState(null)\r\n  const [editingDeal, setEditingDeal] = useState(null)\r\n  const [deleteConfirm, setDeleteConfirm] = useState(null)\r\n\r\n  // ✅ FIXED: Added missing error state management\r\n  const [error, setError] = useState('')\r\n\r\n  // ✅ UPDATED: Status tabs & quick search with enhanced filtering\r\n  const [filters, setFilters] = useState({\r\n    status: 'All',\r\n    salesAssigned: null,\r\n    deliveryAssigned: null,\r\n    financeAssigned: null,\r\n    vendor: null,\r\n    search: '',\r\n  })\r\n\r\n  // ✅ ADDED: Loaner management state\r\n  const [showLoanerDrawer, setShowLoanerDrawer] = useState(false)\r\n  const [selectedDealForLoaner, setSelectedDealForLoaner] = useState(null)\r\n  const [loanerLoading, setLoanerLoading] = useState(false)\r\n  const [markReturnedModal, setMarkReturnedModal] = useState(null)\r\n  const [returningLoaner, setReturningLoaner] = useState(false)\r\n  const [searchDebounce, setSearchDebounce] = useState('')\r\n\r\n  // ✅ FIXED: Properly use the dropdown hook instead of direct function calls\r\n  const {\r\n    getUserOptions,\r\n    getVendorOptions,\r\n    clearSearch,\r\n    loading: dropdownLoading,\r\n    error: dropdownError,\r\n    refresh: refreshDropdowns,\r\n  } = useDropdownData({ loadOnMount: true })\r\n\r\n  const navigate = useNavigate()\r\n  const { user } = useAuth()\r\n\r\n  // ✅ FIXED: Replace direct function calls with hook-based calls\r\n  const getSalesConsultants = () => {\r\n    try {\r\n      return (\r\n        getUserOptions({\r\n          roles: ['staff'],\r\n          departments: ['Sales Consultants'],\r\n          activeOnly: true,\r\n        }) || []\r\n      )\r\n    } catch (err) {\r\n      console.error('Error getting sales consultants:', err)\r\n      return []\r\n    }\r\n  }\r\n\r\n  const getDeliveryCoordinators = () => {\r\n    try {\r\n      return (\r\n        getUserOptions({\r\n          roles: ['admin', 'manager'],\r\n          departments: ['Delivery Coordinator'],\r\n          activeOnly: true,\r\n        }) || []\r\n      )\r\n    } catch (err) {\r\n      console.error('Error getting delivery coordinators:', err)\r\n      return []\r\n    }\r\n  }\r\n\r\n  const getFinanceManagers = () => {\r\n    try {\r\n      return (\r\n        getUserOptions({\r\n          roles: ['staff'],\r\n          departments: ['Finance Manager'],\r\n          activeOnly: true,\r\n        }) || []\r\n      )\r\n    } catch (err) {\r\n      console.error('Error getting finance managers:', err)\r\n      return []\r\n    }\r\n  }\r\n\r\n  const getSafeVendorOptions = (filterOptions = {}) => {\r\n    try {\r\n      return getVendorOptions(filterOptions) || []\r\n    } catch (err) {\r\n      console.error('Error getting vendor options:', err)\r\n      return []\r\n    }\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced delete function with proper error handling\r\n  const handleDeleteDeal = async (dealId) => {\r\n    try {\r\n      setError('') // Clear previous errors\r\n      const { error: deleteError } = await supabase?.rpc('delete_job_cascade', { p_job_id: dealId })\r\n      if (deleteError) throw deleteError\r\n\r\n      setDeleteConfirm(null)\r\n      await loadDeals()\r\n    } catch (e) {\r\n      setError(`Failed to delete deal: ${e?.message}`)\r\n      console.error('Delete error:', e)\r\n    }\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced loaner assignment with better error handling and modal state management\r\n  const handleSaveLoaner = async (loanerData) => {\r\n    try {\r\n      setLoanerLoading(true)\r\n      setError('') // Clear previous errors\r\n\r\n      // Insert or update loaner assignment without relying on ON CONFLICT\r\n      let existing = null\r\n      try {\r\n        const { data: rows } = await supabase\r\n          ?.from('loaner_assignments')\r\n          ?.select('id')\r\n          ?.eq('job_id', loanerData?.job_id)\r\n          ?.is('returned_at', null)\r\n          ?.limit(1)\r\n        existing = Array.isArray(rows) ? rows[0] : rows\r\n      } catch (_) {}\r\n\r\n      if (existing?.id) {\r\n        const { error: updErr } = await supabase\r\n          ?.from('loaner_assignments')\r\n          ?.update({\r\n            loaner_number: loanerData?.loaner_number,\r\n            eta_return_date: loanerData?.eta_return_date,\r\n            notes: loanerData?.notes,\r\n          })\r\n          ?.eq('id', existing.id)\r\n        if (updErr) throw updErr\r\n      } else {\r\n        const { error: insErr } = await supabase?.from('loaner_assignments')?.insert([\r\n          {\r\n            job_id: loanerData?.job_id,\r\n            loaner_number: loanerData?.loaner_number,\r\n            eta_return_date: loanerData?.eta_return_date,\r\n            notes: loanerData?.notes,\r\n          },\r\n        ])\r\n        if (insErr) throw insErr\r\n      }\r\n\r\n      // ✅ FIXED: Properly close drawer and reset state\r\n      setShowLoanerDrawer(false)\r\n      setSelectedDealForLoaner(null)\r\n      await loadDeals() // Refresh data\r\n    } catch (e) {\r\n      const errorMessage = `Failed to save loaner assignment: ${e?.message}`\r\n      setError(errorMessage)\r\n      throw new Error(errorMessage)\r\n    } finally {\r\n      setLoanerLoading(false)\r\n    }\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced mark returned with better error handling\r\n  const handleMarkLoanerReturned = async (loanerData) => {\r\n    try {\r\n      setReturningLoaner(true)\r\n      setError('') // Clear previous errors\r\n      await markLoanerReturned(loanerData?.loaner_id)\r\n      setMarkReturnedModal(null)\r\n      await loadDeals() // Refresh data\r\n    } catch (e) {\r\n      setError(`Failed to mark loaner as returned: ${e?.message}`)\r\n      console.error('Mark returned error:', e)\r\n    } finally {\r\n      setReturningLoaner(false)\r\n    }\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced load deals with better error handling and retry logic\r\n  const loadDeals = async (retryCount = 0) => {\r\n    try {\r\n      setLoading(true)\r\n      setError('') // Clear previous errors\r\n      const data = await getAllDeals()\r\n      setDeals(data || [])\r\n    } catch (e) {\r\n      const errorMessage = `Failed to load deals: ${e?.message}`\r\n      console.error('Load deals error:', e)\r\n\r\n      // Retry logic for network issues\r\n      if (retryCount < 2 && (e?.message?.includes('fetch') || e?.message?.includes('network'))) {\r\n        console.log(`Retrying load deals (attempt ${retryCount + 1})`)\r\n        setTimeout(() => loadDeals(retryCount + 1), 1000 * (retryCount + 1))\r\n        return\r\n      }\r\n\r\n      setError(errorMessage)\r\n      setDeals([]) // Set empty array on error\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  // ✅ ADDED: Initialize status from URL parameter on mount\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search)\r\n    const statusParam = urlParams?.get('status')\r\n    if (statusParam) {\r\n      const statusValue = statusParam?.charAt(0)?.toUpperCase() + statusParam?.slice(1)\r\n      setFilters((prev) => ({ ...prev, status: statusValue }))\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    loadDeals()\r\n  }, [])\r\n\r\n  // ✅ FIXED: Properly use the dropdown hook instead of direct function calls\r\n  const loadDropdownData = async () => {\r\n    await refreshDropdowns()\r\n  }\r\n\r\n  // ✅ FIXED: Move handleManageLoaner function to proper location inside component\r\n  const handleManageLoaner = (deal) => {\r\n    setSelectedDealForLoaner(deal)\r\n    setShowLoanerDrawer(true)\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced error display component\r\n  const ErrorAlert = ({ message, onClose }) => {\r\n    if (!message) return null\r\n\r\n    return (\r\n      <div className=\"mb-4 p-4 bg-red-50 border border-red-200 rounded-lg\">\r\n        <div className=\"flex justify-between items-start\">\r\n          <div className=\"flex\">\r\n            <Icon name=\"AlertCircle\" size={20} className=\"text-red-500 mr-2 mt-0.5\" />\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-red-800\">Error</h4>\r\n              <p className=\"text-sm text-red-700 mt-1\">{message}</p>\r\n            </div>\r\n          </div>\r\n          {onClose && (\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-red-400 hover:text-red-600\"\r\n              aria-label=\"Dismiss error\"\r\n            >\r\n              <Icon name=\"X\" size={16} />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  // ✅ UPDATED: Calculate KPIs with proper safety checks\r\n  const calculateKPIs = (dealsData) => {\r\n    const safeDeals = dealsData || []\r\n\r\n    const activeJobs = safeDeals?.filter((d) => d?.job_status === 'in_progress')?.length || 0\r\n\r\n    const totalRevenue = safeDeals?.reduce((sum, deal) => {\r\n      const revenue = parseFloat(deal?.total_amount) || 0\r\n      return sum + revenue\r\n    }, 0)\r\n\r\n    // Estimate 25% profit margin\r\n    const totalProfit = totalRevenue * 0.25\r\n    const margin = totalRevenue > 0 ? 25.0 : 0\r\n\r\n    const pendingJobs = safeDeals?.filter((d) => d?.job_status === 'pending')?.length || 0\r\n\r\n    const totalDrafts = safeDeals?.filter((d) => d?.job_status === 'draft')?.length || 0\r\n\r\n    return {\r\n      active: activeJobs,\r\n      revenue: totalRevenue?.toFixed(2) || '0.00',\r\n      profit: totalProfit?.toFixed(2) || '0.00',\r\n      margin: margin?.toFixed(1) || '0.0',\r\n      pending: pendingJobs,\r\n      drafts: totalDrafts,\r\n    }\r\n  }\r\n\r\n  const kpis = calculateKPIs(deals)\r\n\r\n  // ✅ UPDATED: Enhanced filter deals with 300ms debounced search\r\n  const filteredDeals = deals?.filter((deal) => {\r\n    // Status filter with tab-based logic\r\n    if (filters?.status !== 'All') {\r\n      const targetStatus = filters?.status?.toLowerCase()?.replace(' ', '_')\r\n      if (deal?.job_status !== targetStatus) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    // Sales assigned filter\r\n    if (filters?.salesAssigned && deal?.assigned_to !== filters?.salesAssigned) {\r\n      return false\r\n    }\r\n\r\n    // Delivery assigned filter\r\n    if (filters?.deliveryAssigned && deal?.delivery_coordinator_id !== filters?.deliveryAssigned) {\r\n      return false\r\n    }\r\n\r\n    // Finance assigned filter\r\n    if (filters?.financeAssigned && deal?.finance_manager_id !== filters?.financeAssigned) {\r\n      return false\r\n    }\r\n\r\n    // Vendor filter\r\n    if (filters?.vendor && deal?.vendor_id !== filters?.vendor) {\r\n      return false\r\n    }\r\n\r\n    // ✅ UPDATED: Search filter with debounced search (matches stock, name, phone with stripped non-digits)\r\n    if (searchDebounce?.trim()) {\r\n      const searchTerm = searchDebounce?.toLowerCase()\r\n\r\n      // Strip non-digits for phone matching\r\n      const stripNonDigits = (str) => str?.replace(/\\D/g, '') || ''\r\n      const searchDigits = stripNonDigits(searchTerm)\r\n\r\n      const searchableFields = [\r\n        deal?.customer_name,\r\n        deal?.customer_phone,\r\n        deal?.customer_email,\r\n        deal?.job_number,\r\n        deal?.vehicle?.make,\r\n        deal?.vehicle?.model,\r\n        deal?.vehicle?.stock_number || deal?.stock_no,\r\n        deal?.description,\r\n      ]?.filter(Boolean)\r\n\r\n      const hasMatch = searchableFields?.some((field) => {\r\n        const fieldStr = field?.toLowerCase()\r\n        // Standard text match\r\n        if (fieldStr?.includes(searchTerm)) return true\r\n        // Phone number digit match\r\n        if (searchDigits?.length >= 3 && stripNonDigits(fieldStr)?.includes(searchDigits))\r\n          return true\r\n        return false\r\n      })\r\n\r\n      if (!hasMatch) return false\r\n    }\r\n\r\n    return true\r\n  })\r\n\r\n  // ✅ ADDED: 300ms debounced search implementation\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setSearchDebounce(filters?.search)\r\n    }, 300)\r\n\r\n    return () => clearTimeout(timer)\r\n  }, [filters?.search])\r\n\r\n  // ✅ UPDATED: Update filter function with URL parameter support\r\n  const updateFilter = (key, value) => {\r\n    setFilters((prev) => ({\r\n      ...prev,\r\n      [key]: value,\r\n    }))\r\n\r\n    // Update URL for status filter\r\n    if (key === 'status') {\r\n      const searchParams = new URLSearchParams(window.location.search)\r\n      if (value === 'All') {\r\n        searchParams?.delete('status')\r\n      } else {\r\n        searchParams?.set('status', value?.toLowerCase())\r\n      }\r\n      const newUrl = `${window.location?.pathname}${searchParams?.toString() ? '?' + searchParams?.toString() : ''}`\r\n      window.history?.replaceState({}, '', newUrl)\r\n    }\r\n  }\r\n\r\n  // Clear all filters\r\n  const clearAllFilters = () => {\r\n    setFilters({\r\n      status: 'All',\r\n      salesAssigned: null,\r\n      deliveryAssigned: null,\r\n      financeAssigned: null,\r\n      vendor: null,\r\n      search: '',\r\n    })\r\n    clearSearch()\r\n\r\n    // Clear URL params\r\n    window.history?.replaceState({}, '', window.location?.pathname)\r\n  }\r\n\r\n  const handleEditDeal = (dealId) => {\r\n    setEditingDealId(dealId)\r\n    // Preload full deal object from current list for instant modal render\r\n    try {\r\n      const found = (filteredDeals?.length ? filteredDeals : deals)?.find((d) => d?.id === dealId)\r\n      if (found) setEditingDeal(found)\r\n      else setEditingDeal(null)\r\n    } catch (_) {\r\n      setEditingDeal(null)\r\n    }\r\n    setShowEditDealModal(true)\r\n  }\r\n\r\n  const closeEditModal = () => {\r\n    setShowEditDealModal(false)\r\n    setEditingDealId(null)\r\n    setEditingDeal(null)\r\n  }\r\n\r\n  // ✅ FIXED: Enhanced loading state without dropdown dependency\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-slate-50 text-slate-900\">\r\n        <Navbar />\r\n        <div className=\"p-4 md:p-8\" style={{ paddingTop: '5rem' }}>\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-slate-600\">Loading deals...</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-slate-50 text-slate-900\">\r\n      {/* ✅ FIXED: Ensure navbar is always visible */}\r\n      <Navbar />\r\n      <div className=\"p-4 md:p-8 max-w-7xl mx-auto\" style={{ paddingTop: '5rem' }}>\r\n        {/* ✅ FIXED: Error display */}\r\n        <ErrorAlert\r\n          message={error || dropdownError}\r\n          onClose={() => {\r\n            setError('')\r\n          }}\r\n        />\r\n\r\n        {/* Header */}\r\n        <div className=\"flex flex-col md:flex-row md:items-center justify-between mb-6 gap-4\">\r\n          <h1 className=\"text-2xl md:text-3xl font-bold text-slate-900\">Deal Tracker</h1>\r\n          <div className=\"flex items-center space-x-3\">\r\n            <ExportButton\r\n              exportType=\"jobs\"\r\n              filters={{ status: filters?.status }}\r\n              onExportStart={() => console.log('Starting export...')}\r\n              onExportComplete={(recordCount, filename) =>\r\n                console.log(`Export complete: ${recordCount} records`)\r\n              }\r\n              onExportError={(errorMessage) => setError(`Export failed: ${errorMessage}`)}\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              className=\"bg-white hover:bg-gray-50\"\r\n            />\r\n            <Button\r\n              onClick={() => setShowNewDealModal(true)}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 h-11\"\r\n              aria-label=\"Create new deal\"\r\n            >\r\n              <Icon name=\"Plus\" size={16} className=\"mr-2\" />\r\n              New Deal\r\n            </Button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ✅ UPDATED: Draft reminder banner */}\r\n        <DraftReminderBanner\r\n          draftsCount={kpis?.drafts}\r\n          onViewDrafts={() => updateFilter('status', 'Draft')}\r\n        />\r\n\r\n        {/* ✅ UPDATED: KPI Row - Enhanced with profit analysis */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\r\n            {/* Active Jobs */}\r\n            <div className=\"bg-white p-6 rounded-xl border shadow-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-3 rounded-lg bg-orange-100 mr-4\">\r\n                  <Icon name=\"Clock\" size={24} className=\"text-orange-700\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-slate-600 text-sm font-medium uppercase tracking-wide\">\r\n                    Active\r\n                  </h3>\r\n                  <p className=\"text-slate-900 text-2xl font-bold\">{kpis?.active}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Revenue */}\r\n            <div className=\"bg-white p-6 rounded-xl border shadow-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-3 rounded-lg bg-green-100 mr-4\">\r\n                  <Icon name=\"DollarSign\" size={24} className=\"text-green-700\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-slate-600 text-sm font-medium uppercase tracking-wide\">\r\n                    Revenue\r\n                  </h3>\r\n                  <p className=\"text-slate-900 text-2xl font-bold\">${kpis?.revenue}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Profit */}\r\n            <div className=\"bg-white p-6 rounded-xl border shadow-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-3 rounded-lg bg-blue-100 mr-4\">\r\n                  <Icon name=\"TrendingUp\" size={24} className=\"text-blue-700\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-slate-600 text-sm font-medium uppercase tracking-wide\">\r\n                    Profit\r\n                  </h3>\r\n                  <p className=\"text-slate-900 text-2xl font-bold\">${kpis?.profit}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Margin */}\r\n            <div className=\"bg-white p-6 rounded-xl border shadow-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-3 rounded-lg bg-purple-100 mr-4\">\r\n                  <Icon name=\"Percent\" size={24} className=\"text-purple-700\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-slate-600 text-sm font-medium uppercase tracking-wide\">\r\n                    Margin\r\n                  </h3>\r\n                  <p className=\"text-slate-900 text-2xl font-bold\">{kpis?.margin}%</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Pending */}\r\n            <div className=\"bg-white p-6 rounded-xl border shadow-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-3 rounded-lg bg-yellow-100 mr-4\">\r\n                  <Icon name=\"Clock\" size={24} className=\"text-yellow-700\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-slate-600 text-sm font-medium uppercase tracking-wide\">\r\n                    Pending\r\n                  </h3>\r\n                  <p className=\"text-slate-900 text-2xl font-bold\">{kpis?.pending}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Drafts */}\r\n            <div className=\"bg-white p-6 rounded-xl border shadow-sm\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"p-3 rounded-lg bg-gray-100 mr-4\">\r\n                  <Icon name=\"File\" size={24} className=\"text-gray-700\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"text-slate-600 text-sm font-medium uppercase tracking-wide\">\r\n                    Drafts\r\n                  </h3>\r\n                  <p className=\"text-slate-900 text-2xl font-bold\">{kpis?.drafts}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* ✅ FIXED: Status tabs & enhanced dropdown filters */}\r\n        <div className=\"mb-6 bg-white rounded-lg border p-4\">\r\n          {/* Status Tabs */}\r\n          <div className=\"flex flex-wrap gap-2 mb-4\">\r\n            {['All', 'Draft', 'Pending', 'Active', 'Completed']?.map((status) => (\r\n              <button\r\n                key={status}\r\n                onClick={() => updateFilter('status', status)}\r\n                className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors\r\n                  ${\r\n                    filters?.status === status\r\n                      ? 'bg-blue-600 text-white'\r\n                      : 'bg-white border border-slate-200 text-slate-700 hover:bg-slate-50'\r\n                  }`}\r\n              >\r\n                {status}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"flex flex-col lg:flex-row gap-4\">\r\n            {/* ✅ UPDATED: Search box with 300ms debounce, matches stock, name, phone (strip non-digits) */}\r\n            <div className=\"flex-1\">\r\n              <div className=\"relative\">\r\n                <Icon\r\n                  name=\"Search\"\r\n                  size={16}\r\n                  className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-slate-400\"\r\n                />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Search deals, customers, vehicles...\"\r\n                  value={filters?.search}\r\n                  onChange={(e) => updateFilter('search', e?.target?.value)}\r\n                  className=\"bg-white border border-slate-200 rounded-lg w-full h-11 pl-9 pr-3 focus:ring-1 focus:ring-blue-500 focus:border-blue-500\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Clear Filters */}\r\n            <div className=\"flex items-center\">\r\n              <Button\r\n                variant=\"ghost\"\r\n                size=\"sm\"\r\n                onClick={clearAllFilters}\r\n                className=\"text-slate-600 hover:text-slate-800\"\r\n                aria-label=\"Clear all filters\"\r\n              >\r\n                <Icon name=\"X\" size={16} className=\"mr-1\" />\r\n                Clear\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Results count */}\r\n        <div className=\"mb-4 text-sm text-slate-600\">\r\n          Showing {filteredDeals?.length} of {deals?.length} deals\r\n          {(filters?.salesAssigned ||\r\n            filters?.deliveryAssigned ||\r\n            filters?.financeAssigned ||\r\n            filters?.vendor ||\r\n            filters?.search) && <span className=\"ml-2 text-blue-600\">(filtered)</span>}\r\n        </div>\r\n\r\n        {/* ✅ UPDATED: Desktop Table with exact columns per requirements */}\r\n        <div className=\"hidden md:block bg-white border rounded-lg overflow-hidden shadow-sm\">\r\n          <table className=\"min-w-full\">\r\n            <thead className=\"bg-slate-50\">\r\n              <tr>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\r\n                  Customer\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\r\n                  Value\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\r\n                  Next\r\n                </th>\r\n                <th className=\"px-6 py-3 text-left text-xs font-medium text-slate-500 uppercase tracking-wider\">\r\n                  Service\r\n                </th>\r\n                <th className=\"px-6 py-3 text-right text-xs font-medium text-slate-500 uppercase tracking-wider\">\r\n                  Actions\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className=\"bg-white divide-y divide-slate-200\">\r\n              {filteredDeals?.map((deal) => (\r\n                <tr key={deal?.id} className=\"hover:bg-slate-50\">\r\n                  <td className=\"px-6 py-4\">\r\n                    <CustomerDisplay deal={deal} />\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    <ValueDisplay amount={deal?.total_amount} />\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    <NextPromisedChip nextPromisedShort={deal?.next_promised_short} />\r\n                  </td>\r\n                  <td className=\"px-6 py-4\">\r\n                    <ServiceLocationTag\r\n                      serviceType={deal?.service_type}\r\n                      jobParts={deal?.job_parts}\r\n                    />\r\n                  </td>\r\n                  <td className=\"px-6 py-4 text-right\">\r\n                    <div className=\"flex items-center justify-end space-x-2\">\r\n                      <Button\r\n                        size=\"sm\"\r\n                        variant=\"ghost\"\r\n                        onClick={() => handleEditDeal(deal?.id)}\r\n                        className=\"text-blue-600 hover:text-blue-800\"\r\n                        aria-label=\"Edit deal\"\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n\r\n                      {/* ✅ FIXED: Loaner management for desktop with proper condition */}\r\n                      {deal?.customer_needs_loaner && (\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"ghost\"\r\n                          onClick={() => handleManageLoaner(deal)}\r\n                          className=\"text-purple-600 hover:text-purple-800\"\r\n                          aria-label=\"Manage loaner\"\r\n                        >\r\n                          Loaner\r\n                        </Button>\r\n                      )}\r\n\r\n                      {/* Mark returned button for active loaners */}\r\n                      {deal?.loaner_id && (\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"ghost\"\r\n                          onClick={() =>\r\n                            setMarkReturnedModal({\r\n                              loaner_id: deal?.loaner_id,\r\n                              loaner_number: deal?.loaner_number,\r\n                              job_title: getDealPrimaryRef(deal),\r\n                            })\r\n                          }\r\n                          className=\"text-green-600 hover:text-green-800\"\r\n                          aria-label=\"Mark loaner returned\"\r\n                        >\r\n                          Return\r\n                        </Button>\r\n                      )}\r\n\r\n                      <Button\r\n                        size=\"sm\"\r\n                        variant=\"ghost\"\r\n                        onClick={() => setDeleteConfirm(deal)}\r\n                        className=\"text-red-600 hover:text-red-800\"\r\n                        aria-label=\"Delete deal\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        {/* ✅ UPDATED: Mobile Cards with enhanced styling and loaner support */}\r\n        <div className=\"md:hidden space-y-4\">\r\n          {filteredDeals?.length === 0 ? (\r\n            <div className=\"bg-white rounded-lg border p-8 text-center\">\r\n              <div className=\"text-slate-500\">\r\n                {filters?.status === 'All'\r\n                  ? 'No deals found'\r\n                  : `No ${filters?.status?.toLowerCase()} deals found`}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            filteredDeals?.map((deal) => (\r\n              <div key={deal?.id} className=\"bg-white rounded-xl border shadow-sm overflow-hidden\">\r\n                {/* Card Header */}\r\n                <div className=\"p-4 border-b bg-slate-50\">\r\n                  <div className=\"flex justify-between items-start mb-2\">\r\n                    <div>\r\n                      <div className=\"font-medium text-slate-900\">{getDealPrimaryRef(deal)}</div>\r\n                      <div className=\"text-sm text-slate-600\">{getDealSubtitle(deal) || '—'}</div>\r\n                    </div>\r\n                    <StatusPill status={deal?.job_status} />\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Card Content with enhanced mobile layout */}\r\n                <div className=\"p-4 space-y-4\">\r\n                  {/* Customer Display */}\r\n                  {(deal?.customer_name || deal?.customer_phone) && (\r\n                    <div>\r\n                      <div className=\"text-xs font-medium text-slate-500 uppercase tracking-wider mb-1\">\r\n                        Customer\r\n                      </div>\r\n                      <CustomerDisplay deal={deal} />\r\n                    </div>\r\n                  )}\r\n\r\n                  <div className=\"grid grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <div className=\"text-xs font-medium text-slate-500 uppercase tracking-wider mb-1\">\r\n                        Value\r\n                      </div>\r\n                      <ValueDisplay amount={deal?.total_amount} />\r\n                    </div>\r\n                    <div>\r\n                      <div className=\"text-xs font-medium text-slate-500 uppercase tracking-wider mb-1\">\r\n                        Next\r\n                      </div>\r\n                      <NextPromisedChip nextPromisedShort={deal?.next_promised_short} />\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <div className=\"text-xs font-medium text-slate-500 uppercase tracking-wider mb-1\">\r\n                      Service\r\n                    </div>\r\n                    <ServiceLocationTag\r\n                      serviceType={deal?.service_type}\r\n                      jobParts={deal?.job_parts}\r\n                    />\r\n                  </div>\r\n\r\n                  {/* ✅ ADDED: Loaner badge display for mobile */}\r\n                  {deal?.loaner_number && (\r\n                    <div>\r\n                      <div className=\"text-xs font-medium text-slate-500 uppercase tracking-wider mb-1\">\r\n                        Loaner Assignment\r\n                      </div>\r\n                      <LoanerBadge deal={deal} />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* ✅ FIXED: Enhanced mobile footer with proper loaner actions */}\r\n                <div className=\"p-4 border-t bg-slate-50\">\r\n                  {/* Primary actions row */}\r\n                  <div className=\"grid grid-cols-2 gap-2 mb-2\">\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => handleEditDeal(deal?.id)}\r\n                      className=\"h-11 w-full bg-blue-50 border-blue-200 text-blue-700 hover:bg-blue-100\"\r\n                      aria-label=\"Edit deal\"\r\n                    >\r\n                      <Icon name=\"Edit\" size={16} className=\"mr-2\" />\r\n                      Edit\r\n                    </Button>\r\n\r\n                    <Button\r\n                      size=\"sm\"\r\n                      variant=\"outline\"\r\n                      onClick={() => setDeleteConfirm(deal)}\r\n                      className=\"h-11 w-full bg-red-50 border-red-200 text-red-700 hover:bg-red-100\"\r\n                      aria-label=\"Delete deal\"\r\n                    >\r\n                      <Icon name=\"Trash2\" size={16} className=\"mr-2\" />\r\n                      Delete\r\n                    </Button>\r\n                  </div>\r\n\r\n                  {/* ✅ FIXED: Loaner actions row with proper conditions */}\r\n                  {(deal?.customer_needs_loaner || deal?.loaner_id) && (\r\n                    <div className=\"grid grid-cols-2 gap-2\">\r\n                      {deal?.customer_needs_loaner && !deal?.loaner_id && (\r\n                        <Button\r\n                          size=\"sm\"\r\n                          variant=\"outline\"\r\n                          onClick={() => handleManageLoaner(deal)}\r\n                          className=\"h-11 w-full bg-purple-50 border-purple-200 text-purple-700 hover:bg-purple-100\"\r\n                          aria-label=\"Manage loaner\"\r\n                        >\r\n                          <Icon name=\"Car\" size={16} className=\"mr-2\" />\r\n                          Assign Loaner\r\n                        </Button>\r\n                      )}\r\n\r\n                      {deal?.loaner_id && (\r\n                        <>\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            onClick={() => handleManageLoaner(deal)}\r\n                            className=\"h-11 w-full bg-purple-50 border-purple-200 text-purple-700 hover:bg-purple-100\"\r\n                            aria-label=\"Edit loaner\"\r\n                          >\r\n                            <Icon name=\"Edit\" size={16} className=\"mr-2\" />\r\n                            Edit Loaner\r\n                          </Button>\r\n\r\n                          <Button\r\n                            size=\"sm\"\r\n                            variant=\"outline\"\r\n                            onClick={() =>\r\n                              setMarkReturnedModal({\r\n                                loaner_id: deal?.loaner_id,\r\n                                loaner_number: deal?.loaner_number,\r\n                                job_title: getDealPrimaryRef(deal),\r\n                              })\r\n                            }\r\n                            className=\"h-11 w-full bg-green-50 border-green-200 text-green-700 hover:bg-green-100\"\r\n                            aria-label=\"Mark loaner returned\"\r\n                          >\r\n                            <Icon name=\"CheckCircle\" size={16} className=\"mr-2\" />\r\n                            Mark Returned\r\n                          </Button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n\r\n        {/* ✅ UPDATED: New Deal Modal */}\r\n        <NewDealModal\r\n          isOpen={showNewDealModal}\r\n          onClose={() => setShowNewDealModal(false)}\r\n          onSuccess={loadDeals}\r\n        />\r\n\r\n        {/* Edit Deal Modal */}\r\n        <EditDealModal\r\n          isOpen={showEditDealModal}\r\n          dealId={editingDealId}\r\n          deal={editingDeal}\r\n          onClose={closeEditModal}\r\n          onSuccess={() => {\r\n            loadDeals()\r\n            closeEditModal()\r\n          }}\r\n        />\r\n\r\n        {/* ✅ UPDATED: Delete Confirmation Modal with light theme */}\r\n        {deleteConfirm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg w-full max-w-md max-h-[80vh] overflow-y-auto p-4\">\r\n              <div className=\"p-6\">\r\n                <h3 className=\"text-lg font-semibold mb-4 text-slate-900\">Delete Deal</h3>\r\n                <p className=\"text-slate-600 mb-6\">\r\n                  Delete deal and its line items? This cannot be undone.\r\n                </p>\r\n                <div className=\"flex gap-3\">\r\n                  <Button\r\n                    variant=\"outline\"\r\n                    onClick={() => setDeleteConfirm(null)}\r\n                    className=\"flex-1 h-11\"\r\n                    aria-label=\"Cancel deletion\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleDeleteDeal(deleteConfirm?.id)}\r\n                    className=\"flex-1 h-11 bg-red-600 hover:bg-red-700 text-white\"\r\n                    aria-label=\"Confirm deletion\"\r\n                  >\r\n                    Delete\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* ✅ ADDED: Loaner Drawer with improved error handling */}\r\n        <LoanerDrawer\r\n          isOpen={showLoanerDrawer}\r\n          onClose={() => {\r\n            setShowLoanerDrawer(false)\r\n            setSelectedDealForLoaner(null)\r\n            setError('') // Clear any drawer-related errors\r\n          }}\r\n          deal={selectedDealForLoaner}\r\n          onSave={handleSaveLoaner}\r\n          loading={loanerLoading}\r\n        />\r\n\r\n        {/* Mark Loaner Returned Modal */}\r\n        <MarkReturnedModal\r\n          loaner={markReturnedModal}\r\n          onClose={() => {\r\n            setMarkReturnedModal(null)\r\n            setError('') // Clear any modal-related errors\r\n          }}\r\n          onConfirm={() => handleMarkLoanerReturned(markReturnedModal)}\r\n          loading={returningLoaner}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"],"names":["safeString","value","defaultValue","advancedFeaturesService","data","error","_a","supabase","_d","_c","_b","template","currentUser","_h","_g","_f","_e","id","updates","pageType","_i","name","filters","isPublic","exportType","userRole","item","exportData","cleanedExportData","key","filename","headers","csvContent","firstRow","row","rowData","values","stringValue","blob","link","url","jobIds","preferences","preferencesWithUser","pref","_j","callback","payload","result","searchQuery","tableType","query","ExportButton","selectedIds","onExportStart","onExportComplete","onExportError","disabled","variant","size","className","isExporting","setIsExporting","useState","showOptions","setShowOptions","exportFormat","setExportFormat","exportScope","setExportScope","user","userProfile","useAuth","exportOptions","scopeOptions","getExportFilename","timestamp","handleExport","exportFilters","exportResult","getExportTypeLabel","jsxs","jsx","Button","Select","Icon","vehicleService","orgId","safeSelect","q","vehicleData","mockVehicleId","resolve","createdVehicle","stockNumber","vin","v","NewDealModal","isOpen","onClose","onSuccess","useTenant","currentStep","setCurrentStep","isSubmitting","setIsSubmitting","setError","isDirty","setIsDirty","showUnsavedWarning","setShowUnsavedWarning","dropdownData","setDropdownData","initialFormState","customerData","setCustomerData","lineItems","setLineItems","loadDropdownData","retryCount","prev","sales","dc","finance","vendorsOpts","productsOpts","getSalesConsultants","getDeliveryCoordinators","getFinanceManagers","getVendors","getProducts","p","err","LoanerCheckbox","checked","onChange","e","isChecked","MobileSelect","label","options","placeholder","required","helpText","testId","option","useEffect","hasChanges","addLineItem","updateLineItem","field","updatedItem","selectedProduct","removeLineItem","validateStep1","validateStep2","calculateTotal","sum","handleSaveDraft","vehiclePayload","vehicle","dealService","resetForm","handleCreateDeal","total","serviceType","primaryVendor","scheduledStart","vendorDates","it","a","b","li","_k","_l","created","handleClose","confirmClose","index","product","vendor","Fragment","listProductsByOrg","activeOnly","rows","toOptions","listStaffByOrg","useDropdownData","loadOnMount","cacheTime","state","setState","lastUpdate","setLastUpdate","tenant","auth","loadData","useTenantLists","promises","getUserProfiles","listVendorsByOrg","listSmsTemplatesByOrg","users","vendors","products","smsTemplates","cachedSales","peekStaff","cachedDC","cachedFinance","cachedVendors","peekVendors","cachedProducts","peekProducts","isCacheValid","refreshIfNeeded","performGlobalSearch","searchTerm","results","globalSearch","clearSearch","getUserOptions","filterOptions","roles","departments","filteredUsers","getVendorOptions","specialty","filteredVendors","mounted","start","r","useDealFormDropdowns","deliveryCoordinators","salesConsultants","financeManagers","loading","refresh","Portal","React","SearchableSelect","searchable","clearable","optionLabel","optionValue","groupBy","renderOption","helperText","setIsOpen","setSearchTerm","isMobile","setIsMobile","filteredOptions","setFilteredOptions","highlightedIndex","setHighlightedIndex","dropdownPosition","setDropdownPosition","containerRef","useRef","searchInputRef","mediaQuery","handleResize","term","filtered","searchFields","selectedOption","opt","isSelected","calculateDropdownPosition","rect","handleClickOutside","event","handleKeyDown","handleSelect","handleClear","EditDealModal","dealId","initialDeal","setLoading","saving","setSaving","deleteConfirm","setDeleteConfirm","deleting","setDeleting","initialFormData","setInitialFormData","loanerAssignment","setLoanerAssignment","loanerForm","setLoanerForm","salesConsultantOptions","deliveryCoordinatorOptions","financeManagerOptions","dropdownLoading","refreshDropdowns","formData","setFormData","withSelected","opts","selectedId","o","vendorOptionsEffective","useMemo","salesOptionsEffective","deliveryOptionsEffective","financeOptionsEffective","formDeal","mapDbDealToForm","loadedFormData","toCamelLineItems","createEmptyLineItem","loadDealData","t","ServiceTypeRadio","selectedValue","itemIndex","SchedulingRadio","requiresScheduling","items","part","deal","getDeal","transaction","activeLoaner","la","dates","latest","updateFormData","i","_","handleSave","updatedFormData","payloadForSave","updateDeal","handleDelete","deleteDeal","price","quantity","Input","StatusPill","status","statusColors","color","displayStatus","NextPromisedChip","nextPromisedShort","promiseDate","today","todayPlus2","urgencyClass","ServiceLocationTag","jobParts","hasOffSiteItems","hasOnSiteItems","DraftReminderBanner","draftsCount","onViewDrafts","dismissed","setDismissed","getDealPrimaryRef","getDealSubtitle","CustomerDisplay","ValueDisplay","amount","LoanerBadge","LoanerDrawer","onSave","defaultEta","MarkReturnedModal","loaner","onConfirm","DealsPage","deals","setDeals","showNewDealModal","setShowNewDealModal","showEditDealModal","setShowEditDealModal","editingDealId","setEditingDealId","editingDeal","setEditingDeal","setFilters","showLoanerDrawer","setShowLoanerDrawer","selectedDealForLoaner","setSelectedDealForLoaner","loanerLoading","setLoanerLoading","markReturnedModal","setMarkReturnedModal","returningLoaner","setReturningLoaner","searchDebounce","setSearchDebounce","dropdownError","useNavigate","handleDeleteDeal","deleteError","loadDeals","handleSaveLoaner","loanerData","existing","updErr","insErr","errorMessage","handleMarkLoanerReturned","markLoanerReturned","getAllDeals","urlParams","statusParam","statusValue","handleManageLoaner","ErrorAlert","message","kpis","dealsData","safeDeals","activeJobs","d","totalRevenue","revenue","totalProfit","margin","pendingJobs","totalDrafts","filteredDeals","targetStatus","stripNonDigits","str","searchDigits","searchableFields","fieldStr","timer","updateFilter","searchParams","newUrl","clearAllFilters","handleEditDeal","found","closeEditModal","Navbar","recordCount"],"mappings":"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"}