{"version":3,"file":"Navbar-twBS2HB8.js","sources":["../../src/services/notificationService.js","../../src/components/common/QuickNavigation.jsx","../../src/components/common/ThemeSelector.jsx","../../src/components/ui/Navbar.jsx"],"sourcesContent":["import { supabase } from '@/lib/supabase'\r\n\r\nexport const notificationService = {\r\n  // Get pending/recent communications as notifications\r\n  async getNotifications(userId, opts = {}) {\r\n    try {\r\n      if (!userId) {\r\n        return { data: [], error: null, count: 0 }\r\n      }\r\n\r\n      let q = supabase?.from('communications')?.select(`\r\n          id,\r\n          message,\r\n          subject,\r\n          communication_type,\r\n          sent_at,\r\n          is_successful,\r\n          recipient,\r\n          job_id,\r\n          vehicle_id\r\n        `)\r\n      // Optional org filter when communications.org_id exists\r\n      if (opts?.orgId) q = q?.eq('org_id', opts.orgId)\r\n      const { data } = await q?.order('sent_at', { ascending: false })?.limit(10)?.throwOnError()\r\n\r\n      // Filter for recent communications (within last 7 days)\r\n      const weekAgo = new Date()\r\n      weekAgo?.setDate(weekAgo?.getDate() - 7)\r\n\r\n      const recentNotifications =\r\n        data?.filter((notification) => new Date(notification.sent_at) >= weekAgo) || []\r\n\r\n      return {\r\n        data: recentNotifications,\r\n        error: null,\r\n        count: recentNotifications?.length,\r\n      }\r\n    } catch (error) {\r\n      if (error?.message?.includes('Failed to fetch')) {\r\n        return {\r\n          data: [],\r\n          error: 'Cannot connect to database. Please check your connection.',\r\n          count: 0,\r\n        }\r\n      }\r\n      console.warn('[notify] getNotifications failed:', error?.message || error)\r\n      return { data: [], error: 'Failed to load notifications', count: 0 }\r\n    }\r\n  },\r\n\r\n  // Get pending SMS notifications from outbox\r\n  async getPendingSMSNotifications(opts = {}) {\r\n    try {\r\n      let q = supabase\r\n        ?.from('notification_outbox')\r\n        ?.select('id, status, created_at, message_template, phone_e164')\r\n        ?.eq('status', 'pending')\r\n      // Optional org filter when notification_outbox.org_id exists\r\n      if (opts?.orgId) q = q?.eq('org_id', opts.orgId)\r\n      const { data } = await q?.order('created_at', { ascending: false })?.limit(5)?.throwOnError()\r\n\r\n      return {\r\n        data: data || [],\r\n        error: null,\r\n        count: data?.length || 0,\r\n      }\r\n    } catch (error) {\r\n      console.warn('[notify] getPendingSMSNotifications failed:', error?.message || error)\r\n      return { data: [], error: 'Failed to load pending notifications', count: 0 }\r\n    }\r\n  },\r\n\r\n  // Get combined notification count\r\n  async getNotificationCount(userId, opts = {}) {\r\n    try {\r\n      const [communications, pendingSMS] = await Promise.all([\r\n        this.getNotifications(userId, opts),\r\n        this.getPendingSMSNotifications(opts),\r\n      ])\r\n\r\n      const totalCount = (communications?.count || 0) + (pendingSMS?.count || 0)\r\n\r\n      return { count: totalCount, error: null }\r\n    } catch (error) {\r\n      console.warn('[notify] getNotificationCount failed:', error?.message || error)\r\n      return { count: 0, error: 'Failed to load notification count' }\r\n    }\r\n  },\r\n\r\n  // Subscribe to real-time notification updates\r\n  subscribeToNotifications(userId, callback) {\r\n    if (!userId || !callback) return null\r\n\r\n    try {\r\n      const subscription = supabase\r\n        ?.channel('notifications')\r\n        ?.on(\r\n          'postgres_changes',\r\n          {\r\n            event: '*',\r\n            schema: 'public',\r\n            table: 'communications',\r\n          },\r\n          () => {\r\n            // Refresh notifications when communications change\r\n            this.getNotificationCount(userId)?.then(callback)\r\n          }\r\n        )\r\n        ?.on(\r\n          'postgres_changes',\r\n          {\r\n            event: '*',\r\n            schema: 'public',\r\n            table: 'notification_outbox',\r\n          },\r\n          () => {\r\n            // Refresh notifications when SMS outbox changes\r\n            this.getNotificationCount(userId)?.then(callback)\r\n          }\r\n        )\r\n        ?.subscribe()\r\n\r\n      return subscription\r\n    } catch (error) {\r\n      console.warn('Failed to subscribe to notifications:', error)\r\n      return null\r\n    }\r\n  },\r\n\r\n  // Unsubscribe from notifications\r\n  unsubscribeFromNotifications(subscription) {\r\n    try {\r\n      if (subscription) {\r\n        subscription?.unsubscribe()\r\n      }\r\n    } catch (error) {\r\n      console.warn('Failed to unsubscribe from notifications:', error)\r\n    }\r\n  },\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Search, Calendar, Car, BarChart3, Settings, Package } from 'lucide-react';\r\nimport Icon from '../AppIcon';\r\n\r\n\r\nconst QuickNavigation = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n  const [results, setResults] = useState([]);\r\n  const navigate = useNavigate();\r\n  const inputRef = useRef();\r\n\r\n  const navigationItems = [\r\n    { \r\n      name: 'Calendar & Scheduling', \r\n      path: '/calendar', \r\n      icon: Calendar, \r\n      description: 'Manage appointments and scheduling',\r\n      keywords: ['calendar', 'appointments', 'schedule', 'time']\r\n    },\r\n    { \r\n      name: 'Vehicle Management', \r\n      path: '/vehicles', \r\n      icon: Car, \r\n      description: 'Vehicle inventory and tracking',\r\n      keywords: ['vehicles', 'inventory', 'stock', 'cars']\r\n    },\r\n    { \r\n      name: 'Active Deals', \r\n      path: '/deals', \r\n      icon: Package, \r\n      description: 'Track deals and installations',\r\n      keywords: ['deals', 'sales', 'transactions', 'money']\r\n    },\r\n    { \r\n      name: 'Administration', \r\n      path: '/admin', \r\n      icon: Settings, \r\n      description: 'Vendor management and system config',\r\n      keywords: ['vendors', 'partners', 'suppliers', 'admin', 'settings', 'configuration', 'users']\r\n    },\r\n    { \r\n      name: 'Analytics Dashboard', \r\n      path: '/calendar', \r\n      icon: BarChart3, \r\n      description: 'Business intelligence and reports',\r\n      keywords: ['analytics', 'reports', 'dashboard', 'insights']\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (query?.length > 1) {\r\n      const filtered = navigationItems?.filter(item =>\r\n        item?.name?.toLowerCase()?.includes(query?.toLowerCase()) ||\r\n        item?.description?.toLowerCase()?.includes(query?.toLowerCase()) ||\r\n        item?.keywords?.some(keyword => keyword?.toLowerCase()?.includes(query?.toLowerCase()))\r\n      );\r\n      setResults(filtered);\r\n    } else {\r\n      setResults(navigationItems?.slice(0, 6));\r\n    }\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    const handleKeyDown = (e) => {\r\n      if ((e?.metaKey || e?.ctrlKey) && e?.key === 'k') {\r\n        e?.preventDefault();\r\n        setIsOpen(true);\r\n        setTimeout(() => inputRef?.current?.focus(), 100);\r\n      }\r\n      \r\n      if (e?.key === 'Escape') {\r\n        setIsOpen(false);\r\n        setQuery('');\r\n      }\r\n    };\r\n\r\n    document.addEventListener('keydown', handleKeyDown);\r\n    return () => document.removeEventListener('keydown', handleKeyDown);\r\n  }, []);\r\n\r\n  const handleSelect = (item) => {\r\n    navigate(item?.path);\r\n    setIsOpen(false);\r\n    setQuery('');\r\n  };\r\n\r\n  // Close popup when clicking outside\r\n  const handleBackdropClick = () => {\r\n    setIsOpen(false);\r\n    setQuery('');\r\n  };\r\n\r\n  if (!isOpen) {\r\n    return (\r\n      <button\r\n        onClick={() => setIsOpen(true)}\r\n        className=\"flex items-center space-x-2 px-3 py-2 text-sm text-gray-500 hover:text-gray-700 rounded-lg hover:bg-gray-100 transition-colors\"\r\n      >\r\n        <Search className=\"w-4 h-4\" />\r\n        <span>Quick search...</span>\r\n        <kbd className=\"hidden sm:inline-flex items-center px-2 py-0.5 border border-gray-200 rounded text-xs\">\r\n          âŒ˜K\r\n        </kbd>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-25 flex items-start justify-center pt-16 z-50\" onClick={handleBackdropClick}>\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md mx-4\" onClick={(e) => e?.stopPropagation()}>\r\n        <div className=\"p-4 border-b border-gray-200\">\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-3 w-4 h-4 text-gray-400\" />\r\n            <input\r\n              ref={inputRef}\r\n              type=\"text\"\r\n              placeholder=\"Search pages and features...\"\r\n              value={query}\r\n              onChange={(e) => setQuery(e?.target?.value)}\r\n              className=\"w-full pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"max-h-96 overflow-y-auto\">\r\n          {results?.map((item, index) => {\r\n            const Icon = item?.icon;\r\n            return (\r\n              <button\r\n                key={item?.path}\r\n                onClick={() => handleSelect(item)}\r\n                className=\"w-full text-left px-4 py-3 hover:bg-gray-50 focus:bg-gray-50 focus:outline-none border-b border-gray-100 last:border-b-0\"\r\n              >\r\n                <div className=\"flex items-center space-x-3\">\r\n                  <Icon className=\"w-5 h-5 text-gray-400\" />\r\n                  <div>\r\n                    <div className=\"font-medium text-gray-900\">{item?.name}</div>\r\n                    <div className=\"text-sm text-gray-500\">{item?.description}</div>\r\n                  </div>\r\n                </div>\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div className=\"p-3 border-t border-gray-200 text-xs text-gray-500 flex items-center justify-between\">\r\n          <span>Press ESC to close</span>\r\n          <span>â†µ to navigate</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuickNavigation;","import React, { useState } from 'react';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport Icon from '../AppIcon';\r\n\r\nconst ThemeSelector = ({ className = '' }) => {\r\n  const { currentTheme, changeTheme, availableThemes } = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleThemeChange = (themeKey) => {\r\n    changeTheme(themeKey);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={`relative ${className}`}>\r\n      {/* Theme Selector Button - Enhanced for mobile */}\r\n      <button\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"flex items-center space-x-2 px-3 py-2 text-sm font-medium text-gray-600 hover:text-gray-900 rounded-lg hover:bg-gray-50 transition-colors duration-200 min-h-[44px] touch-manipulation\"\r\n        title=\"Change Theme Style\"\r\n      >\r\n        <Icon name=\"Palette\" size={18} />\r\n        <span className=\"hidden sm:block\">Style</span>\r\n        <Icon name=\"ChevronDown\" size={14} className={`transform transition-transform duration-200 ${isOpen ? 'rotate-180' : ''}`} />\r\n      </button>\r\n      \r\n      {/* Dropdown Menu - Mobile optimized */}\r\n      {isOpen && (\r\n        <>\r\n          {/* Backdrop */}\r\n          <div\r\n            className=\"fixed inset-0 z-30\"\r\n            onClick={() => setIsOpen(false)}\r\n          />\r\n          \r\n          {/* Menu - Responsive sizing */}\r\n          <div className=\"absolute right-0 mt-2 w-80 md:w-96 bg-white rounded-xl shadow-2xl border-2 border-gray-200 py-2 z-40 max-h-96 overflow-y-auto\">\r\n            <div className=\"px-4 py-3 border-b border-gray-100\">\r\n              <h3 className=\"text-lg font-bold text-gray-900 mb-1\">UI Style Presets</h3>\r\n              <p className=\"text-sm text-gray-600\">Choose your preferred interface style</p>\r\n            </div>\r\n            \r\n            {Object.entries(availableThemes)?.map(([key, theme]) => (\r\n              <button\r\n                key={key}\r\n                onClick={() => handleThemeChange(key)}\r\n                className={`w-full px-4 py-4 text-left hover:bg-gray-50 transition-colors duration-150 border-l-4 touch-manipulation min-h-[60px] ${\r\n                  currentTheme === key \r\n                    ? 'border-l-indigo-500 bg-indigo-50' :'border-l-transparent'\r\n                }`}\r\n              >\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-3 mb-2\">\r\n                      <h4 className=\"text-base font-bold text-gray-900\">\r\n                        {theme?.name}\r\n                      </h4>\r\n                      {currentTheme === key && (\r\n                        <div className=\"flex items-center space-x-1 px-2 py-1 bg-indigo-100 rounded-full\">\r\n                          <Icon name=\"Check\" size={12} className=\"text-indigo-600\" />\r\n                          <span className=\"text-xs font-semibold text-indigo-600\">Active</span>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 leading-relaxed\">\r\n                      {theme?.description}\r\n                    </p>\r\n                  </div>\r\n                  \r\n                  {/* Theme Preview Icons - Added neutral-luxe */}\r\n                  <div className=\"ml-4 flex flex-col space-y-1\">\r\n                    {key === 'default' && (\r\n                      <>\r\n                        <div className=\"w-4 h-2 bg-gradient-to-r from-indigo-400 to-purple-400 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-gradient-to-r from-slate-300 to-indigo-300 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-gradient-to-r from-emerald-300 to-green-300 rounded-sm\"></div>\r\n                      </>\r\n                    )}\r\n                    {key === 'neutral-luxe' && (\r\n                      <>\r\n                        <div className=\"w-4 h-2 bg-white border border-gray-300 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-gray-50 border border-gray-300 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-blue-600 rounded-sm\"></div>\r\n                      </>\r\n                    )}\r\n                    {key === 'carded' && (\r\n                      <>\r\n                        <div className=\"w-4 h-2 bg-white border-2 border-slate-300 rounded-sm shadow-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-white border-2 border-indigo-300 rounded-sm shadow-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-gradient-to-r from-indigo-500 to-blue-500 rounded-sm shadow-sm\"></div>\r\n                      </>\r\n                    )}\r\n                    {key === 'compact' && (\r\n                      <>\r\n                        <div className=\"w-4 h-1.5 bg-gray-300 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-1.5 bg-indigo-500 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-1.5 bg-gray-400 rounded-sm\"></div>\r\n                      </>\r\n                    )}\r\n                    {key === 'zebra' && (\r\n                      <>\r\n                        <div className=\"w-4 h-2 bg-white border border-gray-400 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-gray-100 border border-gray-400 rounded-sm\"></div>\r\n                        <div className=\"w-4 h-2 bg-white border border-gray-400 rounded-sm\"></div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Style Features - Added neutral-luxe */}\r\n                <div className=\"mt-3 flex flex-wrap gap-2\">\r\n                  {key === 'default' && (\r\n                    <>\r\n                      <span className=\"px-2 py-1 bg-purple-100 text-purple-700 text-xs font-medium rounded-full\">Gradients</span>\r\n                      <span className=\"px-2 py-1 bg-indigo-100 text-indigo-700 text-xs font-medium rounded-full\">Premium</span>\r\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">Luxury</span>\r\n                    </>\r\n                  )}\r\n                  {key === 'neutral-luxe' && (\r\n                    <>\r\n                      <span className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">Light</span>\r\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">Mobile-First</span>\r\n                      <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs font-medium rounded-full\">Dealership</span>\r\n                    </>\r\n                  )}\r\n                  {key === 'carded' && (\r\n                    <>\r\n                      <span className=\"px-2 py-1 bg-slate-100 text-slate-700 text-xs font-medium rounded-full\">Material</span>\r\n                      <span className=\"px-2 py-1 bg-indigo-100 text-indigo-700 text-xs font-medium rounded-full\">Elevated</span>\r\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">Clean</span>\r\n                    </>\r\n                  )}\r\n                  {key === 'compact' && (\r\n                    <>\r\n                      <span className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">Dense</span>\r\n                      <span className=\"px-2 py-1 bg-indigo-100 text-indigo-700 text-xs font-medium rounded-full\">Efficient</span>\r\n                      <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs font-medium rounded-full\">Space-Saving</span>\r\n                    </>\r\n                  )}\r\n                  {key === 'zebra' && (\r\n                    <>\r\n                      <span className=\"px-2 py-1 bg-gray-100 text-gray-700 text-xs font-medium rounded-full\">Striped</span>\r\n                      <span className=\"px-2 py-1 bg-blue-100 text-blue-700 text-xs font-medium rounded-full\">Readable</span>\r\n                      <span className=\"px-2 py-1 bg-green-100 text-green-700 text-xs font-medium rounded-full\">Scannable</span>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </button>\r\n            ))}\r\n\r\n            <div className=\"px-4 py-3 border-t border-gray-100 mt-2\">\r\n              <p className=\"text-xs text-gray-500\">\r\n                ðŸ’¡ Theme preferences are saved automatically and persist across sessions\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeSelector;","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { Menu, X, Bell, User, LogOut, Settings, Calendar, Car, Package, BarChart3, Clock, FileText } from 'lucide-react';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { notificationService } from '../../services/notificationService';\r\nimport QuickNavigation from '../common/QuickNavigation';\r\nimport ThemeSelector from '../common/ThemeSelector';\r\nimport Icon from '../AppIcon';\r\n\r\nconst Navbar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\r\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\r\n  const [notificationCount, setNotificationCount] = useState(0);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [notificationLoading, setNotificationLoading] = useState(false);\r\n  \r\n  const { user, userProfile, signOut } = useAuth();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const navigationLinks = [\r\n    { name: 'Calendar', href: '/calendar-flow-management-center', icon: Calendar },\r\n    { name: 'Appointments', href: '/currently-active-appointments', icon: Clock, shortName: 'Active' },\r\n    { name: 'Claims', href: '/claims-management-center', icon: FileText },\r\n    { name: 'Deals', href: '/deals', icon: Package },\r\n    { name: 'Analytics', href: '/advanced-business-intelligence-analytics', icon: BarChart3 },\r\n    { name: 'Admin', href: '/admin', icon: Settings },\r\n  ];\r\n\r\n  // Load notifications on component mount and when user changes\r\n  useEffect(() => {\r\n    let subscription = null;\r\n    \r\n    const loadNotifications = async () => {\r\n      if (!user?.id) {\r\n        setNotificationCount(0);\r\n        setNotifications([]);\r\n        return;\r\n      }\r\n\r\n      setNotificationLoading(true);\r\n      \r\n      try {\r\n        // Load initial notifications\r\n        const [countResult, notificationsResult] = await Promise.all([\r\n          notificationService?.getNotificationCount(user?.id),\r\n          notificationService?.getNotifications(user?.id)\r\n        ]);\r\n\r\n        if (countResult?.error) {\r\n          console.warn('Notification count error:', countResult?.error);\r\n          setNotificationCount(0);\r\n        } else {\r\n          setNotificationCount(countResult?.count || 0);\r\n        }\r\n\r\n        if (notificationsResult?.error) {\r\n          console.warn('Notifications load error:', notificationsResult?.error);\r\n          setNotifications([]);\r\n        } else {\r\n          setNotifications(notificationsResult?.data || []);\r\n        }\r\n\r\n        // Set up real-time subscription\r\n        subscription = notificationService?.subscribeToNotifications(\r\n          user?.id,\r\n          (result) => {\r\n            if (result?.error) {\r\n              console.warn('Real-time notification error:', result?.error);\r\n            } else {\r\n              setNotificationCount(result?.count || 0);\r\n            }\r\n          }\r\n        );\r\n        \r\n      } catch (error) {\r\n        console.warn('Failed to load notifications:', error);\r\n        setNotificationCount(0);\r\n        setNotifications([]);\r\n      } finally {\r\n        setNotificationLoading(false);\r\n      }\r\n    };\r\n\r\n    loadNotifications();\r\n\r\n    // Cleanup subscription on unmount or user change\r\n    return () => {\r\n      if (subscription) {\r\n        notificationService?.unsubscribeFromNotifications(subscription);\r\n      }\r\n    };\r\n  }, [user?.id]);\r\n\r\n  const handleSignOut = async () => {\r\n    try {\r\n      await signOut();\r\n      navigate('/auth');\r\n    } catch (error) {\r\n      console.error('Error signing out:', error);\r\n    }\r\n  };\r\n\r\n  const isActivePath = (path) => {\r\n    return location?.pathname === path || location?.pathname?.startsWith(path + '/');\r\n  };\r\n\r\n  const formatNotificationTime = (timestamp) => {\r\n    if (!timestamp) return '';\r\n    \r\n    try {\r\n      const date = new Date(timestamp);\r\n      const now = new Date();\r\n      const diffInHours = (now - date) / (1000 * 60 * 60);\r\n      \r\n      if (diffInHours < 1) {\r\n        const diffInMinutes = Math.floor((now - date) / (1000 * 60));\r\n        return diffInMinutes <= 0 ? 'Just now' : `${diffInMinutes}m ago`;\r\n      } else if (diffInHours < 24) {\r\n        return `${Math.floor(diffInHours)}h ago`;\r\n      } else {\r\n        const diffInDays = Math.floor(diffInHours / 24);\r\n        return `${diffInDays}d ago`;\r\n      }\r\n    } catch (error) {\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Mobile Bottom Navigation - Updated for 5 items with better spacing */}\r\n      <nav className=\"md:hidden fixed bottom-0 left-0 right-0 z-50 bg-white border-t border-gray-200 shadow-lg\">\r\n        <div className=\"grid grid-cols-5 h-16\">\r\n          {navigationLinks?.slice(0, 5)?.map((link) => {\r\n            const Icon = link?.icon;\r\n            const isActive = isActivePath(link?.href);\r\n            const displayName = link?.shortName || link?.name;\r\n            return (\r\n              <Link\r\n                key={link?.name}\r\n                to={link?.href}\r\n                className={`flex flex-col items-center justify-center space-y-1 px-1 transition-colors duration-200 ${\r\n                  isActive\r\n                    ? 'text-blue-600 bg-blue-50' :'text-gray-600 hover:text-blue-600 hover:bg-gray-50'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-4 h-4\" />\r\n                <span className=\"text-[10px] font-medium leading-tight text-center\">{displayName}</span>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </nav>\r\n      \r\n      {/* Desktop Header Navigation - Streamlined for space */}\r\n      <nav className=\"hidden md:block fixed top-0 left-0 right-0 z-50 bg-white border-b border-gray-200 shadow-sm\">\r\n        <div className=\"max-w-7xl mx-auto px-4 lg:px-6\">\r\n          <div className=\"flex justify-between items-center h-16\">\r\n            {/* Logo - Compact for space */}\r\n            <div className=\"flex items-center\">\r\n              <Link to=\"/\" className=\"flex items-center space-x-2 group\">\r\n                <div className=\"w-9 h-9 bg-blue-600 rounded-lg flex items-center justify-center shadow-md group-hover:bg-blue-700 transition-colors duration-200\">\r\n                  <Car className=\"w-4 h-4 text-white\" />\r\n                </div>\r\n                {/* Reserved space for future logo - no text for now */}\r\n                <div className=\"w-2\"></div>\r\n              </Link>\r\n            </div>\r\n\r\n            {/* Desktop Navigation - Tighter spacing for all 6 items */}\r\n            <div className=\"flex items-center space-x-1\">\r\n              {navigationLinks?.map((link) => {\r\n                const Icon = link?.icon;\r\n                const isActive = isActivePath(link?.href);\r\n                return (\r\n                  <Link\r\n                    key={link?.name}\r\n                    to={link?.href}\r\n                    className={`flex items-center space-x-1.5 px-2.5 py-2 rounded-lg text-sm font-medium transition-all duration-200 ${\r\n                      isActive\r\n                        ? 'bg-blue-50 text-blue-700 border border-blue-200' :'text-gray-600 hover:text-blue-600 hover:bg-gray-50'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span className=\"hidden lg:inline\">{link?.name}</span>\r\n                  </Link>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Right Section */}\r\n            <div className=\"flex items-center space-x-4\">\r\n              {/* Quick Navigation */}\r\n              <div className=\"hidden lg:block\">\r\n                <QuickNavigation />\r\n              </div>\r\n\r\n              {/* Theme Selector */}\r\n              <div className=\"hidden lg:block\">\r\n                <ThemeSelector />\r\n              </div>\r\n\r\n              {/* Enhanced Notifications with Real Data */}\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={() => setIsNotificationOpen(!isNotificationOpen)}\r\n                  className=\"relative p-2 text-gray-400 hover:text-blue-600 transition-colors duration-200 rounded-lg hover:bg-gray-50\"\r\n                >\r\n                  <Bell className=\"w-5 h-5\" />\r\n                  {notificationCount > 0 && (\r\n                    <div className=\"absolute -top-1 -right-1 min-w-[18px] h-[18px] bg-red-500 rounded-full text-xs text-white flex items-center justify-center font-bold px-1\">\r\n                      {notificationCount > 99 ? '99+' : notificationCount}\r\n                    </div>\r\n                  )}\r\n                </button>\r\n\r\n                {/* Notification Dropdown */}\r\n                {isNotificationOpen && (\r\n                  <div className=\"absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-lg border border-gray-200 py-2 z-50 max-h-96 overflow-y-auto\">\r\n                    <div className=\"px-4 py-3 border-b border-gray-200\">\r\n                      <div className=\"flex items-center justify-between\">\r\n                        <h3 className=\"text-sm font-medium text-gray-900\">\r\n                          Recent Activity\r\n                        </h3>\r\n                        {notificationLoading && (\r\n                          <div className=\"text-xs text-gray-500\">Loading...</div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"py-1\">\r\n                      {notifications?.length > 0 ? (\r\n                        notifications?.map((notification) => (\r\n                          <div\r\n                            key={notification?.id}\r\n                            className=\"px-4 py-3 hover:bg-gray-50 border-b border-gray-100 last:border-b-0\"\r\n                          >\r\n                            <div className=\"flex items-start space-x-3\">\r\n                              <div className=\"flex-shrink-0 mt-1\">\r\n                                <div className={`w-2 h-2 rounded-full ${\r\n                                  notification?.is_successful ? 'bg-green-500' : 'bg-red-500'\r\n                                }`} />\r\n                              </div>\r\n                              <div className=\"flex-1 min-w-0\">\r\n                                <p className=\"text-sm text-gray-900 truncate\">\r\n                                  {notification?.subject || 'Communication'}\r\n                                </p>\r\n                                <p className=\"text-xs text-gray-500 mt-1 line-clamp-2\">\r\n                                  {notification?.message || `${notification?.communication_type} to ${notification?.recipient}`}\r\n                                </p>\r\n                                <p className=\"text-xs text-gray-400 mt-1\">\r\n                                  {formatNotificationTime(notification?.sent_at)}\r\n                                </p>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        ))\r\n                      ) : (\r\n                        <div className=\"px-4 py-6 text-center\">\r\n                          <Bell className=\"w-8 h-8 text-gray-300 mx-auto mb-2\" />\r\n                          <p className=\"text-sm text-gray-500\">No recent notifications</p>\r\n                          <p className=\"text-xs text-gray-400 mt-1\">\r\n                            Communications will appear here\r\n                          </p>\r\n                        </div>\r\n                      )}\r\n                      \r\n                      {notifications?.length > 0 && (\r\n                        <div className=\"px-4 py-3 border-t border-gray-200\">\r\n                          <Link\r\n                            to=\"/communications\"\r\n                            onClick={() => setIsNotificationOpen(false)}\r\n                            className=\"text-sm text-blue-600 hover:text-blue-700 font-medium\"\r\n                          >\r\n                            View all communications â†’\r\n                          </Link>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* User Profile Dropdown */}\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={() => setIsProfileOpen(!isProfileOpen)}\r\n                  className=\"flex items-center space-x-3 p-2 text-gray-600 hover:text-blue-600 rounded-lg hover:bg-gray-50 transition-colors duration-200\"\r\n                >\r\n                  <div className=\"w-8 h-8 bg-gray-200 rounded-lg flex items-center justify-center\">\r\n                    <User className=\"w-4 h-4\" />\r\n                  </div>\r\n                  <div className=\"hidden xl:block text-left\">\r\n                    <p className=\"text-sm font-medium\">\r\n                      {userProfile?.full_name || user?.email?.split('@')?.[0] || 'User'}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 capitalize\">\r\n                      {userProfile?.role || 'Staff'}\r\n                    </p>\r\n                  </div>\r\n                </button>\r\n\r\n                {/* Dropdown Menu */}\r\n                {isProfileOpen && (\r\n                  <div className=\"absolute right-0 mt-2 w-56 bg-white rounded-lg shadow-lg border border-gray-200 py-1 z-50\">\r\n                    <div className=\"px-4 py-3 border-b border-gray-200\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center\">\r\n                          <User className=\"w-5 h-5 text-gray-600\" />\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-900\">\r\n                            {userProfile?.full_name || 'User'}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-500\">{user?.email}</p>\r\n                          {userProfile?.role && (\r\n                            <p className=\"text-xs text-blue-600 capitalize font-medium\">{userProfile?.role}</p>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                    <div className=\"py-1\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setIsProfileOpen(false);\r\n                          navigate('/profile');\r\n                        }}\r\n                        className=\"flex items-center w-full px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 hover:text-blue-600 transition-colors duration-200\"\r\n                      >\r\n                        <User className=\"w-4 h-4 mr-3\" />\r\n                        Profile Settings\r\n                      </button>\r\n                      \r\n                      <button\r\n                        onClick={handleSignOut}\r\n                        className=\"flex items-center w-full px-4 py-2 text-sm text-red-600 hover:bg-red-50 transition-colors duration-200\"\r\n                      >\r\n                        <LogOut className=\"w-4 h-4 mr-3\" />\r\n                        Sign Out\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n      \r\n      {/* Mobile Top Header - Simplified */}\r\n      <nav className=\"md:hidden bg-white border-b border-gray-200 shadow-sm sticky top-0 z-40\">\r\n        <div className=\"flex items-center justify-between h-16 px-4\">\r\n          {/* Logo - Compact */}\r\n          <Link to=\"/\" className=\"flex items-center space-x-2\">\r\n            <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\r\n              <Car className=\"w-4 h-4 text-white\" />\r\n            </div>\r\n            {/* Reserved minimal space for future logo */}\r\n            <div className=\"w-1\"></div>\r\n          </Link>\r\n\r\n          {/* Mobile Actions */}\r\n          <div className=\"flex items-center space-x-3\">\r\n            {/* Mobile Notifications */}\r\n            <button \r\n              onClick={() => setIsNotificationOpen(!isNotificationOpen)}\r\n              className=\"relative p-2 text-gray-400 hover:text-blue-600\"\r\n            >\r\n              <Bell className=\"w-5 h-5\" />\r\n              {notificationCount > 0 && (\r\n                <div className=\"absolute -top-1 -right-1 min-w-[16px] h-[16px] bg-red-500 rounded-full text-xs text-white flex items-center justify-center font-bold px-1\">\r\n                  {notificationCount > 99 ? '99+' : notificationCount}\r\n                </div>\r\n              )}\r\n            </button>\r\n\r\n            {/* Menu Button */}\r\n            <button\r\n              onClick={() => setIsMenuOpen(!isMenuOpen)}\r\n              className=\"p-2 text-gray-600 hover:text-blue-600 rounded-lg hover:bg-gray-50\"\r\n            >\r\n              {isMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Mobile Notification Dropdown */}\r\n        {isNotificationOpen && (\r\n          <div className=\"border-t border-gray-200 bg-white max-h-60 overflow-y-auto\">\r\n            <div className=\"px-4 py-3 border-b border-gray-100\">\r\n              <h3 className=\"text-sm font-medium text-gray-900\">Recent Activity</h3>\r\n            </div>\r\n            {notifications?.length > 0 ? (\r\n              notifications?.slice(0, 3)?.map((notification) => (\r\n                <div key={notification?.id} className=\"px-4 py-3 border-b border-gray-100 last:border-b-0\">\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <div className={`w-2 h-2 rounded-full mt-2 flex-shrink-0 ${\r\n                      notification?.is_successful ? 'bg-green-500' : 'bg-red-500'\r\n                    }`} />\r\n                    <div className=\"flex-1 min-w-0\">\r\n                      <p className=\"text-sm text-gray-900 truncate\">\r\n                        {notification?.subject || 'Communication'}\r\n                      </p>\r\n                      <p className=\"text-xs text-gray-500 mt-1\">\r\n                        {formatNotificationTime(notification?.sent_at)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div className=\"px-4 py-6 text-center\">\r\n                <p className=\"text-sm text-gray-500\">No recent notifications</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {/* Mobile Slide-out Menu */}\r\n        {isMenuOpen && (\r\n          <>\r\n            <div\r\n              className=\"fixed inset-0 bg-black/50 z-40\"\r\n              onClick={() => setIsMenuOpen(false)}\r\n            />\r\n            <div className=\"fixed top-16 right-0 w-72 h-full bg-white shadow-xl z-50 overflow-y-auto border-l border-gray-200\">\r\n              <div className=\"p-6\">\r\n                {/* User Profile Section */}\r\n                <div className=\"flex items-center space-x-4 p-4 bg-gray-50 rounded-xl mb-6\">\r\n                  <div className=\"w-12 h-12 bg-gray-200 rounded-xl flex items-center justify-center\">\r\n                    <User className=\"w-6 h-6 text-gray-600\" />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <p className=\"text-sm font-medium text-gray-900\">\r\n                      {userProfile?.full_name || user?.email?.split('@')?.[0] || 'User'}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500\">{user?.email}</p>\r\n                    {userProfile?.role && (\r\n                      <p className=\"text-xs text-blue-600 capitalize font-medium\">{userProfile?.role}</p>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Theme Selector Mobile */}\r\n                <div className=\"mb-6\">\r\n                  <ThemeSelector className=\"w-full\" />\r\n                </div>\r\n\r\n                {/* Navigation Links */}\r\n                <div className=\"space-y-1 mb-6\">\r\n                  <h3 className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-3\">Navigation</h3>\r\n                  {navigationLinks?.map((link) => {\r\n                    const Icon = link?.icon;\r\n                    const isActive = isActivePath(link?.href);\r\n                    return (\r\n                      <Link\r\n                        key={link?.name}\r\n                        to={link?.href}\r\n                        onClick={() => setIsMenuOpen(false)}\r\n                        className={`flex items-center space-x-3 px-3 py-3 rounded-lg text-sm font-medium transition-colors duration-200 ${\r\n                          isActive\r\n                            ? 'bg-blue-50 text-blue-700 border border-blue-200' :'text-gray-600 hover:text-blue-600 hover:bg-gray-50'\r\n                        }`}\r\n                      >\r\n                        <Icon className=\"w-5 h-5\" />\r\n                        <span>{link?.name}</span>\r\n                      </Link>\r\n                    );\r\n                  })}\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"space-y-2 pt-6 border-t border-gray-200\">\r\n                  <h3 className=\"text-xs font-medium text-gray-500 uppercase tracking-wider mb-3\">Account</h3>\r\n                  \r\n                  <button\r\n                    onClick={() => {\r\n                      setIsMenuOpen(false);\r\n                      navigate('/profile');\r\n                    }}\r\n                    className=\"flex items-center w-full space-x-3 px-3 py-3 text-sm text-gray-600 hover:text-blue-600 hover:bg-gray-50 rounded-lg transition-colors duration-200\"\r\n                  >\r\n                    <User className=\"w-5 h-5\" />\r\n                    <span>Profile Settings</span>\r\n                  </button>\r\n                  \r\n                  <button\r\n                    onClick={handleSignOut}\r\n                    className=\"flex items-center w-full space-x-3 px-3 py-3 text-sm text-red-600 hover:bg-red-50 rounded-lg transition-colors duration-200\"\r\n                  >\r\n                    <LogOut className=\"w-5 h-5\" />\r\n                    <span>Sign Out</span>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </nav>\r\n      \r\n      {/* Click outside to close dropdowns */}\r\n      {(isProfileOpen || isNotificationOpen) && (\r\n        <div\r\n          className=\"fixed inset-0 z-30\"\r\n          onClick={() => {\r\n            setIsProfileOpen(false);\r\n            setIsNotificationOpen(false);\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;"],"names":["notificationService","userId","opts","q","_b","_a","supabase","data","_d","_c","weekAgo","recentNotifications","notification","error","_e","communications","pendingSMS","callback","subscription","QuickNavigation","isOpen","setIsOpen","useState","query","setQuery","results","setResults","navigate","useNavigate","inputRef","useRef","navigationItems","Calendar","Car","Package","Settings","BarChart3","useEffect","filtered","item","keyword","handleKeyDown","e","handleSelect","handleBackdropClick","jsx","jsxs","Search","index","Icon","ThemeSelector","className","currentTheme","changeTheme","availableThemes","useTheme","handleThemeChange","themeKey","Fragment","key","theme","Navbar","isMenuOpen","setIsMenuOpen","isProfileOpen","setIsProfileOpen","isNotificationOpen","setIsNotificationOpen","notificationCount","setNotificationCount","notifications","setNotifications","notificationLoading","setNotificationLoading","user","userProfile","signOut","useAuth","location","useLocation","navigationLinks","Clock","FileText","countResult","notificationsResult","result","handleSignOut","isActivePath","path","formatNotificationTime","timestamp","date","now","diffInHours","diffInMinutes","link","isActive","displayName","Link","Bell","User","LogOut","X","Menu","_f"],"mappings":"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"}